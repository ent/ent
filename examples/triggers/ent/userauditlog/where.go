// Code generated by ent, DO NOT EDIT.

package userauditlog

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/examples/triggers/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldLTE(FieldID, id))
}

// OperationType applies equality check predicate on the "operation_type" field. It's identical to OperationTypeEQ.
func OperationType(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldEQ(FieldOperationType, v))
}

// OperationTime applies equality check predicate on the "operation_time" field. It's identical to OperationTimeEQ.
func OperationTime(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldEQ(FieldOperationTime, v))
}

// OldValue applies equality check predicate on the "old_value" field. It's identical to OldValueEQ.
func OldValue(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldEQ(FieldOldValue, v))
}

// NewValue applies equality check predicate on the "new_value" field. It's identical to NewValueEQ.
func NewValue(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldEQ(FieldNewValue, v))
}

// OperationTypeEQ applies the EQ predicate on the "operation_type" field.
func OperationTypeEQ(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldEQ(FieldOperationType, v))
}

// OperationTypeNEQ applies the NEQ predicate on the "operation_type" field.
func OperationTypeNEQ(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldNEQ(FieldOperationType, v))
}

// OperationTypeIn applies the In predicate on the "operation_type" field.
func OperationTypeIn(vs ...string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldIn(FieldOperationType, vs...))
}

// OperationTypeNotIn applies the NotIn predicate on the "operation_type" field.
func OperationTypeNotIn(vs ...string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldNotIn(FieldOperationType, vs...))
}

// OperationTypeGT applies the GT predicate on the "operation_type" field.
func OperationTypeGT(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldGT(FieldOperationType, v))
}

// OperationTypeGTE applies the GTE predicate on the "operation_type" field.
func OperationTypeGTE(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldGTE(FieldOperationType, v))
}

// OperationTypeLT applies the LT predicate on the "operation_type" field.
func OperationTypeLT(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldLT(FieldOperationType, v))
}

// OperationTypeLTE applies the LTE predicate on the "operation_type" field.
func OperationTypeLTE(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldLTE(FieldOperationType, v))
}

// OperationTypeContains applies the Contains predicate on the "operation_type" field.
func OperationTypeContains(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldContains(FieldOperationType, v))
}

// OperationTypeHasPrefix applies the HasPrefix predicate on the "operation_type" field.
func OperationTypeHasPrefix(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldHasPrefix(FieldOperationType, v))
}

// OperationTypeHasSuffix applies the HasSuffix predicate on the "operation_type" field.
func OperationTypeHasSuffix(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldHasSuffix(FieldOperationType, v))
}

// OperationTypeEqualFold applies the EqualFold predicate on the "operation_type" field.
func OperationTypeEqualFold(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldEqualFold(FieldOperationType, v))
}

// OperationTypeContainsFold applies the ContainsFold predicate on the "operation_type" field.
func OperationTypeContainsFold(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldContainsFold(FieldOperationType, v))
}

// OperationTimeEQ applies the EQ predicate on the "operation_time" field.
func OperationTimeEQ(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldEQ(FieldOperationTime, v))
}

// OperationTimeNEQ applies the NEQ predicate on the "operation_time" field.
func OperationTimeNEQ(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldNEQ(FieldOperationTime, v))
}

// OperationTimeIn applies the In predicate on the "operation_time" field.
func OperationTimeIn(vs ...string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldIn(FieldOperationTime, vs...))
}

// OperationTimeNotIn applies the NotIn predicate on the "operation_time" field.
func OperationTimeNotIn(vs ...string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldNotIn(FieldOperationTime, vs...))
}

// OperationTimeGT applies the GT predicate on the "operation_time" field.
func OperationTimeGT(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldGT(FieldOperationTime, v))
}

// OperationTimeGTE applies the GTE predicate on the "operation_time" field.
func OperationTimeGTE(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldGTE(FieldOperationTime, v))
}

// OperationTimeLT applies the LT predicate on the "operation_time" field.
func OperationTimeLT(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldLT(FieldOperationTime, v))
}

// OperationTimeLTE applies the LTE predicate on the "operation_time" field.
func OperationTimeLTE(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldLTE(FieldOperationTime, v))
}

// OperationTimeContains applies the Contains predicate on the "operation_time" field.
func OperationTimeContains(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldContains(FieldOperationTime, v))
}

// OperationTimeHasPrefix applies the HasPrefix predicate on the "operation_time" field.
func OperationTimeHasPrefix(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldHasPrefix(FieldOperationTime, v))
}

// OperationTimeHasSuffix applies the HasSuffix predicate on the "operation_time" field.
func OperationTimeHasSuffix(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldHasSuffix(FieldOperationTime, v))
}

// OperationTimeEqualFold applies the EqualFold predicate on the "operation_time" field.
func OperationTimeEqualFold(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldEqualFold(FieldOperationTime, v))
}

// OperationTimeContainsFold applies the ContainsFold predicate on the "operation_time" field.
func OperationTimeContainsFold(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldContainsFold(FieldOperationTime, v))
}

// OldValueEQ applies the EQ predicate on the "old_value" field.
func OldValueEQ(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldEQ(FieldOldValue, v))
}

// OldValueNEQ applies the NEQ predicate on the "old_value" field.
func OldValueNEQ(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldNEQ(FieldOldValue, v))
}

// OldValueIn applies the In predicate on the "old_value" field.
func OldValueIn(vs ...string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldIn(FieldOldValue, vs...))
}

// OldValueNotIn applies the NotIn predicate on the "old_value" field.
func OldValueNotIn(vs ...string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldNotIn(FieldOldValue, vs...))
}

// OldValueGT applies the GT predicate on the "old_value" field.
func OldValueGT(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldGT(FieldOldValue, v))
}

// OldValueGTE applies the GTE predicate on the "old_value" field.
func OldValueGTE(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldGTE(FieldOldValue, v))
}

// OldValueLT applies the LT predicate on the "old_value" field.
func OldValueLT(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldLT(FieldOldValue, v))
}

// OldValueLTE applies the LTE predicate on the "old_value" field.
func OldValueLTE(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldLTE(FieldOldValue, v))
}

// OldValueContains applies the Contains predicate on the "old_value" field.
func OldValueContains(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldContains(FieldOldValue, v))
}

// OldValueHasPrefix applies the HasPrefix predicate on the "old_value" field.
func OldValueHasPrefix(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldHasPrefix(FieldOldValue, v))
}

// OldValueHasSuffix applies the HasSuffix predicate on the "old_value" field.
func OldValueHasSuffix(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldHasSuffix(FieldOldValue, v))
}

// OldValueIsNil applies the IsNil predicate on the "old_value" field.
func OldValueIsNil() predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldIsNull(FieldOldValue))
}

// OldValueNotNil applies the NotNil predicate on the "old_value" field.
func OldValueNotNil() predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldNotNull(FieldOldValue))
}

// OldValueEqualFold applies the EqualFold predicate on the "old_value" field.
func OldValueEqualFold(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldEqualFold(FieldOldValue, v))
}

// OldValueContainsFold applies the ContainsFold predicate on the "old_value" field.
func OldValueContainsFold(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldContainsFold(FieldOldValue, v))
}

// NewValueEQ applies the EQ predicate on the "new_value" field.
func NewValueEQ(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldEQ(FieldNewValue, v))
}

// NewValueNEQ applies the NEQ predicate on the "new_value" field.
func NewValueNEQ(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldNEQ(FieldNewValue, v))
}

// NewValueIn applies the In predicate on the "new_value" field.
func NewValueIn(vs ...string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldIn(FieldNewValue, vs...))
}

// NewValueNotIn applies the NotIn predicate on the "new_value" field.
func NewValueNotIn(vs ...string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldNotIn(FieldNewValue, vs...))
}

// NewValueGT applies the GT predicate on the "new_value" field.
func NewValueGT(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldGT(FieldNewValue, v))
}

// NewValueGTE applies the GTE predicate on the "new_value" field.
func NewValueGTE(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldGTE(FieldNewValue, v))
}

// NewValueLT applies the LT predicate on the "new_value" field.
func NewValueLT(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldLT(FieldNewValue, v))
}

// NewValueLTE applies the LTE predicate on the "new_value" field.
func NewValueLTE(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldLTE(FieldNewValue, v))
}

// NewValueContains applies the Contains predicate on the "new_value" field.
func NewValueContains(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldContains(FieldNewValue, v))
}

// NewValueHasPrefix applies the HasPrefix predicate on the "new_value" field.
func NewValueHasPrefix(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldHasPrefix(FieldNewValue, v))
}

// NewValueHasSuffix applies the HasSuffix predicate on the "new_value" field.
func NewValueHasSuffix(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldHasSuffix(FieldNewValue, v))
}

// NewValueIsNil applies the IsNil predicate on the "new_value" field.
func NewValueIsNil() predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldIsNull(FieldNewValue))
}

// NewValueNotNil applies the NotNil predicate on the "new_value" field.
func NewValueNotNil() predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldNotNull(FieldNewValue))
}

// NewValueEqualFold applies the EqualFold predicate on the "new_value" field.
func NewValueEqualFold(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldEqualFold(FieldNewValue, v))
}

// NewValueContainsFold applies the ContainsFold predicate on the "new_value" field.
func NewValueContainsFold(v string) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.FieldContainsFold(FieldNewValue, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.UserAuditLog) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.UserAuditLog) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.UserAuditLog) predicate.UserAuditLog {
	return predicate.UserAuditLog(sql.NotPredicates(p))
}
