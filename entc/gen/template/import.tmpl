{{/*
Copyright 2019-present Facebook Inc. All rights reserved.
This source code is licensed under the Apache 2.0 license found
in the LICENSE file in the root directory of this source tree.
*/}}

{{/* gotype: entgo.io/ent/entc/gen.Graph */}}

{{ define "import" }}
	{{ addPath "context" "errors" "fmt" "math" "strings" "time" "entgo.io/ent" "entgo.io/ent/dialect" }}
	{{- with $.Storage }}
		{{- range $import := .Imports }}
			{{ addPath $import }}
		{{- end }}
	{{- end }}

	{{- /* Ignore generting on graph templates (e.g. config.tmpl, client.tmpl, etc). */}}
	{{- if ne $.Config.Package $.Package }}
		{{ addPath (printf "%s/predicate" $.Config.Package) }}
		{{- /* Import external packages */}}
        {{- template "import/types" $ }}
	{{- end }}
{{ end }}

{{/* A template for importing fields with custom types */}}
{{ define "import/types" -}}
	{{- $fields := $.Fields }}{{ if $.HasOneFieldID }}{{ if $.ID.UserDefined }}{{ $fields = append $fields $.ID }}{{ end }}{{ end }}
	{{- range $f := $fields }}
		{{- $pkg := $f.Type.PkgPath }}
		{{- addPath $pkg }}
	{{- end }}
{{- end }}

{{ define "import/print" }}
import (
	{{- template "import/additional" $ }}
	{{- range $import := importLines }}
		{{- $import }}
	{{ end }}
)
{{- end }}

{{/* A template for allowing additional imports by ent extensions or user templates.*/}}
{{ define "import/additional" }}
	{{- with $tmpls := matchTemplate "import/additional/*" }}
		{{- range $tmpl := $tmpls }}
			{{- xtemplate $tmpl $ }}
		{{- end }}
	{{- end }}
	{{- if $.Storage }}
		{{- with $tmpls := matchTemplate (printf "dialect/%s/import/additional/*" $.Storage) }}
			{{- range $tmpl := $tmpls }}
				{{- xtemplate $tmpl $ }}
			{{- end }}
		{{- end }}
	{{- end }}
{{ end }}
