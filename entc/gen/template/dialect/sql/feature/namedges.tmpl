{{/*
Copyright 2019-present Facebook Inc. All rights reserved.
This source code is licensed under the Apache 2.0 license found
in the LICENSE file in the root directory of this source tree.
*/}}

{{/* gotype: entgo.io/ent/entc/gen.Type */}}

{{/* Templates used by the "namededges" feature-flag to allow eager-loading edges with dynamic names.. */}}

{{ define "dialect/sql/model/edges/fields/additional/namedges" }}
    {{- if $.FeatureEnabled "namedges" }}
        {{- with $.Edges }}
            // Edges that were loaded with dynamic name.
            {{- range $e := . }}
                named{{ $e.StructField }} map[string]{{ if not $e.Unique }}[]{{ end }}*{{ $e.Type.Name }}
            {{- end }}
        {{- end }}
    {{- end }}
{{ end }}

{{ define "dialect/sql/model/additional/namedges" }}
    {{- if $.FeatureEnabled "namedges" }}
        {{ $receiver := $.Receiver }}
        {{- range $e := $.Edges }}
            {{ $func := print "Named" $e.StructField }}
            // {{ $func }} returns the {{ $e.StructField }} named value or an error if the edge was not
            // loaded in eager-loading with this name{{ if $e.Unique }}, or loaded but was not found{{ end }}.
            func ({{ $receiver }} *{{ $.Name }}) Named{{ $e.StructField }}(name string) ({{ if not $e.Unique }}[]{{ end }}*{{ $e.Type.Name }}, error) {
                if {{ $receiver }}.Edges.named{{ $e.StructField }} == nil {
                    return nil, &NotLoadedError{edge: "{{ $e.Name }}"}
                }
                switch _e, ok := {{ $receiver }}.Edges.named{{ $e.StructField }}[name]; {
                case !ok:
                    return nil, &NotLoadedError{edge: "{{ $e.Name }}"}
                {{- if $e.Unique}}
                    case _e == nil:
                        // Edge was loaded but was not found.
                        return nil, &NotFoundError{label: {{ $e.Type.Package }}.Label}
                {{- end }}
                default:
                    return _e, nil
                }
            }
        {{- end }}
    {{- end }}
{{ end }}