{{/*
Copyright 2024-present Facebook Inc. All rights reserved.
This source code is licensed under the Apache 2.0 license found
in the LICENSE file in the root directory of this source tree.
*/}}

{{/* gotype: entgo.io/ent/entc/gen.Type */}}

{{/* Templates used by the "sql/indexhint" feature-flag to allows configuring the
 `USE INDEX` / `FORCE INDEX` clause for `SELECT`, `UPDATE`, and `DELETE` statements. */}}

{{ define "dialect/sql/query/fields/additional/indexhint" -}}
    {{- if $.FeatureEnabled "sql/indexhint" }}
		useIndex   []string
		forceIndex []string
	{{- end }}
{{- end }}

{{ define "dialect/sql/query/additional/indexhint" }}
{{- if $.FeatureEnabled "sql/indexhint" }}
{{- $builder := pascal $.Scope.Builder }}
{{- $receiver := receiver $builder }}
// UseIndex hints which indexes to use.
func ({{ $receiver }} *{{ $builder }}) UseIndex(idx ...string) *{{ $builder }} {
	{{ $receiver }}.useIndex = append({{ $receiver }}.useIndex, idx...)
	return {{ $receiver }}
}

// ForceIndex forces which indexes to use.
func ({{ $receiver }} *{{ $builder }}) ForceIndex(idx ...string) *{{ $builder }} {
	{{ $receiver }}.forceIndex = append({{ $receiver }}.forceIndex, idx...)
	return {{ $receiver }}
}
{{- end }}
{{- end }}

{{ define "dialect/sql/query/selector/indexhint" }}
{{- if $.FeatureEnabled "sql/indexhint" }}
{{- $builder := pascal $.Scope.Builder }}
{{- $receiver := receiver $builder }}
	if useIndex := {{ $receiver }}.useIndex; len(useIndex) > 0 {
	    t1.UseIndex(useIndex...)
	}
	if forceIndex := {{ $receiver }}.forceIndex; len(forceIndex) > 0 {
	    t1.ForceIndex(forceIndex...)
	}
{{- end }}
{{- end }}

{{ define "dialect/sql/query/spec/indexhint" }}
{{- if $.FeatureEnabled "sql/indexhint" }}
{{- $builder := pascal $.Scope.Builder }}
{{- $receiver := receiver $builder }}
	if useIndex := {{ $receiver }}.useIndex; len(useIndex) > 0 {
	    _spec.UseIndex = useIndex
	}
	if forceIndex := {{ $receiver }}.forceIndex; len(forceIndex) > 0 {
	    _spec.ForceIndex = forceIndex
	}
{{- end }}
{{- end }}
