// Package gen Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// template/base.tmpl
// template/builder/create.tmpl
// template/builder/delete.tmpl
// template/builder/query.tmpl
// template/builder/setter.tmpl
// template/builder/update.tmpl
// template/client.tmpl
// template/config.tmpl
// template/context.tmpl
// template/dialect/gremlin/by.tmpl
// template/dialect/gremlin/create.tmpl
// template/dialect/gremlin/decode.tmpl
// template/dialect/gremlin/delete.tmpl
// template/dialect/gremlin/errors.tmpl
// template/dialect/gremlin/group.tmpl
// template/dialect/gremlin/meta.tmpl
// template/dialect/gremlin/predicate.tmpl
// template/dialect/gremlin/query.tmpl
// template/dialect/gremlin/update.tmpl
// template/dialect/sql/by.tmpl
// template/dialect/sql/create.tmpl
// template/dialect/sql/decode.tmpl
// template/dialect/sql/delete.tmpl
// template/dialect/sql/errors.tmpl
// template/dialect/sql/group.tmpl
// template/dialect/sql/meta.tmpl
// template/dialect/sql/predicate.tmpl
// template/dialect/sql/query.tmpl
// template/dialect/sql/update.tmpl
// template/ent.tmpl
// template/example.tmpl
// template/header.tmpl
// template/import.tmpl
// template/meta.tmpl
// template/migrate/migrate.tmpl
// template/migrate/schema.tmpl
// template/predicate.tmpl
// template/tx.tmpl
// template/where.tmpl
package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateBaseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x4b\x6f\xdc\x36\x10\x3e\x4b\xbf\x62\x20\x6c\x0a\xa9\x50\xa4\x24\xc7\x05\x7c\xc8\xa3\x2e\x72\x68\x1a\xc0\x29\x72\x08\x02\x83\x96\x46\x5a\x62\x25\x52\x21\xa9\xb5\x0d\x41\xff\xbd\x18\x52\xaf\x7d\xc5\x9b\x34\xbd\x18\x5e\x3e\x66\xbe\xf9\xe6\x9b\x19\xee\x76\x1d\xe4\x58\x70\x81\x10\xdc\x31\x8d\x01\xf4\xbd\xef\x77\x1d\xac\x9a\x6d\x09\xeb\x2b\xa0\x45\x58\x25\x6f\xa5\x28\x78\x99\x7c\x64\xd9\x96\x95\x48\x87\xba\x0e\x0c\xd6\x4d\xc5\x0c\x42\xb0\x41\x96\xa3\x0a\x60\x35\x5e\x9f\xb7\x78\xdd\x48\x65\xc6\xad\x34\x85\xbf\x55\x8e\x0a\x58\xd3\x54\x1c\x35\x30\x01\x92\x16\xb8\x28\x41\x0a\x40\x6e\x36\xa8\xa0\x54\xac\xd9\x80\x51\x6c\x87\x4a\xb3\x0a\xa4\x02\xfd\xad\x02\x8d\x15\x66\x46\xaa\xc4\x37\x8f\x0d\x0e\x96\x8a\x56\x64\x61\xd7\x01\x2f\xa0\x34\x10\x56\x28\x60\x95\xdc\x18\xa9\x58\x89\x11\xbc\x84\xbe\xe7\xc2\xa0\x2a\x58\x86\x5d\xdf\x75\x80\x95\xa6\x00\xba\x0e\x42\x2e\x72\x7c\x98\x4f\xc3\x8b\x28\x79\xd3\xf2\x8a\xac\xda\x03\x28\x72\xe8\xfb\xc8\x46\x74\xde\xfc\x14\xd4\x47\x54\xef\x38\x23\x88\x90\x49\xa1\x8d\x6a\x33\x03\x66\x83\x10\xd8\x10\xe1\xee\x31\x80\xac\x62\xad\x46\x28\xe4\x51\x90\xda\x72\x9d\x13\x0b\xf9\x60\x85\xa2\x4c\x7c\x0a\xf0\xd0\x01\x05\xac\x98\x28\x11\x56\x3c\x86\x95\x1e\x02\x58\x5f\x2d\xa2\xb1\x21\xf0\x02\x56\x1c\xfa\x3e\x9e\xc2\x29\x28\xbb\xb4\x34\x31\x37\x5e\x5f\x04\x1f\xcd\xd1\x0f\x34\x77\xbe\xa7\xd0\xb4\x4a\xb8\xcf\xa1\x45\x15\xee\x60\x41\x6e\x44\x87\x3c\x7d\xcf\x4d\xb6\x81\x1d\x81\xd9\x25\x21\xc5\xe0\x36\xba\xee\xf9\x05\x98\x7d\xcf\xcb\x48\x73\xa7\x71\xad\x7d\xcf\xf3\xa6\x08\xc2\x5d\x34\xd8\x75\x58\x7d\xcf\xcb\xb1\x60\x6d\x65\xec\xb9\x86\x09\x9e\x85\x45\x6d\x92\x9b\x46\x71\x61\x8a\x30\x68\xc5\x56\xc8\x7b\x61\x99\xb5\x49\xb0\x99\x59\xc3\xb3\x4f\x41\x0c\xbb\x88\xcc\xf5\xbe\xd7\x47\xbe\x15\xf8\x60\xd5\x9f\xc9\x2e\x62\x58\xb9\x64\xae\xaf\xdc\x5d\xeb\x96\x00\x15\x70\x05\x0d\xd3\x19\xab\xe8\x7f\x5a\x4d\x53\x70\x1b\x7d\x3f\xe9\x9d\xe4\x50\xf2\x1d\x0a\x28\x38\x56\xb9\x06\x2e\xe8\x50\xdb\x34\xa8\x86\xa3\xd6\x6c\xe2\x7b\x96\xe1\xd1\x40\x38\x1c\x4f\x92\x44\x1b\xaa\x96\x45\x5e\xf6\x12\xf3\x5d\xa9\xce\x02\x9a\xa2\x0b\x89\xa9\x39\xc0\xdb\x73\x99\x79\x6e\xe9\x75\x6c\xdf\x73\xb3\x01\x7c\x30\x64\x61\x2a\xa2\x0f\x32\x47\x0d\x2f\x22\x08\xae\x5b\x91\x05\x04\x3b\xb0\x88\x82\x91\xb2\xd1\x84\xa5\xcb\xd4\x4d\x45\x1e\x5c\x66\x20\x18\x34\x9f\x3e\xd3\xa9\x1c\x6e\xe9\xa5\x28\x06\xd7\x0f\x53\x67\x71\x16\x12\xd2\xf6\x00\xcc\x46\x34\x38\xd9\xfb\x14\xf9\xde\x5e\x3e\xd3\x14\x5e\x97\xa5\xc2\x92\xec\x2c\x3a\x11\x1b\x16\xb9\x14\xa0\x0d\x36\x54\x8b\x36\x61\x4a\xb6\xcd\xf3\xbb\xc7\xb9\x58\xd3\x83\x56\x34\x9b\x1b\xca\xbe\xf3\x2f\x27\xf5\x09\x3a\xac\xf7\x54\xf3\x52\x30\xd3\x2a\x3c\x24\xe6\x1c\x2b\xfe\x92\x83\xde\x77\x51\x6b\xe0\x1a\x18\x34\x1a\xdb\x5c\xee\xc5\x4b\x6a\x73\xff\x48\x05\x0a\x05\xab\xa9\x25\x33\x21\x6d\x43\x76\x7f\xc7\x33\xda\x29\x20\x6b\xb5\x91\x35\x08\x56\xa3\x4e\xe0\x5a\x2a\xc0\x07\x56\x37\x15\xae\xfd\x34\xf5\xd3\xd4\xfb\x93\x90\xbf\x79\x74\xda\x7d\x19\x3b\xc9\xbf\x8a\x12\xda\x9b\x18\x0b\xc7\x69\xd3\xf7\xc9\x6b\xbd\xfc\x74\xd3\xd6\xc3\xd5\x28\x86\x40\xb7\xf5\xad\xfb\x14\x44\x31\x5c\x70\xeb\xd5\xde\xad\x57\x41\xe4\x1c\xdf\x64\x4c\x84\x99\x79\x88\xe1\xb7\x5d\x44\x40\x6d\x9d\xbd\xd6\x61\x21\xe6\x34\xc6\x96\xb9\xb1\xd2\xe6\xec\xce\x5d\x70\x5a\x73\xad\xed\xd2\xfa\xb9\x28\xd7\x4c\x1f\xa9\x9f\xb2\x3c\xf5\xc3\xf7\x39\x0a\xf3\x81\xd5\xb4\xb9\xa6\x16\x71\xae\x2a\x96\x55\x60\x45\x30\x03\xa5\xac\xc5\xb0\xa2\x44\x5e\x13\x3f\x04\x88\x4d\x71\x4e\x4d\x4d\x58\xa0\x43\x5b\x13\xce\xe5\xaf\x96\xb6\x1d\x96\xc7\xb2\xa6\x3e\xb6\x61\xfa\xd3\x7e\x68\x13\x8d\x4f\x34\x21\xa2\x27\x18\x20\x4f\x1d\x49\x2c\xda\xd8\x99\xa2\x99\x48\x1b\x51\x8c\xff\x2f\xfa\xc7\xd4\xd9\xc5\x61\x6b\xef\x3a\xf8\xd6\x4a\x83\x13\x57\xa7\x6b\x4c\xda\xa6\x4f\xb3\x79\xe6\xbf\xef\x0f\x66\x03\xc8\x02\x26\xa7\xc8\xb2\x8d\xeb\x43\x7b\x93\x81\x00\x84\x27\x4c\x39\x03\x4e\xbf\x8b\x51\xbe\x27\xe4\x23\x25\xdb\xc5\xff\x69\x16\x08\x08\x3e\x8f\xf8\x82\x25\xd6\x4b\x87\x82\x93\x4a\xe1\xcc\x9d\x9a\x0c\x3f\x5e\x1d\xdf\x9d\x19\xfd\xf1\xcc\xf8\x43\xa9\x0f\xd2\x5c\xcb\x56\xe4\xe0\xb8\xd3\x70\xbf\x41\x01\x46\x3d\x52\xb3\x34\x12\x0a\xa4\xb7\x0f\x03\xdd\x60\xc6\x0b\x9e\x01\x0a\xc3\xcd\x23\x30\x91\x03\x37\x70\xcf\x34\x08\x69\xa0\xb0\x36\xb8\x9b\x2e\x39\x33\x8c\x9e\x7e\xc3\x28\x59\x7a\x99\x87\x49\xc5\xee\xb0\x1a\x12\xea\x4f\x70\xa4\x02\x4e\x0d\xb7\x46\x61\x9c\x00\xd1\x2d\x8e\x8f\xb2\xe1\xf5\x18\x22\xfc\xbe\xb0\x1b\xb9\xbb\x61\x34\x18\x5c\xb4\xb5\xbd\xd7\xd2\xdc\x55\xd7\xf0\x6c\x81\x3c\x88\x01\x13\x8b\x28\x1a\xb0\xbc\xd7\x47\xcc\x30\xb8\x93\xb2\x42\x26\x80\x8b\x9c\x67\xcc\x90\xa3\xfb\x0d\xda\x49\xb2\x80\x4a\x27\x67\x4e\xec\xe2\x80\x7a\x36\x1a\xa2\x52\x6e\x2b\xb2\x56\x09\xf0\x6d\x0c\x72\x4b\x62\x41\xa5\x92\x70\x2f\xbc\x29\x1a\xb9\x1d\xf0\xfd\xc5\xf4\x76\x42\x58\x33\xbd\xa5\x68\xd4\x09\x9f\xcb\x83\x4b\xaf\x0e\x6c\xe7\x7b\xbc\x38\xc0\x15\x2d\x6b\x49\xf0\x8a\x74\x33\x7e\x44\xa5\xfc\xa5\x76\x6e\xb8\x28\xdb\x8a\xa9\x27\xe5\x33\x9e\x5b\xc8\xa7\x96\x0a\x89\x37\xea\x1e\x68\x95\xf4\xb4\x8a\x26\x7f\xbf\x5e\x48\xa3\xe9\xff\xa0\xa5\x31\xca\x33\x72\x3a\x22\xeb\x47\x15\x35\xb3\x78\x28\xaa\xd1\xf4\xc5\xba\x9a\xa2\x3d\x90\xd6\x40\xdf\x5b\xfb\x75\x8f\x71\x61\xae\x19\xaf\xf0\x6c\x7b\xc8\x14\x32\x83\x69\xdb\xe4\xd4\x8d\x28\x8f\x52\xb9\xc4\xda\x44\xbb\x67\x68\x4e\x46\x97\x7b\xb2\xa0\xe8\xb8\x1a\xbe\x55\x92\x1b\x0d\x85\x75\xb4\xf7\xec\x8a\x61\xc7\x65\xe5\x46\x8d\x2c\x00\xf3\xd2\xda\x70\xb3\xa0\x15\xfc\x5b\x8b\x02\xb5\x9e\x15\x72\x04\x7b\x96\x49\xad\xcb\x51\x24\xde\xbd\x62\x8d\x63\xe9\xa7\x04\x73\xc2\xd1\xcf\x88\xc6\x05\xb0\xe0\x60\xa0\x80\xe4\x64\x15\x54\xeb\x72\xd4\xcf\x3f\xc2\x62\x3e\x85\x50\x27\x9f\x15\xb3\xdf\xb6\xce\x68\xfb\x18\xab\xb3\x16\x2e\x9a\xc0\x58\xde\x09\x6d\x4c\x9a\xdd\xbf\xd9\x2a\xfc\x29\xe5\x1e\x04\xd8\x2a\x9c\x94\x7b\xe4\xe0\x32\xfd\x1e\x45\x74\x20\xe2\x4b\x27\xfe\x13\x13\xda\xd1\x7b\x30\x9d\xbf\xfb\x8c\x3b\x31\x9b\x57\x07\x6f\xad\xc5\x4c\xb6\x3f\x4b\x71\xfb\x50\x3d\x7a\x68\x24\xef\xdf\x25\x9f\x48\xd5\xee\xe7\x98\x2d\x3e\xea\x89\x7c\xe2\x97\x16\x52\x9e\x6b\x28\x94\xac\x1d\xe3\x54\x1d\x35\x6b\x06\x72\xe9\x40\x58\xd3\xc2\x97\xc1\x4d\xdf\x7f\x75\xe5\xd0\xf5\x11\x7c\xf9\x3a\xad\x12\xc7\x9a\x40\xd4\x6c\x8b\xe1\x62\x23\x86\x17\x31\x54\x28\xc2\x3a\x8a\x7c\x8f\xbe\x46\xf1\x3c\x86\x5b\x3a\xea\xe8\xad\xdd\xef\x23\x70\x45\x4f\x46\x14\x79\xa8\x63\xe0\x79\xb4\x1c\x18\x7a\xef\x87\x87\x7f\x03\x00\x00\xff\xff\x0e\xa3\x72\x8c\x9d\x13\x00\x00")

func templateBaseTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateBaseTmpl,
		"template/base.tmpl",
	)
}

func templateBaseTmpl() (*asset, error) {
	bytes, err := templateBaseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/base.tmpl", size: 5021, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateBuilderCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x5d\x6f\xa4\x36\x14\x7d\x66\x7e\xc5\x5d\xc4\x56\x43\x94\x30\xdd\xd7\xa9\xd2\x87\x6e\xb6\x6a\x5f\xb6\x95\xd2\x56\x2b\x75\xab\xca\x81\x0b\xe3\xc6\x63\x58\xdb\x90\x89\x10\xff\xbd\xba\xb6\x01\x43\x3e\x3a\xdb\xa7\x41\x1e\xfb\xdc\xe3\x73\x8e\xaf\xdd\xf7\x50\x60\xc9\x25\x42\x9c\x2b\x64\x06\x63\x18\x86\x4d\xdf\x43\xd2\xdc\x57\xb0\xbf\x86\x3b\xa6\x11\x92\xec\x7d\x2d\x4b\x5e\x65\xbf\xb2\xfc\x9e\x55\x48\x73\x68\x92\xc1\x63\x23\x98\x41\x88\x0f\xc8\x0a\x54\x31\x24\x4f\xff\xe2\xc7\xa6\x56\x26\xf8\x2b\xb9\x6b\xb9\x28\x50\x11\x7c\xa3\xb8\x34\xb0\x6d\x98\xce\x99\x80\x24\xfb\xc8\x8e\x98\x42\xfc\x7e\xc9\x45\x61\x8e\xbc\x73\x2b\xa6\xef\x09\x86\x60\x77\x3b\x08\x91\x87\x01\xb8\x06\x73\x40\x18\x47\xca\x5a\x81\xdd\x21\x97\x15\x30\x3b\xd9\x16\xa3\xa9\x28\x0d\x37\x8f\xd9\xc6\x3c\x36\xb8\x86\xd1\x46\xb5\xb9\x81\x7e\x13\xe5\x56\x82\x4d\xd4\xf7\xa0\x98\xac\x10\x92\xbf\x2f\x21\x29\x89\x53\x92\xfd\xc8\x51\x14\x9a\xa8\x44\x51\xdf\x5f\x41\x52\x66\xb7\x76\xa5\xfd\x83\x80\x2e\x08\xb8\xcc\x7e\xa3\x1a\x34\xad\xef\x01\x65\xe1\x3f\xaf\x42\x48\x74\x90\x1f\x8a\x0a\x43\x44\x5c\x23\x1e\x59\xf3\xa7\xdd\xc7\xcf\x37\x23\xec\x5f\x8e\x6e\x3f\xe3\x5f\x0d\xc3\xc6\xc9\xfe\xc0\xcd\x01\xf0\x64\x68\x34\x81\xf8\x07\xb7\xc7\x78\xa1\x63\xb4\x70\x4e\xa3\x31\x34\x23\xf3\x3e\x78\xbe\x24\xf6\x2d\xeb\xd0\xe9\x89\x4e\xe7\x85\xa0\x5c\xda\xb1\x82\x19\x46\xf9\xc9\x36\x65\x2b\x73\xd8\x2e\xac\x1c\x25\x99\xab\xa7\x16\x75\x9b\x9b\x13\xe4\xb5\x34\x78\x32\x14\x3b\xfa\x4d\x61\x7b\x11\x16\xb8\x04\x54\xaa\x56\x29\xd9\xf2\x9a\x1d\x57\x93\x7a\xbc\x84\x5a\x91\xfe\x3f\x31\x7d\x83\x25\x6b\x85\x81\xad\xac\x0d\x0d\xfd\xd2\x18\x5e\x4b\x26\x52\x3f\x3f\xe2\x25\xac\xa8\x66\xce\xbc\x95\x01\xd7\xd7\x20\xb9\x20\x12\x11\x55\xa1\x22\xcb\x0a\x1e\x2f\x8a\x3a\xa2\x65\x77\x30\x9f\x20\x8f\xe9\xe7\xbe\xaf\xa5\x36\x4c\x1a\x18\x97\x9c\xc7\x00\xbe\xe9\xc6\xea\x28\x34\xce\x15\x15\x9a\x56\x49\xe2\xe7\xc5\xd2\xd9\x47\x7c\xd8\xc6\xe3\xd1\x1e\x86\x3d\x1c\xb9\xd6\x74\x1c\x14\x7e\x69\xb9\xc2\x02\x4a\x8b\xfb\x39\x76\xb5\xbc\xd8\x9f\xe3\x38\x9d\x6a\xf8\x44\x45\x51\xe4\x94\x0d\x46\xc6\x88\x25\x65\xf6\x07\x13\xbc\x60\xa6\x56\xa3\x05\x51\xdf\xef\x2e\x80\x15\x05\xc8\x56\x08\x76\x27\x10\xf2\x03\xe6\xf7\x50\x4b\xf1\x68\xcf\x66\xed\x4d\x70\x1c\xb4\x85\xaa\x5b\x43\xdd\xc9\x4a\xd9\x31\xd1\x22\x5c\xec\x66\x40\x48\x26\xac\xfd\x35\x30\x4a\xf5\xec\xe5\x64\xee\xec\x46\x3a\x2f\xb5\x79\x98\x97\x53\x62\xcf\xb4\xfc\x8d\xb7\x1c\x96\x62\x50\x64\x50\xa9\x97\x5d\x9e\x14\x81\x61\x70\x59\xfe\xaf\x52\xe9\x77\x16\xf1\x4d\x98\xb1\x85\xab\xe5\xd1\x64\x1f\xc8\xd9\x72\xe9\x6a\x37\x95\x2a\x19\x17\xe4\x2a\x7d\x3e\xef\xec\x1e\xde\x76\xb1\x0d\x88\xb3\xf8\x45\x7d\x06\x08\xfa\xd5\xc2\xf7\xe5\xf7\x19\x8d\x8c\xa0\x31\xfb\x5d\xf2\x2f\x2d\x06\x27\x4e\xa0\x5c\x37\x08\xab\xcb\xba\xed\xa5\xf0\x3d\xbc\xf3\x7a\x9c\x15\xf2\x56\x18\xde\x08\x04\xa6\x35\xaf\xe4\x11\xa5\xd1\x50\x4b\x60\xd0\x3a\x0a\x58\x54\xe8\x95\xc1\x75\xe6\x9f\x09\xb9\xdd\x80\x0d\x17\xce\x69\x7b\xbd\x71\x3c\xe9\xdc\x8b\xc6\xf1\xbf\x4e\xea\xd7\x90\x5e\x3b\xc4\x4b\xa8\x0c\x6c\x05\x4a\x48\xb2\x5b\x53\x2b\x56\x61\x0a\xef\xfc\x26\xf4\x03\x37\xf9\xe1\xc9\x3e\x0a\x45\x5f\xd9\x0d\x67\x02\x73\xb3\xb5\xad\x77\xed\xb7\x76\x58\xce\x75\x0f\xec\x7c\xcf\xe9\x15\xd1\xf7\xf0\x4f\xcd\xe5\x34\x6f\x04\xd3\x10\x5f\x02\xdd\xf5\xfb\xcd\x2c\xc7\x73\x3a\xea\x09\x72\xbc\x28\x52\x4f\x62\x4a\xa6\x6f\x17\x21\xd2\xab\xc2\xb6\x52\xb7\x0d\xbd\x4f\xb0\x80\xc2\xd1\xb1\x22\x7a\xa9\x82\x9e\xfa\x32\x2f\x2e\x0b\x3c\x05\x3b\xfe\x76\x49\x30\xe0\x37\xdf\x9d\x9f\x20\x67\x42\x68\x77\x8f\x52\xef\x6a\x98\xe4\xb9\x26\x6f\xec\x90\xab\xa6\x81\x49\x47\xfd\xab\xae\xd0\x4f\xcf\xdf\xa1\x8b\x2b\x94\xfc\xeb\x2e\xc3\xa6\x15\xee\x2a\xa0\xef\x3b\x5b\xd0\x87\x2c\xd5\xad\xeb\x19\xc3\x66\x14\xa6\x73\xcf\x8c\xf3\x02\x71\xee\x73\xc4\xb6\x79\x73\x6c\xc4\xf4\x56\x2c\x21\xf6\x3e\xed\xde\xea\xdd\xf8\x66\x0d\xa2\xe1\x16\x9d\xa6\x57\x8c\x5b\x9e\xad\xde\x5c\xc1\x6b\x66\xfe\xfc\x37\x00\x00\xff\xff\x04\x4e\x37\x66\x0d\x0b\x00\x00")

func templateBuilderCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateBuilderCreateTmpl,
		"template/builder/create.tmpl",
	)
}

func templateBuilderCreateTmpl() (*asset, error) {
	bytes, err := templateBuilderCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/builder/create.tmpl", size: 2829, mode: os.FileMode(420), modTime: time.Unix(1565092032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateBuilderDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x41\x8f\x9b\x3c\x14\x3c\xc3\xaf\x98\x0f\xf1\x49\x50\x65\x9d\xf6\xba\xd5\x5e\xda\xed\x75\x5b\xb5\x87\xae\x54\x55\x95\xd7\x3c\x88\xbb\xc4\x50\xdb\x34\x59\x21\xff\xf7\xca\x10\x08\x64\x83\x36\xaa\x7a\x0a\x84\xf7\xc6\x33\x6f\xfc\xa6\x6d\x91\x51\x2e\x15\x21\xca\xa8\x24\x4b\x11\x9c\x0b\xdb\x16\x71\xfd\x58\xe0\xfa\x06\x0f\xdc\x10\x62\xf6\xbe\x52\xb9\x2c\xd8\x27\x2e\x1e\x79\x41\xbe\xc6\x17\x59\xda\xd6\x25\xb7\x84\x68\x43\x3c\x23\x1d\x21\x7e\xfe\x49\x6e\xeb\x4a\xdb\xc9\xa7\xf8\xa1\x91\x65\x46\xda\xc3\xd7\x5a\x2a\x8b\xa4\xe6\x46\xf0\x12\x31\xbb\xe3\x5b\x4a\x11\xdd\xce\xb9\x68\x12\x24\x7f\xf7\x1d\xe3\xf3\x08\xe3\x5c\xb8\x5e\x63\x0a\xec\x1c\xa4\x81\xdd\x10\x86\x7f\xf2\x4a\xa3\x13\x28\x55\x01\xee\x8b\x67\x47\xfa\x0e\x52\x56\xda\x27\x16\xda\xa7\x9a\x4e\xd1\x8c\xd5\x8d\xb0\x68\xc3\x40\x74\x83\x08\x83\x5a\x53\x26\x05\xb7\x64\xf0\xed\xfb\xf8\xc2\x7c\xdf\x80\x18\xba\x30\xf4\xcc\xbe\x6e\x48\x13\x78\x96\x19\x70\x28\xda\x61\x2c\xef\x68\x4d\x68\xb2\x30\x6f\x94\x40\x32\xd5\xec\x1c\x5e\xcd\xd9\xa4\x3d\x62\x52\x1b\x30\xc6\xce\x9f\x9d\x9e\x36\x79\xee\x73\x58\x36\x91\x70\x03\x5e\xd7\xa4\xb2\x64\xb1\x64\x85\xda\x30\xc6\xd2\x30\xd0\x64\x1b\xad\x30\xf3\xa5\x17\xbb\x5e\xe3\xc3\x9e\x04\x68\x4f\xa2\xf1\xb0\x5e\x5a\x3f\xf5\x4a\xe1\x57\x43\xfa\xe9\x52\x85\x1e\x27\x11\x76\x0f\x51\x29\x4b\x7b\xeb\x2f\xa0\xff\x4d\x41\x5a\x57\xba\x57\x73\x05\x99\xa3\xb0\x48\x4a\x52\x88\xd9\x17\x5b\x69\x5e\x50\x8a\x37\xb8\x72\x2e\x0c\x02\xb3\x93\x56\x6c\x4e\x99\xb2\x4c\xfb\x27\x76\x2b\x79\x49\xc2\x26\xa9\x07\xeb\xd0\x34\x57\x05\x21\xfe\xb1\x42\x6c\x7a\x2c\x7f\xe1\x46\x60\x74\xa0\xc2\x2f\x44\xdb\xe2\x67\x25\xd5\x58\x37\x80\x19\x44\x2b\xf8\x6b\x7b\x1d\x06\xc1\xc2\xa4\x3a\x9f\xcc\x08\x39\x28\x4d\x0f\x24\x48\x65\xfd\x41\x19\xe5\xbc\x29\xed\x14\xa9\xd3\x6e\xd8\x1d\xed\x92\x68\xd8\x51\xe7\xae\xd1\x28\xd3\xd4\x7e\xcb\x28\x43\xd6\x33\x89\x3c\x9e\xeb\xa7\x44\xa5\xa1\xc3\x48\x96\x29\x49\x95\xd1\x7e\x22\xf6\xf5\x9c\xdb\x84\xda\xd1\xe9\x7b\xbf\x66\xa5\x7c\xa4\xee\x6d\x85\x87\xc6\xa2\xe6\x4a\x0a\xe3\x9d\xe1\x07\xc2\xa8\x84\x68\xb4\x39\x67\x3d\x96\xbc\xbf\x3f\x6f\x7e\x1b\x06\x32\xf7\xa8\xde\x98\x53\x11\x23\xdb\xb7\x5d\xc5\x7f\x37\x50\xb2\xec\xcc\xed\x38\x25\xa4\x75\x1a\x06\x1d\xff\x4b\xdd\x6e\x5b\xec\xa4\xdd\x80\xf6\xd6\x8b\x8f\x11\xbd\xeb\x89\x46\xb3\xf8\x09\xba\xd5\xb2\xdb\xba\x1c\x33\x2d\x47\x74\x70\x62\xfd\xbf\x59\x0f\xd9\x3a\xf1\xbd\x6f\xda\x8f\x39\xd9\xb7\xb3\xe1\xd8\xc3\xac\x8f\x4f\x5d\x10\x56\x8a\x9e\x85\xe7\x48\x24\xfa\xa8\x8e\x91\x59\x29\xfa\x7c\x36\x35\x27\x10\xae\x77\xf2\x04\xf8\xc5\xf0\x34\x52\x15\x65\x1f\x91\xcb\xe1\x39\x07\x3c\xe6\xe7\x0b\xee\xff\x45\x8c\x4c\x95\x0e\x80\xb3\xd3\x2f\x4a\x93\xc9\x62\xcc\x01\xd9\xe2\x35\xfb\x17\x8b\x70\x21\xf9\xe5\x75\xb8\x90\xf0\xfd\xc8\xf8\x78\xa3\xfe\x04\x00\x00\xff\xff\xa3\xc8\x0c\x00\xfc\x07\x00\x00")

func templateBuilderDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateBuilderDeleteTmpl,
		"template/builder/delete.tmpl",
	)
}

func templateBuilderDeleteTmpl() (*asset, error) {
	bytes, err := templateBuilderDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/builder/delete.tmpl", size: 2044, mode: os.FileMode(420), modTime: time.Unix(1565092490, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateBuilderQueryTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x5a\x6d\x6f\xe3\x36\x12\xfe\x2c\xff\x8a\xa9\xe1\x06\x56\xe0\xc8\xbb\xfd\xe8\x43\x0e\x48\x9b\x76\x61\xa0\x68\xef\x76\x0b\x5c\x81\x20\x68\x19\x69\x64\xb3\x4b\x53\x2a\x49\x39\x09\x74\xfe\xef\x07\xbe\x48\xa2\x5e\x9c\xc8\xd9\x5c\xb7\xd8\x4f\x09\xad\xe1\x70\x38\x7c\xe6\xe1\x90\x9c\xb2\x84\x04\x53\xca\x11\xa6\x7f\x16\x28\x1e\xa7\x70\x38\x4c\xca\x12\x66\xf9\xc7\x0d\xac\x2e\xe1\x8e\x48\x84\x59\xf4\x5d\xc6\x53\xba\x89\xfe\x45\xe2\x8f\x64\x83\x5a\x46\x0b\x29\xdc\xe5\x8c\x28\x84\xe9\x16\x49\x82\x62\x0a\xb3\xfe\x27\xba\xcb\x33\xa1\xbc\x4f\xb3\xbb\x82\xb2\x04\x85\x56\x9f\x0b\xca\x15\xcc\x73\x22\x63\xc2\x60\x16\xfd\x44\x76\x18\xc2\xf4\xdf\x2d\x53\x04\xc6\x48\xf7\xb6\x43\xfd\x7f\xad\xc5\x09\xed\x0a\xa6\xa8\x54\x99\xd0\xf6\xad\x2e\x61\xa3\x60\xce\x90\xc3\x2c\xfa\x60\x7f\x0c\xe1\xad\xb1\x60\xb9\x04\xdf\x88\xc3\x01\xa8\x04\xb5\x45\xa8\x7e\x49\x33\x01\xc6\x17\x94\x6f\xb4\x68\xcb\x38\x2d\x8f\x5c\x51\x45\x51\x46\x13\xf5\x98\x63\x57\x9b\x54\xa2\x88\x15\x94\x93\x20\x36\x4e\x9b\x04\x8c\xee\xa8\x0a\x82\x73\xca\xd5\x24\xc8\xd2\x54\x62\xd3\x12\x09\x8a\x20\xb8\xb9\xfd\x59\xff\x33\x09\x0a\x4e\xff\x2c\x50\xff\x20\x95\xa0\x7c\x33\x09\x72\x81\x09\x8d\x89\x42\x09\xc1\xcd\x6d\xdd\x8a\xf4\xa8\x95\x45\x93\x60\xb9\x04\xca\x15\x8a\x1d\x26\x54\x7b\x5d\xdb\x6f\x2c\x0c\xca\xf2\x02\x04\xe1\x1b\x84\xd9\x6f\x0b\x98\x79\x1e\xaa\x3d\x63\x34\x04\x5a\xa1\xac\x7f\x00\xaf\x19\x7d\x6b\x67\xa7\xc5\xb4\x3a\xe4\x89\xee\x62\x7d\xf9\x9f\x2d\x0a\x04\x92\x24\x12\x08\x70\xbc\x87\xda\x44\xe3\x48\xcf\xb1\xd1\x24\x2d\x78\x0c\xf3\xd6\x92\x1e\x0e\x70\xde\x76\x60\x68\x55\xce\x73\x09\x51\x14\x0d\x4f\x38\xec\x76\xd2\xee\xf6\xf5\x1e\x0e\x91\xe7\xb8\x4b\x20\x79\x8e\x3c\xe9\x0e\xed\xc9\x2c\x20\x97\x51\x14\x85\x93\x40\xa0\x2a\x04\x87\x8e\xa8\x9b\xed\x8f\x7a\x29\xab\xd9\x9a\x75\x05\xa9\x30\x07\x95\x99\x99\x1a\xd8\x8c\x9e\xa7\x51\x36\xb7\x5a\x28\x57\xcf\x4e\x4a\x5b\x6c\xa5\x2f\xe1\xcc\xfc\xf3\x8c\xb5\x3f\x1b\xac\x39\x73\x39\x58\xe8\x7d\x82\xc1\x56\xdf\xdc\xe9\x19\x6b\xb2\x13\xbf\x84\x33\xfb\xdf\x73\x46\xeb\x48\x68\x6c\x36\xad\x4f\x30\x59\xf7\x9f\x67\x1a\x4a\xe6\xdf\x71\x16\x9b\x41\x8f\xa2\xc6\x7c\x5e\x40\xf6\x1c\x5e\xca\x72\x79\x0e\x6a\x4b\x25\xc4\x59\x82\xb0\x25\x12\x24\xdd\x51\x46\x04\x55\x8f\x70\x4f\xd5\x16\x30\xd9\xd4\xc1\x0a\x94\x43\xcc\x28\x72\x15\xa9\x5d\xce\xe0\x7c\x69\xa9\xcd\x8b\x5e\x17\xb7\xdf\x27\x1b\x94\x60\xc3\x11\x66\x5a\xc7\x6f\xc7\x39\x15\xa3\x5f\x1e\x73\xec\x33\xab\xe6\x0c\xd3\xf2\x28\x0e\x6b\x8e\x8b\xb7\x84\x72\xcb\x8b\x71\x21\x04\x72\x65\x1d\x0f\x19\x37\x3f\x9a\x81\x1b\x46\x4c\x36\x18\x4d\x82\x91\x6b\x72\x74\xd4\xb9\x5b\x9d\xd6\x8c\xec\x12\x05\x76\xf4\xd5\x25\x9c\x0d\x48\x94\x96\x6a\x57\xdd\x55\x88\xec\xef\x96\xde\x2e\x80\xa6\x9d\x7d\xc2\x10\x5f\x20\xef\xa9\x8a\xb7\xbd\xbe\x89\xd0\xff\x45\xd7\x94\x30\x8c\xd5\x3c\x34\x66\x8c\xe2\xd3\x0b\xab\x37\xd6\x7b\x67\x59\xc2\x1f\x19\xe5\x0d\x99\x3a\x7d\x12\xa6\x0b\xd0\x0b\xb1\xd2\xa2\x46\xad\x45\xc4\x83\xd2\xfc\x3a\x83\xe9\x7b\x67\xcb\xd4\x33\x6b\xaa\x97\x7e\xaa\x81\xe0\xc6\xb0\xbc\x6d\xf0\x52\x2d\x7d\x0a\xd3\xc4\x8e\xb1\xfc\x5a\x2e\x8d\xdf\x96\x39\x51\xdb\xa9\xcf\xef\x55\xdf\x0b\x78\xa8\xb7\x6a\xab\x26\xaa\x55\x97\xa5\xa1\x7a\xd7\x6c\xb7\x2a\x97\x22\x93\x95\xba\x17\x4f\xe1\x84\x19\xcc\x29\x4f\xf0\xc1\x73\xf5\x9b\x10\x6a\x2d\x4f\xcc\xa5\x65\x7c\xb5\x87\xd9\x96\x8b\x5f\x33\xca\x24\x30\x11\xe7\x36\x38\x43\x47\xef\x50\x81\x15\xd1\x94\xef\x6f\x42\x36\x0f\x78\x84\xbb\x47\xa0\x4a\x02\x4d\x46\x93\xd2\x3b\x54\xf3\x58\x3d\x40\x9c\x71\x85\x0f\x4a\x67\x57\xfa\xef\x02\x68\x62\x47\x58\x5f\x9b\xa0\x35\xc2\xf3\x73\x7f\xd0\x05\xa0\x10\x99\x30\x60\x1c\x66\x9e\xc8\x6e\x9f\xa6\x53\x93\xaf\x45\xeb\xeb\x39\x4d\xc2\x30\xfa\x99\xb3\x47\x3d\x78\xe8\xe8\xf6\x1d\xaa\x5f\x75\x06\xc4\xe8\x47\xd4\x8d\x05\xdc\x15\x0a\x72\xc2\x69\x2c\x75\xc0\x10\x6e\x47\x84\x2c\x8e\x0b\x21\x4f\x99\xe3\xaf\xe3\x27\xd9\x9a\x63\x45\xc9\xd1\xfb\x66\x00\x33\x6f\x0d\x90\xee\x6c\x9d\x2f\xb5\xda\x70\x12\xd0\xd4\xc8\x7d\x75\x09\x9c\x32\x13\xb0\x66\x26\x73\x14\x22\xd4\x8b\xeb\xfb\xcc\x57\xef\x9c\xf1\x03\x15\xb2\x59\x6e\xcd\x73\xa9\xf9\x65\x68\xd9\x29\xf7\xb6\x23\x78\xef\xfa\x9c\x7f\x2f\xc4\x4f\x99\xfa\x21\x2b\x78\x02\xf7\x5b\xe4\xc0\x33\xdd\x9d\x65\xf7\x3a\x69\xad\x95\xdc\x13\x09\xa9\x16\x1a\xed\x50\x63\xdb\x90\x47\x9f\x82\x88\x66\x59\x56\x08\x93\xbe\x8e\xf1\xa6\x4d\x49\xde\x86\xd1\x15\x63\x16\x25\x03\x2e\x75\x3e\xe4\x94\x19\x3d\xc6\xaf\x34\x05\x86\x7c\x7e\x64\xbc\x10\x2e\x2f\xe1\x4d\xaf\xf3\x99\xe7\xac\x12\xba\x88\xfd\x91\xdc\x21\x3b\x74\x56\x6d\x48\xfb\xcd\x9b\xdb\x85\x56\xe8\x2f\x62\x83\x69\xd3\x7c\x2d\x54\x5b\xdd\xc3\xab\xf0\x72\x0c\xd7\x4b\xdb\x73\xf7\xd9\x19\x7c\xb5\x96\x95\x8f\x0c\x8c\x5f\x88\xea\xf5\xf5\x73\xb8\xa6\xc9\x29\x98\xa6\xc9\x4b\x31\xbc\xbe\x3e\x82\xe2\x3e\x31\x58\x8f\x35\x70\xde\x13\x01\x34\x91\x70\x73\xdb\x11\x34\x7e\xa3\x89\xb4\x1d\x9e\xc0\xf5\xfa\x5a\x1a\x47\xff\x63\x18\xd4\x3e\x96\x69\x22\x3d\xdc\x5a\xbd\xe3\x10\xeb\x2b\x73\x4b\x43\x13\x39\x08\xd3\xf5\x75\x1b\xa8\xeb\xeb\xd7\x85\xea\x31\x67\x77\xfc\xa7\xa7\x48\x93\xa7\x01\x6a\x55\x7d\x22\x44\x69\x52\xa5\xf9\x9c\x3d\xb6\x10\x99\xe9\x1f\x9e\x23\xda\x45\xb3\x17\x57\x6e\xa1\x29\xf0\x4c\x01\x3e\x90\x58\x31\x9d\x9f\x62\xd5\x51\xe3\xd3\x8a\xe3\x78\x88\x56\xfb\xe3\xff\x9f\x65\xbf\x39\x9d\x65\x5d\xa6\xfa\x24\xd3\x96\x13\x9b\x78\xbe\x5d\x35\x4a\x9e\x23\x4e\xdb\xe3\xcd\xea\x45\xfc\x9c\x60\x4a\x0a\xa6\x8e\x74\xfe\x40\xf9\xa6\x60\x44\x3c\xc5\xef\x0d\x22\x1a\xda\xd6\xad\xd7\x0a\x05\xa3\xf9\xb5\x49\xbb\x49\xa4\x3e\x35\xeb\xd0\x9a\x3a\xf4\xdc\x0f\x86\x0e\x3b\x8f\x0b\x04\x47\xd2\x2f\x0a\x82\xcf\x47\xd3\xdf\x8c\xa3\x69\x2f\x18\x0c\x55\xb7\x80\x4f\x13\xb8\x74\xa4\xeb\xa3\xfb\x14\x16\xf7\x70\xdd\xea\x36\x06\xd1\x95\x9d\x1e\xb2\x3d\xa6\xb7\xee\x7d\x55\x74\xbf\x0e\xcf\x37\xeb\x7e\x02\xaa\x6b\x4a\xbf\x62\x0c\xf0\x01\xe3\x42\xa1\x6c\x90\x0a\x84\x27\xde\x09\x8a\x51\xa9\x20\x4b\x5b\x94\xe4\x30\x3e\x7a\xc6\x8e\x36\x07\xb0\x79\x73\xfb\x04\x49\x1f\xbb\x00\x38\xe5\xfc\x3f\xfa\x3a\xf5\x84\xc3\xff\x91\x73\x5c\xfb\x42\xb6\xd9\x2a\xfc\x3b\xd8\xc0\x47\x69\x77\xcb\xc8\x84\x8c\x7e\xc2\xfb\xf9\xb4\xba\xcf\x3f\x1c\x56\x50\x70\x59\xe4\x79\x26\x14\x26\xe0\x0e\xd9\x53\xad\xb4\xba\xdb\xad\xcf\xf3\xc7\xad\xea\x9d\xc1\x5b\xe6\xf5\x6e\x88\xaf\x18\x6b\x68\xfd\x8a\xb1\xd7\xc2\xbd\xd6\x3b\x0c\x83\x0e\x0a\x5e\xb2\x45\x3f\xb5\x33\x1f\x25\xf7\xa1\x11\x9c\x13\xd6\xd7\xf2\xa4\xd8\xf0\x89\x7f\xbc\x4b\x1c\x6d\x0e\x06\xc6\x10\x67\x7f\x19\xa1\x51\x6d\x16\x7f\xd3\xd0\x68\xcc\xeb\x85\xc6\xfa\x5a\x36\xa1\xb1\xbe\x96\xaf\x15\x1a\x5a\xef\xb1\xd0\x18\xdc\x11\xe4\xd1\x40\x68\xac\x1f\xbf\x1f\x48\x37\xbd\xef\xb2\x82\xb7\xaf\x53\x62\xf3\x4b\x96\x9a\xc6\x86\xee\x91\x9f\x78\x9f\x6f\x54\x1e\x4b\x4c\xb8\xfa\x82\x50\x5d\xcf\x74\x0c\xae\xdf\xfc\xe5\xa8\xf6\xcd\xeb\xe1\xda\x7c\x6c\x90\x6d\x9a\xaf\x85\x6d\xab\x7b\x18\x02\x94\xbb\x87\xd7\xc2\x41\x61\x08\xd1\xbe\xe5\x63\x31\x6d\x34\xba\xc9\x7d\xff\x40\xfd\x4b\x42\x51\xa0\x9e\x4e\xc3\xe9\x5b\x22\x01\x19\xee\x90\x2b\x59\xe5\xec\x1b\x41\xf2\xed\xe8\x29\x9a\x11\x8e\x80\xfc\x2e\xcb\xd8\x17\x84\xf2\x7a\xaa\x63\x50\x9e\x12\x26\xf1\x2f\x47\xba\x6f\x62\x0f\xe9\xe6\x63\x83\x74\xd3\x7c\x2d\xa4\x5b\xdd\xc3\x38\xd0\x30\xd0\x2b\x87\x76\xc0\x23\x50\xf7\x4d\x1f\x0b\x75\xa3\xb1\x8a\x63\xa6\x4f\x91\x4d\x82\x92\x14\x39\xb3\x6f\xfb\x99\x8f\x78\x67\xf4\x02\x28\x8f\x59\x91\x50\xbe\x01\xc2\x18\x10\x29\xb3\x98\x12\xbd\x1c\x52\x61\x2e\x23\x58\x2b\x88\x09\x87\x3b\xd4\xca\x0b\x89\x09\xa8\x0c\x72\x81\x39\x11\x7a\x6f\xd8\xed\x32\xde\x56\x29\x4d\x86\x54\x48\xd4\xa3\xed\x20\xa1\x69\x8a\x02\xb9\x3e\xdf\x92\x54\xa1\xad\x2f\x88\x8d\x95\x54\xc2\x8e\x24\x38\x9e\x47\x74\xaf\xf9\xe0\x7b\xb0\xf3\xc4\x59\xfb\x8b\x76\x59\xf5\xce\xd8\x7b\x32\xb6\x1f\x16\x93\xc0\x56\x7b\xac\x20\x18\x7e\xba\xd7\x12\xf6\x19\x7c\x40\x89\xfd\x60\x44\x44\x82\x42\x2b\x71\x4f\xd0\xae\x40\xa4\x3c\x2c\x7a\x6b\x6c\x44\xa3\x28\x0a\x75\x3f\x5b\x3f\xb2\x82\xa6\x9f\xad\x23\x19\xea\x68\x65\xab\x9e\x4d\x29\xc4\x0a\xea\xce\xc3\xd5\x17\x43\xca\x9a\xee\x95\xc2\xe5\xb2\x5a\x98\xe1\xc2\x94\xf1\x9c\xd3\x29\x4d\xe9\xbf\xf2\xb6\xbf\x47\x6e\x65\x17\x1d\x46\x71\x6f\xf2\x30\xdb\x88\xac\xc8\xbf\xf5\x1e\xcc\x5b\x05\x3e\xff\xad\xdf\x20\xbf\x96\xef\x8c\xa4\x7d\x2f\x37\x8f\x65\xb6\x5d\x43\xd7\x68\x82\x3d\x0a\x45\x63\x94\x70\x67\x6f\x5d\x32\x01\xbb\x4c\x20\xa4\x14\x59\x22\x97\x71\xc6\x8a\x1d\x97\x91\x49\xf8\x94\xc6\x69\x96\x2a\xe4\x56\x89\x79\x30\x25\x9b\x8d\xc0\x8d\x29\x99\x29\x78\xac\x68\xc6\xe5\xc2\xf0\xc9\xaa\xa6\xda\xf9\x47\x7c\x94\x8d\x60\x58\x31\x6d\x34\xa9\x9f\x5d\x6d\xb5\xd3\x0f\x66\x50\x5b\x15\x75\x01\xb3\x54\x4f\xb0\x62\x35\xf7\x4d\x93\xda\x64\xb9\xb4\xf4\x45\x76\x39\xc3\x95\x6d\x9a\x8b\x9b\x3d\x18\xd0\xd8\x1a\xa6\xe5\xd2\x78\xbf\xf2\x50\xda\x1c\xa9\x4a\xdd\xaa\x72\xc8\xdf\x6d\xf3\x83\xe9\xf6\x0b\xd1\x74\xfc\xbb\xe9\x6b\x33\x40\xbd\x2d\xff\xfe\x87\xcc\xf8\x6a\x6a\xb7\xe6\x6c\x47\x15\xee\x72\xf5\x38\x35\x62\xce\x9a\xc0\x55\x3f\x0c\xd4\x5c\x45\xa6\x66\x60\x1e\x46\x46\xab\x5b\x86\xde\x1b\xa7\xb5\xe2\xbb\x8c\x4b\x45\xb8\xd2\x51\x6e\xe5\xaf\x2a\xb7\xcd\x9b\xed\xc2\xa5\x01\xa1\x13\xf9\x10\x13\x6e\xdf\x11\xcf\xf6\xa1\x36\xc7\x43\xce\xd8\x17\x4f\x67\x95\x59\x76\xb0\x71\xb7\x70\x20\x80\x28\x8a\xec\x2f\x8e\x70\x5a\x18\xb4\xac\x63\xc1\x54\x55\x38\x74\x04\x9e\xaf\x70\x30\x1d\x22\x37\xdc\x25\x74\x09\xc0\x7c\x38\x54\xf6\xd8\xd2\x95\xbf\x6f\xee\x60\x27\xd3\x8e\xeb\x81\xfb\xc2\xb6\x80\xc3\x48\x37\x91\xe8\x6d\xff\xb5\xf2\xa1\xdd\x7e\x78\x94\x21\xc9\x7a\x38\x7f\x34\xb7\x75\x98\x21\x2c\xdf\x8c\x73\x4e\x59\x76\x6b\x27\xdc\xda\x4f\x1b\x90\x4d\x1d\xd4\xa7\x15\x86\x27\xe3\x6a\x27\xba\x85\x1f\x65\x39\x50\x28\xe1\x8c\x70\xf3\xf0\x8a\x20\x6a\x30\xbe\x1f\x2c\xc3\xec\xe0\x74\x64\x7d\xa5\xe9\x75\x71\xf7\x38\xb6\xbe\xb2\x1b\x2e\xfd\x22\x4b\x07\xfc\xa6\x70\x32\xe5\x12\x00\xe0\xe6\xb6\x8e\xfe\xcf\x59\x26\x59\x1b\x61\x2b\xdb\x9a\xe3\x6f\x45\xe9\x34\xe3\x0d\xfb\x57\xb5\x6e\xb5\x9b\x7a\x87\xe4\xf6\x8a\x54\x74\xd4\x71\x53\xd8\x0c\x3b\xd7\xee\x88\xa2\xe8\xaa\xd9\x41\x8e\xf1\xd0\x90\xfa\x48\x77\x6f\x15\xc4\x0d\x49\x2c\x20\xe5\xfd\x2a\xca\xae\xa4\xf3\x88\x66\x5c\xad\x90\x51\x77\x23\xd6\x9e\xac\x49\xfc\xa4\x96\xd1\xdf\x04\xca\x82\x99\x8d\x24\xf3\x7c\xb7\x27\xac\xc0\x17\x78\xa5\x22\xfb\x7e\x6d\xca\xde\xe2\x23\x25\x31\x96\x87\xd0\xa5\xed\x63\x4f\x59\x3d\x97\x7c\x8e\xa3\x56\xcf\x88\x36\x60\x9b\x7d\x6e\x3f\xe6\xc4\xd5\x3d\x6a\x75\xb5\xbf\xec\xd0\x35\x64\xe3\x10\xc3\xb6\x8d\xed\xc5\x94\xfe\xdc\x1c\xbd\x74\xeb\x84\x93\xd7\x09\x50\x39\x52\xc7\xd4\xc1\x4a\x59\x1f\xb1\xdc\x41\xac\x37\x4b\x7f\x3a\xbd\x87\xad\xf6\x61\xcc\xf2\xae\x07\x13\xe5\x08\x7e\x47\x15\xdd\x7b\xc5\x9f\xa9\x9f\xc0\x2a\x9d\xbc\xda\x3b\x68\x57\xe0\x69\x45\x0e\x87\xfa\x0c\x37\xf0\xfc\xa2\x13\x25\x48\x45\xb6\xab\x23\x30\xaa\xf2\x54\xae\xcf\x59\x8c\x65\xf7\xe8\x0a\x3f\xea\xba\xf8\x3a\x58\xcd\xae\xa5\xb3\x5e\x43\xc0\xad\x22\xd0\x91\x2e\xae\x6c\x7c\xf2\xe6\x5a\x75\xae\xac\xbd\x82\xa3\x01\x2a\x32\x7b\x41\x08\xff\x84\xb7\xb6\x68\x73\xcc\xed\xef\x80\x6d\x51\xed\x3e\x2a\xcd\xdb\x2a\x89\xb7\x14\xf7\xe4\x8e\xa1\x75\x87\x91\xd7\xee\x30\xf9\xbe\xda\x12\x0e\x6f\xad\x23\xaa\x18\xa8\x53\xea\x6a\x12\xd6\xf4\x71\x30\x39\x1b\xc0\x49\xbf\x2e\x20\xf0\xa2\x6b\xef\xde\xf3\x0f\x93\xd6\xf2\x37\x51\x52\xfd\xf2\x6c\xa4\xbc\x7c\x1d\x9f\xbc\x79\x56\x55\x3d\xef\x7e\xf1\xa4\x13\x7c\x50\x84\x8d\xcf\x7c\x47\xf8\x11\xd3\xf2\x41\xa7\x8a\xf3\x35\x52\xb0\x6e\x96\xf3\x6c\xe2\x65\x3a\x7c\x72\xe2\xe5\xfe\xfd\x5f\x00\x00\x00\xff\xff\x6d\x11\x6c\x46\xa5\x33\x00\x00")

func templateBuilderQueryTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateBuilderQueryTmpl,
		"template/builder/query.tmpl",
	)
}

func templateBuilderQueryTmpl() (*asset, error) {
	bytes, err := templateBuilderQueryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/builder/query.tmpl", size: 13221, mode: os.FileMode(420), modTime: time.Unix(1565098035, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateBuilderSetterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x6f\xdb\x38\x10\x3d\xcb\xbf\x62\x56\xd0\x2e\x24\x23\xa1\xb1\xd7\x00\xbe\x2c\xbc\x41\x7d\x49\x0f\x6e\x4f\x86\x51\xc8\xe6\xc8\x9d\x56\xa1\x1c\x51\x72\x11\xa8\xfa\xef\x05\x3f\x24\xca\xb4\xec\x38\x28\x7a\x93\xc8\xf9\xe2\xbc\x37\x8f\x6c\x1a\xe0\x98\x91\x40\x08\x25\x56\x15\x96\x21\xb4\xed\xa4\x69\x20\xda\xd6\x94\x73\x2c\xe1\x61\x0e\x87\x54\xee\xd2\x1c\x22\xb6\xda\x15\x07\x64\xff\xd9\x1d\x6b\x58\xe2\x0e\xe9\x68\x2c\xfb\xef\xde\xbd\x6d\x27\xca\xaa\x4c\xc5\x1e\x21\xfa\x72\x07\x51\xa6\x0c\x23\xf6\x48\x98\x73\xa9\xf6\x03\x15\xe5\x70\xea\x9e\xb1\x4f\xaf\x07\x64\xab\xaa\x24\xb1\xef\x8d\xb2\x5a\xec\x74\x41\x25\x89\x0a\xc2\x15\x56\x21\xc4\x5d\x75\x19\x7b\x4a\x9f\x31\xd1\xc6\xb3\x19\xf4\xf6\x6d\x0b\x12\x2b\x09\xd5\x57\x34\x8b\xda\x4e\x2d\x67\xaa\x04\x36\x09\xb4\x59\x7c\x72\x96\xb6\x85\xe9\xb0\x0b\x6d\x9b\x0c\x23\xc6\xa6\xe4\xb6\xb5\x11\x55\xb1\xda\xc6\x73\x82\x66\x12\x04\x5e\x60\x66\x5c\x56\x55\x59\xef\x2a\xdd\x05\x65\x38\x87\x7f\xba\x98\x93\x20\x28\xb1\xaa\x4b\x01\x9e\xe7\x24\xd0\x7d\x98\x4d\x21\x3d\x16\xc4\x61\x8f\x02\xcb\x4a\x35\x48\x50\x9e\xa7\xdb\x1c\xc1\x80\x28\x21\x2b\x4a\x90\x39\xed\x50\xc2\x16\x77\x69\x2d\x51\x9f\x5f\x50\x0e\xc7\x34\xaf\xd1\x19\x00\x49\xb5\x44\x1c\xa6\x33\xdb\x67\xca\x20\x15\x1c\x62\x51\x54\x0e\x09\x65\x9b\x40\x5c\x68\x70\x3e\x1e\x2a\x2a\x84\xed\x7a\x6d\x73\x47\x19\xfb\x90\xca\x05\x66\x69\x9d\x57\x06\x07\x7d\xf6\xae\xb8\xc7\x33\xf4\x9e\xec\xce\x05\x14\x3b\x18\x4f\x02\xbc\x01\xa7\x2a\x5e\x6d\xed\xe9\x88\xc2\x9e\x95\x24\xa8\xa3\x08\xca\xd9\x24\x78\x0f\xda\x5e\x62\x87\xfa\xf4\x06\xd8\x03\xca\xa0\x77\xf8\x6b\xae\x7b\xaf\xd7\xc7\x09\x61\x53\x4c\x3b\x97\x44\x99\xaa\x26\x5c\x24\x83\x61\x03\xa0\xe0\x76\x14\xed\x97\x37\x6f\x68\xe6\xed\x7f\xbe\x47\x37\x6e\x85\x9e\xb7\x30\xe5\x5c\x0d\xbc\xc1\x3c\x42\xf6\x59\xd0\x4b\x8d\x66\x45\xd9\xcc\xb5\x2c\x58\x13\x1b\x5e\xfb\x13\x97\xa7\x70\xf6\x00\x16\x87\x04\x62\x49\x62\x5f\xe7\x69\xa9\x62\x6a\x78\x7e\x5a\x11\x49\x20\x5c\x2e\xe4\xe5\x9c\x5d\xdc\xf1\xb0\xdd\x0f\x5a\x92\x84\xcb\x85\x57\x9b\x65\x4c\x17\xc6\x0e\x68\xa1\x1a\xea\x28\x83\x3d\x65\x90\xef\x11\xaa\xc2\xae\x6a\xa2\x77\x5b\xdb\x57\x20\x6e\x8a\xd4\x73\x30\x28\x54\xf6\x09\xdf\x27\x1e\xae\xaa\xf8\xfc\xf4\x3a\x19\xe6\xd2\x7c\x4b\x60\x8c\xf5\x69\xb4\x37\x5b\x2e\xae\x13\xce\xf2\xcd\x67\x16\x9e\x49\xcd\x80\x8b\xb7\x39\xc0\x73\xfa\x1d\xe3\xe7\xf4\xb0\xf6\x0a\xd9\x48\x6d\xd9\x68\xb6\xda\x79\x3f\x39\xd7\xbd\x26\xea\x4d\x69\xd6\xc4\x37\x30\x87\x2e\x62\x63\xc2\xdd\x9b\x9e\xd8\x38\x4a\xb5\x48\xdf\x14\x9a\xdf\xaa\x4f\x97\x47\x6a\x24\x81\x5c\xd3\xe6\x2c\x49\xd0\x67\xb2\x24\xba\x2e\xbf\x9d\x3c\xba\x43\x46\xe8\x04\xf1\x4c\xf5\x96\x0b\x79\x93\xf0\x79\x9c\x3e\x57\xbf\x2e\x90\x2f\x80\xb7\xb3\xf9\x8f\x68\xa3\x2b\x2b\x56\x77\xc8\x4d\x4c\x55\x54\x25\x7e\x59\x14\x35\xe7\xc6\x20\x1d\x4c\xd0\x94\xf8\x7b\x25\xd2\x3d\x34\xf2\xe2\x07\x96\x10\x6b\x40\x32\x08\xff\x66\xff\xca\xf0\xa4\x67\x09\xb8\xbb\x10\x5f\x94\xd7\x49\x47\x4c\xa0\x39\x84\xc7\xd0\xfe\x0e\x53\x64\x57\x94\xd1\x87\x7b\xe4\xb5\xf2\xa6\x62\x35\x8d\x2f\x4a\x43\x4d\x1a\x67\xc0\xef\x3f\x73\x46\x84\x70\xa8\x51\x53\x2f\xe7\x95\xd7\xd0\x98\x42\x8c\x23\xe8\x83\xde\xd5\xc3\x96\x8b\x64\x44\x1e\x94\x1e\x3c\x58\xb5\x5a\x6f\x3c\x2a\xde\x41\x8e\xa2\x8f\x90\x24\x9d\x2e\x69\x3d\x09\xc9\xdd\x49\x0a\x6f\x32\x56\x66\x7f\x0e\xe1\xb7\xc1\x3d\x33\xd0\x22\xb3\xdf\xb6\x4e\x92\x5c\xc7\x34\xab\x95\xe4\x74\x46\x1b\x4b\x6a\xb5\xed\x16\xd9\x72\xf1\x06\x8d\xfd\x26\x10\x97\x8c\xb1\xc4\x13\xad\xe1\x0b\xc0\x7d\xfd\x0a\x00\x00\xff\xff\x44\xd3\xdd\xc8\xe0\x0b\x00\x00")

func templateBuilderSetterTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateBuilderSetterTmpl,
		"template/builder/setter.tmpl",
	)
}

func templateBuilderSetterTmpl() (*asset, error) {
	bytes, err := templateBuilderSetterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/builder/setter.tmpl", size: 3040, mode: os.FileMode(420), modTime: time.Unix(1564726295, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateBuilderUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x59\x5b\x6f\xe3\xc6\x15\x7e\xa6\x7e\xc5\x29\xa1\x0d\x24\xc3\xa6\x76\x5f\x5d\xa8\x0f\xc9\x6e\x80\x7d\x49\x8a\xdd\x26\x0d\xea\x18\xc1\x98\x3c\x94\x27\xa6\x86\xdc\x99\xa1\x2f\x65\xf9\xdf\x8b\x33\x37\x0d\x29\x4a\x96\x03\x17\x45\xf6\xc9\xe2\x5c\xce\x9c\xf3\x9d\xdb\x37\xe3\xae\x83\x02\x4b\x2e\x10\xd2\xb6\x29\x98\xc6\x14\xfa\x7e\xd6\x75\x30\x6f\xee\x36\x70\xb9\x86\x1b\xa6\x10\xe6\xd9\x77\xb5\x28\xf9\x26\xfb\x3b\xcb\xef\xd8\x06\x69\x0d\x2d\xd2\xb8\x6d\x2a\xa6\x11\xd2\x5b\x64\x05\xca\x14\xe6\xfb\x53\x7c\xdb\xd4\x52\x47\x53\xf3\x9b\x96\x57\x05\x4a\x12\xdf\x48\x2e\x34\x2c\x1a\xa6\x72\x56\xc1\x3c\xfb\x81\x6d\x71\x09\xe9\x4f\x43\x5d\x24\xe6\xc8\xef\xed\x8e\xf0\x3b\x88\x71\x8b\xb6\x6d\xa5\xb9\xd2\xb5\x24\x05\x2f\xd7\xb0\xd1\xb0\xa8\x50\xc0\x3c\xfb\x6c\x07\x97\xf0\xce\xa8\xb0\x5a\x41\xac\x45\xdf\x03\x57\xa0\x6f\x11\xfc\x48\x59\x4b\x30\x68\x70\xb1\x31\x4b\x8d\x5a\xb4\x10\x85\xe6\x9a\xa3\xca\x66\xfa\xa9\xc1\xb1\x18\xa5\x65\x9b\x6b\xe8\x66\x49\x6e\xe0\x9a\x25\x5d\x77\x11\x21\x61\x11\x5e\x95\x1c\xab\x42\x11\x20\x17\x7d\x3f\x4b\x1a\x89\x05\xcf\x99\x46\x05\x57\xd7\xe1\x23\x8b\xcf\x9d\x59\xad\xff\x79\x8b\x12\x81\x15\x85\x02\x06\x02\x1f\x20\xac\x36\x2a\x47\x26\x64\xb3\xb2\x15\x39\x2c\x62\xf0\xfa\x1e\xce\x86\x0a\x2f\xad\xc4\x45\xa3\x20\xcb\xb2\xe9\xa3\x97\xe3\x4d\x64\xde\x50\x6c\x16\x59\xb0\x06\xd6\x34\x28\x8a\xc5\xc1\x25\xe7\xd0\xa8\x2c\xcb\x96\xb3\x44\xa2\x6e\xa5\x80\x81\x83\xad\xad\x5d\x07\x0f\x5c\xdf\x02\x3e\x6a\x14\x05\xcc\x21\xfd\xd6\x9e\x9f\x0e\xbc\x9e\x0c\xe2\x4c\xa1\xd6\xb4\x22\x73\x01\x41\x3b\xfb\x3f\x2a\xcc\xb9\x0a\x8b\x0d\xaa\x7d\x91\xab\x15\x7c\x66\xf7\x08\xf8\x88\x79\x4b\x66\x13\xf4\x5f\x5a\x94\x4f\xc0\x44\x01\xd6\x30\x3b\x2a\xda\xed\x0d\x4a\xa8\x4b\x90\xf5\x83\x5a\xdd\xa3\xd4\x3c\x47\x05\x5b\xa6\xf3\x5b\x2c\xe0\xe6\x09\xf4\x2d\x57\x50\x37\x28\x99\xe6\xb5\x98\x72\x1d\x4c\xf9\x8e\x34\x58\xe4\xfa\x11\xf2\x5a\x68\x7c\xd4\x94\xa3\xf4\x77\x09\x0b\x2e\xf4\x39\xa0\x94\xb5\x5c\x3a\x77\x8d\x10\xf8\xe4\x04\xa7\xd1\x19\xa9\x4b\xee\xd4\xe6\x7e\xfa\x2f\x94\xf5\xcf\xac\x6a\x31\x85\xb7\x36\x52\x27\x21\xba\x67\x15\x2f\x98\xae\xa5\xc7\xc9\x04\x3d\x9d\x73\xe1\x3f\x78\x39\xca\x4e\x2b\x4d\x3d\x70\x9d\xdf\x8e\xfd\x9f\x15\x92\x7e\x65\xef\x39\xab\x30\xd7\x0b\x63\x81\x11\x23\x99\xd8\x20\xcc\x7f\x3b\x87\x79\x94\xe6\x21\xbd\xcd\xd9\x49\x4e\xf5\xaa\xeb\xe0\xf7\x9a\x8b\xb0\xce\x0b\x53\x90\x9e\x03\x55\x95\xcb\x59\x92\x1c\x88\x3f\x13\xfd\x2a\x88\xf4\x28\x2f\x9d\x12\x2e\x04\x92\xa4\xc0\x92\xb5\x95\x8e\x25\xbd\x75\xa0\xab\xec\x07\x7c\x58\xa4\xbe\x8a\xf6\xfd\x25\xb4\x42\xb5\x0d\xd5\x41\x2c\xa0\xb0\xca\xa4\x24\xd2\xc3\x55\x29\x8f\xca\x61\xad\xb8\x28\xf0\x31\xb2\xf7\xed\x50\xbd\x48\xbb\x5d\x88\xfe\x42\xb5\xad\xe2\x77\x68\xbe\xce\xe1\xa6\xd5\xd0\x30\xc1\x73\x45\x5e\x61\xc2\x2a\x0c\x75\x9e\xb7\x52\xbd\x28\xf4\x7e\x99\x8e\x3d\x2a\xe7\xdd\x2c\x61\x65\x89\xb9\xc6\xc2\x20\x42\x6e\x1a\xdb\x13\x29\xce\x4b\xb3\xe8\x2f\x6b\x10\xbc\x32\xde\x36\x1a\x2e\x50\xca\xe5\x8c\x10\x72\x90\x78\x99\xce\xbc\x0f\x8f\x98\x4f\x64\xe0\xc9\x46\xd0\xfe\x69\x1b\x2c\x26\xdd\x2c\xf9\xed\x14\xf5\x9d\x76\x28\x65\xa4\xd8\x0e\x77\xfa\x7a\x2d\xdc\x8d\xe4\x69\x9d\xbb\x80\xe3\x84\xb6\xde\xd4\xe5\x5f\x8f\x23\x6d\xaa\xe5\x69\x89\x76\x4a\x55\x1d\x55\x14\x5f\x42\xe6\x7a\xdb\x54\xa1\xf9\x97\x90\xba\x84\x58\xbd\x51\x2b\x4f\x42\xa2\x0c\xb4\x9b\x1e\x43\xe1\xb1\xdb\x7d\xa9\xf1\x21\x3f\x2c\xf8\xf3\x5a\xe0\x98\x65\x94\x90\xbe\x51\x3f\x0a\x4c\xf7\x98\x43\x80\x2a\x66\x17\x91\x84\x88\x34\x0c\x46\x8f\xf2\x06\x06\x8a\x8b\x4d\x85\x13\x04\xe2\x29\xa2\x0f\x43\x81\xfb\x0c\x82\x17\x56\xc0\xc7\xf7\xd9\x3f\x68\x8f\xaf\xa9\x47\x58\xc5\xf3\x3d\x74\x68\xdb\x69\x6d\xf4\x0f\x0b\x7c\xb5\x56\x6a\x05\x15\x01\xc3\x23\x49\x33\x44\xf5\x68\xaf\x3c\x8b\xfd\xf3\xaa\x5d\x33\x15\xbc\x4a\xff\x17\x9d\xf3\xab\x6b\x9c\x82\x57\x5f\x73\xeb\x1c\x44\xe3\xd1\xee\x39\x08\x46\xcf\xb4\xb3\x4f\x3b\x81\xaf\xd9\x4f\xc7\xb2\x8f\xf7\x55\xa8\x85\xf9\x78\x69\xf6\xfd\x69\x1a\xed\x84\xd6\x7f\x82\x5e\x1b\x69\xfd\xff\x6b\xb7\xbb\x9f\xab\x33\x50\xb7\x4c\x62\xe1\x5b\x99\x6d\x4b\x70\x83\xfa\x01\xd1\x46\x90\x7e\x68\x5c\x2d\x97\x0a\xce\x56\x56\xda\xf0\x15\xc2\x77\x33\x3b\x17\x61\x54\x5a\x74\xbe\xb7\x52\x7d\x99\x9c\x97\xd9\x67\x73\x9c\x19\x0f\x1e\x2d\x43\xcb\x8c\x15\x1f\x60\xee\xd0\xfe\x40\xcd\x69\x27\x0e\xc7\xe2\xb6\xac\xb9\x1a\xb5\xe1\x6b\x6b\x60\xf7\x62\xe1\x0d\x8d\xa6\x12\xb7\xf5\x3d\x16\x54\x53\xa9\x3e\x95\x74\xe8\x4f\x82\x7f\x69\xd1\x8e\xcc\x1b\x58\x43\x9a\x57\x48\x60\xba\x55\xbe\x84\x92\x18\xfb\x70\x32\x6f\x76\x6f\x27\xe8\x1e\x4f\xa8\x70\xec\x49\xbc\xa9\xeb\x8a\x24\x50\xb1\xec\xfb\x63\xe6\xec\xf9\xf8\x62\xec\xee\x9d\x8f\x4d\x4f\x07\x63\x0a\xab\x46\x3e\xae\x9f\xf5\xb1\x63\x04\x8e\x84\xc5\x74\xcd\x5a\x94\x7d\xce\xeb\x06\xb3\x6f\x0f\x90\xb5\x43\x6f\x41\xa3\x88\x99\x70\xc2\x18\x1c\x97\x27\xa6\x36\x84\x37\xa9\xf4\x3b\xc2\x3e\x9d\xc2\x77\x96\x24\x8e\x0e\x9a\x2d\x7d\x0f\xc6\x4f\xb6\x58\xd2\x30\xee\xf8\x5e\xb1\x41\xd0\xb5\x1b\x25\xac\xfd\x54\x36\x4b\x92\x13\x69\x7f\x74\xd2\x62\xf2\x3d\x26\x49\xc6\x55\xc8\x05\x4e\xd7\xc1\x50\x7d\xda\xb0\x06\x2d\x5b\x3c\xdc\xc8\x7d\x6f\xf5\xd1\xe2\xe0\x31\x71\x5b\xd5\x0f\x28\x61\x11\x08\x75\xf6\x8e\x28\x67\x64\xd9\xd2\x6f\x58\x9d\x11\xcc\xe6\x09\x84\xce\xad\xed\xef\x86\x49\xb6\x45\x8d\x92\xaa\x6a\x59\x71\xa2\x16\xa6\xb6\xd1\x64\xd0\xc1\xec\x30\x51\x93\x38\x77\xe1\x17\x52\x60\x00\x53\x48\x92\xfb\xd4\x7d\x06\x8a\x41\x53\xbc\x50\xdf\x0f\x1d\xfa\xc9\xa4\x5c\x0a\x0b\x22\xe6\x6d\xc5\x64\x00\xe5\x3f\x0e\xa5\x25\xa4\x1f\xdf\xdb\x90\x0c\x2e\xf6\x72\xfa\xde\x06\x3a\xbe\xcc\xcd\x70\xf3\x04\xbc\x50\x2f\xf4\xf6\xee\xd0\x05\x2f\xcc\xeb\xdc\x28\x5d\x0f\x84\x01\x2f\xf7\xfa\x91\x2b\x34\xd3\x91\xb0\x6b\x4e\xfb\x21\x74\x74\x23\x6c\xd9\x1d\x2e\x8e\xd5\x11\xa2\x68\x14\x47\x49\x42\xd7\x22\x6e\xd2\xd5\x64\x25\x19\xf4\xe2\x13\xaf\x78\xa1\xae\xf8\xf5\x35\xac\x21\x14\xaa\x3e\x9c\x70\x2c\x8e\xa7\x52\x3b\x44\xc2\x29\xb9\xed\xbd\xbe\xef\x71\xf5\xaa\x99\x6d\xe3\xb9\xef\xc9\xdb\x67\xfb\x52\x0f\x79\xbc\x50\x64\x98\x71\xc7\xd5\xf5\xc8\x19\xe7\x50\xa1\x08\x82\x97\x4b\x5f\x29\x8c\x37\x52\xbe\x6b\x3e\x94\x5e\xdc\xae\xb2\xf3\x6b\x48\x7f\x8f\xba\x8e\xe5\xd7\xc6\x93\x76\xbe\xef\x77\x0e\x0d\x8a\x5b\xaf\x92\xa7\xfc\x22\xf2\x97\x9f\xde\x0d\x66\x1f\xdf\x3f\xe3\xba\x6c\x3f\x09\xec\x9b\x71\x72\x80\x85\x1c\x68\x50\x9e\xc5\x28\x73\x37\xdf\x5d\xb8\xb2\x43\x3d\x29\xbe\x93\xb9\x86\xee\xff\x13\xe2\xda\x91\xff\x17\xc8\x85\x9f\xfe\x37\xca\x3a\x9a\x0f\x17\xc0\xb0\x3f\xee\x58\x6e\x51\x60\xdd\x17\xfb\xac\x61\x48\x71\x2e\x62\x02\x38\x2f\xb3\x9f\x83\x82\xce\x29\x13\x29\x6f\xb9\xcf\x88\xc2\x44\x44\x74\xc4\x5e\xa3\xff\xea\xb8\xad\xe1\x10\xc2\xfe\xec\x14\xf1\xfb\x6c\x77\xe0\x5a\x83\x11\xc5\x63\xb9\xd5\xd9\x07\x62\xe4\xe5\xf0\x92\x17\x70\x87\x92\xf1\x0a\x0b\xe3\x2f\x43\x02\xe1\xd7\xd4\x1e\xe8\xf2\xe0\xd7\xf4\x12\xde\xdc\xa7\xe6\xc2\x10\x6a\xcc\x2e\x2a\x2e\xc6\xc4\xe5\x79\x46\x36\x60\x03\x01\x54\x9f\x39\x63\xcb\xc7\xdc\x70\x09\x7f\x83\x77\xd6\xe2\x29\x83\x0f\xdd\x6a\xcd\xad\xbe\xa9\x10\x98\x52\x7c\x23\xb6\x28\xb4\xa2\x2b\x16\x83\xd6\x2a\x62\x5a\x8a\xb5\x1d\x77\xb6\xfb\x9b\xaf\x6b\x8b\xa2\xd6\x34\xfd\x63\xa3\x79\x2d\x58\xe5\xf3\x74\x22\x26\x8e\x11\x82\x6f\xbe\x99\x0c\xa1\x3d\x16\xbc\x7e\xce\xbb\x87\x8c\x35\x87\xdb\x47\xb1\xe7\xad\xf3\xe6\x45\x0f\x21\xd3\x9e\xf5\x19\xff\xdf\x00\x00\x00\xff\xff\x51\x3e\x64\x96\xc4\x1c\x00\x00")

func templateBuilderUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateBuilderUpdateTmpl,
		"template/builder/update.tmpl",
	)
}

func templateBuilderUpdateTmpl() (*asset, error) {
	bytes, err := templateBuilderUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/builder/update.tmpl", size: 7364, mode: os.FileMode(420), modTime: time.Unix(1565093357, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateClientTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x4b\x6f\xe3\x36\x17\x5d\x4b\xbf\xe2\x7e\x82\xe7\x83\x14\x28\x34\xd0\xa5\x8b\xac\xe2\x59\x64\x93\x4c\x3b\x29\xba\x1c\x30\xd4\x95\xcc\x46\x26\x35\x14\x1d\x3b\x50\xfd\xdf\x0b\xbe\xf4\xf0\x2b\x6e\xd0\x95\x2d\x52\x3c\xf7\xdc\xc3\xc3\xcb\xab\xae\x83\x02\x4b\x2e\x10\x12\x56\x73\x14\x3a\x81\xfd\x3e\x8e\xbb\x0e\x66\xcd\x6b\x05\x8b\x3b\x78\xa1\x2d\xc2\x8c\xdc\x4b\x51\xf2\x8a\x7c\xa3\xec\x95\x56\x68\x5e\xea\x3a\xd0\xb8\x6e\x6a\xaa\x11\x92\x15\xd2\x02\x55\x02\x33\xbb\x9c\xaf\x1b\xa9\x34\xa4\x71\x94\xd4\xb2\x4a\xe2\x38\x4a\x0c\xe2\x31\xc8\x7c\xcd\x2b\x45\x35\x26\x71\xd4\x75\xa0\xa8\xa8\x10\x66\x3f\x72\x98\x09\x13\x7a\x46\x1e\x65\x81\xad\x81\x8c\x1c\x82\x38\x01\xe1\xc6\x87\x01\x8b\x75\x0b\x28\x0a\xb3\x30\x8b\xe3\xf9\x1c\xee\x6d\x6e\xc0\x5b\xd0\x2b\x04\x97\x29\xe8\x15\xd5\xb0\x92\x75\xd1\x02\xad\x6b\x30\x43\x2f\x1b\x5e\x17\xa8\x5a\x12\xeb\xf7\x06\xc3\xb2\x56\xab\x0d\xd3\xd0\xc5\x11\xb3\xd1\xe3\x68\x3e\x87\xef\x6c\x85\x6b\x7a\x00\x59\x4a\x05\x4c\x21\xd5\x5c\x54\x39\xb8\xe4\xb8\xa8\x80\x8a\x02\x0a\x25\x9b\xc6\x3c\xb4\x76\x25\x89\x23\x0f\x71\xe3\x45\x20\xee\xf9\xa2\x14\xb7\x56\x8b\xf9\x1c\x5c\xd6\x8f\x74\x6d\x52\x3e\xc1\x82\x0b\x8d\x8a\x32\x1b\x7d\xcb\xf5\xca\xce\x4f\x17\x0d\xc9\x46\xd1\x74\xe6\x66\xf2\xe8\x54\xb0\xb4\xbc\xa8\x7b\x2b\xea\x23\x6e\xbd\x40\x36\x65\x6c\x81\x82\xc0\x6d\x60\xe1\xb4\xda\x28\x2c\x06\x02\x15\x7f\x43\x01\xb2\xd1\x5c\x8a\x96\xc4\xe5\x46\xb0\x01\x26\x95\x8d\x6e\x81\x10\xf2\x64\xe7\x33\xb8\xf1\xf0\x46\x78\x23\x82\x43\xec\x6a\x59\x2d\xa0\x96\x15\xf9\xa6\xb8\xd0\xb5\xd8\xc7\x11\x23\x1e\xd3\x62\x10\x42\xb2\x38\x52\xa8\x37\x4a\xc0\xff\x1d\x48\x17\x47\x7e\xf7\x16\xc0\xf2\x38\xf2\xe2\x2f\x20\x88\xff\x88\x5b\x37\x94\x32\x52\x28\xfe\x86\x2a\xcb\x9d\x30\x97\xf7\x62\x2a\xdd\xc2\xa4\x73\x42\xbd\x94\x05\x34\x23\xa1\x5d\x19\x64\x7c\xde\x81\xa3\x1a\xf4\xd3\x8a\x8a\xd6\x6c\x9d\x14\xb4\xf6\x6a\x7a\xad\x52\x16\x44\xc9\xe0\x79\x97\x32\xbd\x33\xa2\x68\xdc\x69\x73\x30\xcc\x6f\x06\xe9\xcd\xf3\x2e\x07\x54\x4a\xaa\xcc\x48\xc7\x4b\xf8\x91\x83\x7c\xb5\x0a\xfa\xd4\x48\x7a\xa3\x77\x4b\x97\xe5\xaf\x66\xce\xc8\xe3\x05\x13\xbc\xce\xa1\x5c\x6b\xf2\xd5\x40\x94\x69\x12\x8a\x81\xc9\x8e\x51\x21\xa4\x39\x11\x54\x69\xa0\x63\xaa\x76\x93\xb9\x98\x0e\x26\x99\xc9\x33\xd2\x8e\x90\x61\x20\x70\xeb\x88\xe7\x3d\x99\xcc\x72\x34\xf3\xff\xbb\x33\xd1\xaf\x26\x63\x59\xd8\xe3\x35\x8e\xb9\x80\x2f\x6f\x89\x8d\xe7\x82\xb3\xb2\x1a\x99\xc7\x85\x5c\x80\x21\x60\x8d\xc4\x48\x2d\xab\x1c\xde\x50\xbd\xc8\x16\xcd\xb3\xff\xbb\x1f\x2c\xf4\xbc\x9b\xd8\xa7\xac\xfe\x53\x67\x94\xd5\xb1\x37\x72\x93\x79\xec\x2a\xf1\xa5\x28\x06\xd0\x9f\xb7\xc5\x1d\x34\xe6\x40\xf4\x11\x92\xfb\xa1\xa2\xfb\x8a\xe1\x5f\x75\x15\x83\x8e\xeb\xc5\x71\x79\x08\x65\xca\x56\xc2\xe9\xe2\xa3\x82\xe8\xaf\x0c\x85\xf6\x9c\xce\x04\xf9\x1d\x19\x1a\xa1\x61\xbf\xef\x3a\x30\xdb\xfb\xd3\x4d\x27\x2c\x71\x63\xf6\xc9\x53\x2e\x21\xf9\x42\x7e\x69\x93\x3e\xfc\xdf\x50\xcb\x6d\x58\xed\x8b\x8e\x2f\x39\x53\x26\xc3\xc9\xb9\x98\x4b\xa9\xe4\x7a\x54\x80\x1c\xeb\xa1\xfe\x4c\x30\x53\xe6\xe7\x33\x57\x07\x87\x60\xdd\xe0\x88\xc9\x44\xd7\x3b\x23\x9c\xe9\x7b\x5b\x10\xc7\xec\xdc\x80\x2f\xb9\x96\xe5\x84\xe1\xe8\x7c\x4f\xa0\x33\x0f\x95\x66\x87\x45\xd9\x01\x1e\x50\x3a\x98\x1e\x88\x11\xf7\x2f\xf0\xfb\xa3\x29\x26\xfc\x04\x6c\xdc\xc8\x27\x08\x3a\xac\x23\x82\x3e\xc4\x39\x82\x6e\xfa\x03\x82\x4f\xe2\x23\x8e\xc3\x9e\xa2\xd0\x5c\xbf\x7f\x44\xf3\x49\x60\x1a\xcc\x77\x74\xd1\x9d\x4e\xc1\x90\x18\xb2\x60\xa4\x1f\x7d\x58\x8e\xa0\xc8\xc3\x32\x3b\xe4\xfe\xb0\xbc\x9a\x3d\x2f\xae\x60\xfe\xb0\x4c\x79\xe1\xb7\xe5\x61\x49\x9e\xcd\xc1\xbc\x8e\xf5\x29\xed\x9f\xc4\xb1\xfc\x39\xf0\x62\x01\xbc\x08\xdb\xb0\xc4\x1a\x27\x3e\x2e\xdc\xc0\x27\x6c\xe2\xa0\x8e\x6c\xe2\x23\x9c\xa3\xea\xa6\xcf\xda\xc4\x4d\x4f\x6c\x72\x8a\xe2\xf5\x2e\xe9\x01\xaf\x77\xc9\xc0\x61\xec\x92\x7e\xf4\x9c\x4b\x46\x2f\x5c\x4b\xfe\x92\x49\xc6\xf1\xae\x30\xc9\x29\xd2\xa7\x94\xb7\x26\x21\x61\xef\xc8\x9f\x2b\x54\x4e\x9a\x71\xc7\x4d\x6c\xcc\x2c\x3b\x5b\xfd\x7e\x6e\x50\xbd\x7f\xc6\x34\xbf\x99\x85\x47\x9e\xb1\xa3\x67\x89\xdb\xd9\xd3\x8e\x99\x5e\xa6\xe8\xef\xaa\xaf\x45\xe5\x3e\x32\x0c\x4c\x20\xd9\xdf\xa6\x69\x43\x5b\x46\x6b\x98\xa1\xd5\xd2\x46\xc9\x20\xb1\x51\xc2\xd5\xea\x42\x76\x30\xbc\x1a\x2e\x1e\x93\x39\xc7\xb6\xbf\x92\x86\x19\x2c\x2a\x04\x59\x02\xfd\x57\x5a\x9c\x0a\xf2\xa1\x55\x43\x4e\xee\x0a\x73\x9b\xb1\xb8\x73\xb2\x8d\xb2\xba\xa0\x5d\xd4\x6e\xb9\x66\xab\xa1\x7f\x5c\x72\x5a\x23\xd3\xa9\xed\x30\xed\xf7\xd6\x48\xd8\x56\x4b\x65\x9c\x61\x7b\x95\xef\xfe\xc1\xf5\x44\xcc\x7c\x4d\x76\x1d\xfc\x25\xb9\xe8\x5f\x0c\x68\x2d\x24\x39\x18\x4d\x17\xae\x7b\xba\x75\x1f\x0e\xb8\xd3\xa6\x05\x98\x09\x48\x42\x5b\x91\xf8\x66\xc2\x6c\x5d\x62\x76\xd2\x77\x5c\xb6\xe5\xd2\xeb\xa6\xee\xf7\xaf\x84\xa4\x70\xe8\xf3\x2f\xed\xdc\xe6\x3e\x37\xdd\x40\x32\xd0\xec\x97\xde\xc2\xae\xff\xa2\x75\x28\x64\xd4\xca\xf5\xcd\xd9\x41\x17\x1f\x5c\x68\xb1\x63\xeb\xa2\xd0\xb1\x0c\x7f\x47\x83\xff\x04\x00\x00\xff\xff\xae\x82\xd0\xd9\x73\x0f\x00\x00")

func templateClientTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateClientTmpl,
		"template/client.tmpl",
	)
}

func templateClientTmpl() (*asset, error) {
	bytes, err := templateClientTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/client.tmpl", size: 3955, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateConfigTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xbd\x8e\xdb\x3c\x10\xac\xc5\xa7\x58\x18\x2e\xe4\x0f\x07\xba\xff\x00\x57\x49\x79\x40\x52\xa5\x0d\x28\x6a\xc5\x63\x4e\xe6\x2a\xe4\xea\x90\x03\xa1\x77\x0f\xf8\x77\x52\x80\x2b\xdc\x59\xdc\x99\xd9\xd9\xd9\x75\x8c\x30\xe2\x64\x1d\xc2\x49\x93\x9b\xac\x39\xc1\xb6\x09\x11\x23\x9c\x97\x57\x03\xff\xdf\x60\x50\x01\xe1\x2c\xbf\xe4\xaa\xfc\xae\xf4\xab\x32\x98\x40\x31\x02\xe3\x7d\x99\x15\x23\x9c\x5e\x50\x8d\xe8\x4f\x70\x6e\xf4\xbd\x64\xef\x0b\x79\x6e\xa5\xeb\x15\xbe\x2d\x6c\xc9\xc1\xb4\x3a\x9d\x7f\x30\x41\xe9\xbd\x7a\x04\x7e\x41\xd0\xb3\x45\xc7\x52\xf0\xfb\x82\x47\x74\xff\x5f\xc1\x5d\xb2\x4c\x71\x04\x36\x14\x4e\x55\x50\x05\x4d\xfe\xa0\x04\xca\x8d\x60\x39\xc0\xb0\xda\x79\x44\x5f\x95\x0b\x05\x02\xfb\x55\x33\x44\xd1\x5d\xaf\x30\x7a\xfb\x86\xbe\x89\xd6\xaf\x35\xe0\x98\x25\xf1\x0f\xea\x95\x11\x46\xc5\x2a\xe7\xe2\xf1\xf7\x8a\x81\x83\x14\x5d\xc5\x8e\x56\xcd\xa8\x59\x7e\xcd\x9f\x59\xf3\x0d\xfd\x40\x01\x01\x9d\x1a\x66\x04\x55\x1f\x2c\xbf\xc3\x4c\xc6\x58\x67\xa4\xe8\x1a\x68\x20\x9a\x33\x6b\x26\xb3\x37\xae\x38\x20\xf7\xa1\x76\xa7\x11\xa5\xe8\x12\x2c\x67\x23\xa5\xb4\x8e\xd1\x4f\x4a\x63\xdc\x2e\xe2\x98\x75\x00\xb5\x2c\xb3\xc5\x32\x15\xd5\xb7\x14\xfd\x47\x72\x40\xc3\xaf\xe4\x5b\x24\x31\xe8\x35\xb4\xac\x1b\xbc\xa7\x85\x03\x48\x29\x8b\xe4\x25\x05\x96\xac\xfd\x7c\x4a\x88\x74\x29\x5e\x39\x93\xd5\x43\xaa\x75\xb4\x70\xaf\x2f\xa2\xdb\x44\x67\x27\xd0\xb2\x19\x4f\x35\x2d\x6b\x5c\xb7\x3d\x30\x1c\x56\xd3\xb7\xc2\x13\x68\x39\x93\xc9\xf4\x32\xc9\x8f\x4a\x0f\xc8\xe1\xb8\xdb\x16\x0d\x53\x8b\xa6\xce\x50\x09\xfd\xa5\x9d\x50\x14\x9d\x47\x5e\x7d\x3d\xa6\xc3\x88\xc5\x52\x33\x78\x03\xf6\x2b\xee\x9d\x9f\xc9\x3c\xde\xf5\x99\x4c\x3f\xb9\x4f\x57\xf2\xb0\x91\xb4\xd3\x1b\x4c\x6e\xb7\x50\xae\x69\xff\x9b\xfc\xe3\xa5\x24\x56\xfb\x17\x64\xff\xe9\x35\x3e\x6c\x60\x5f\x4e\xbd\xe2\xec\x23\x46\x40\x37\xc2\xb6\xfd\x0d\x00\x00\xff\xff\xd4\xa2\x5c\x51\x35\x04\x00\x00")

func templateConfigTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateConfigTmpl,
		"template/config.tmpl",
	)
}

func templateConfigTmpl() (*asset, error) {
	bytes, err := templateConfigTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/config.tmpl", size: 1077, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateContextTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x91\x41\x6b\xb3\x40\x10\x86\xcf\x99\x5f\xf1\x22\x81\x4f\x3f\xc4\xdc\x0b\x3d\x05\x7a\x29\x94\x9e\xda\x63\xd9\xae\xa3\x2e\x31\xb3\xb2\x8e\x4d\xc2\xe2\x7f\x2f\x46\x6d\x42\xae\x3b\xef\xbc\xfb\x3c\x4c\x8c\x28\xb9\x72\xc2\x48\xac\x17\xe5\xb3\x26\x18\x47\xa2\x18\xb1\xed\x0e\x35\x9e\x9e\xf1\x6d\x7a\xc6\xb6\xd8\x7b\xa9\x5c\x5d\xbc\x1b\x7b\x30\x35\x4f\xa1\x18\xa1\x7c\xec\x5a\xa3\x8c\xa4\x61\x53\x72\x48\xb0\xbd\xae\xbb\x63\xe7\x83\x22\xa5\xcd\x5f\x2d\x65\x44\x7a\xe9\x18\xcb\xc3\x2b\x5f\xd0\x6b\x18\xac\xc6\x91\x68\xb7\xc3\x4b\xf0\xc7\xfd\x3c\x43\x60\x1d\x82\xf4\xd0\x86\xb1\x6f\x1d\x8b\xa2\x57\x1f\xb8\x84\x13\x98\xb5\x22\x87\x0f\x10\xd7\xc2\x55\x53\x32\x30\x5c\x2f\xff\x14\x5e\xb8\xa0\x6a\x10\x7b\xdf\x99\x5a\x3d\xaf\x8b\xc5\xf2\x96\xe1\xff\xd2\x1e\x69\x63\x73\x7c\x4d\xbe\x56\xcf\xc5\x87\x69\x07\x4e\x6f\xa4\x71\xcc\x8a\x74\xc9\x66\xb4\x99\xf1\x60\x69\x26\x7f\xe3\xd3\x23\xb8\x81\xf0\x69\xfd\x0e\x27\xa7\xcd\xd5\xa5\x76\x3f\x2c\xab\x91\x51\x35\xb6\xe1\x72\x61\xbd\xb5\xa4\x9d\x09\x53\xe0\x81\x36\x87\x5d\x79\xb3\xc7\xd9\x24\xb0\x52\x2d\x93\x4f\xa7\xcd\xec\x31\xd7\xe5\xb8\xf7\xc9\x61\x33\x9a\x0f\xcd\x52\x4e\x47\xfb\x0d\x00\x00\xff\xff\x1a\x16\x95\x3e\x0b\x02\x00\x00")

func templateContextTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateContextTmpl,
		"template/context.tmpl",
	)
}

func templateContextTmpl() (*asset, error) {
	bytes, err := templateContextTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/context.tmpl", size: 523, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectGremlinByTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xc1\x8e\xe3\x36\x0c\x3d\xdb\x5f\x41\x04\x73\x88\x83\xc4\x06\x7a\x2c\x90\xc3\xb6\xc5\x16\x05\x16\x6d\x81\x6e\xdb\x63\x86\xb1\x68\x47\x18\x45\x72\x25\x3a\xdb\x81\xa1\x7f\x5f\x88\x4a\x1c\xef\xec\x2e\x66\x4e\x86\x49\x91\x7c\x24\x1f\xdf\x34\x81\xa2\x4e\x5b\x82\x95\xd2\x68\xa8\xe5\xa6\xf7\x74\x36\xda\x36\xce\x2b\xf2\x2b\xd8\xc5\x58\x16\xd3\xb4\x83\x07\x31\xc0\x8f\x7b\x78\xa8\xff\x6a\xdd\x40\xf5\x1f\x62\x90\x07\xdd\x68\xdb\x35\x7b\xd8\xa8\x60\xea\x8f\x1e\x2f\xe4\x03\x9a\x0a\xa6\xb2\x28\x3a\xe7\xe1\xb0\x85\x2e\x85\x7a\xb4\x3d\x41\xa7\xc9\xa8\x20\xce\x82\x7d\xfd\xd3\xf3\xba\xdb\x42\x8a\x9c\x26\x18\x30\xb4\x68\x6e\xd5\x62\xac\xca\xa2\x88\x65\x11\xcb\x84\x81\xac\x82\x18\xcb\x72\x9a\x9a\x0d\xb4\x63\x60\x77\x86\xa0\x7b\x8b\x3c\x7a\x82\x54\xa8\xf7\x6e\x1c\x76\xc7\x67\x48\x88\x58\x3b\x0b\x9b\x26\xa6\xe0\xef\xf6\x29\x11\xcd\x9c\xe5\xda\x71\xd3\xc0\xaf\xf9\x01\xf4\xc4\x01\xf8\x93\x03\x83\x47\x32\x01\x30\xc0\x80\x1e\xcf\xc4\xe4\x43\x0d\x1f\x4f\xa9\x21\x1f\x18\xc6\x40\x0a\xb4\x05\x3e\x11\x3c\xbe\x0b\x8f\x10\x98\x06\x41\x95\x2c\x83\x27\xa5\x5b\x64\xda\x4a\x76\xb4\x4a\xcc\x81\x5a\x67\x15\xe8\x00\x68\xc1\x0d\x09\x32\x1a\xb0\x78\xa6\x39\xd2\xd2\xff\x7c\x0f\x0f\xb0\x76\x5e\x7c\x06\x99\x3c\x8c\x01\x7b\xaa\xea\xb2\xb8\xe1\x95\x5d\x04\xf6\xda\xf6\x5b\xc8\xdf\x0a\x66\xc3\x8b\x0d\xbd\x18\xeb\x2b\x53\xc2\xb0\x5a\xec\x3b\x30\x7a\xde\xc2\xe1\xd5\x22\xb2\x69\x4f\x3c\x7a\x0b\x9d\xad\xaf\x40\x6f\xf1\x64\x55\xf5\xf5\x82\x5f\x41\x92\x00\x2c\xc9\xd9\xd9\x25\x33\xdf\x8f\xb6\x85\xd9\xf7\x49\xf3\xe9\x7d\xa2\xdc\xf2\xc9\xbf\xb3\xf1\x65\x3f\x09\xc3\x9b\x3a\xd2\x9d\xbc\xdd\xef\x61\xb5\xca\x64\x96\x5f\xf8\x85\x3a\x1c\x0d\x4f\x93\xc0\x8a\xf1\x43\xe2\x4d\xa6\xf1\x6d\x0a\x64\xd5\x16\x0e\x87\xfa\x5d\xc8\x55\xab\x44\x7d\xdd\x2d\xb1\xc6\xf8\xb7\xed\x9c\x51\xeb\xaa\xfe\x07\xcd\x48\x61\x2d\x67\x23\x2f\x73\xde\x75\x35\x4d\x40\x26\x10\xc4\x78\x37\x26\xa0\x1f\x5c\x8b\x46\xbc\x32\xcf\x54\xe6\xdb\x53\x6e\x36\x77\xce\xb5\xce\x06\x46\xcb\xe1\xcb\x43\x52\xb9\x1b\xb8\x08\x88\xfa\x8d\xf7\x24\xc9\xde\xba\x20\x61\xfb\xc2\xfb\x7b\xfa\x9f\xbd\xc3\x53\x9f\x9c\x47\x0c\x04\x0f\xf5\xcf\xce\x76\xba\xaf\xff\xc4\xf6\x09\xfb\xfc\xaa\x69\xbe\x3d\xf2\x74\x54\xe9\x7e\x6e\x1d\xc8\xfd\x7e\x79\x5a\x73\x00\x60\xdf\x7b\xea\x51\x24\xe3\xa6\x1d\xb5\xe4\xfe\x8d\x21\x9c\xdc\x68\x14\x1c\x29\xdf\x38\xe6\xbc\x81\xfd\xd8\xf2\x8e\xb1\x97\x7c\x8a\x5a\xa7\x84\x2c\xce\x03\xc2\x19\x07\x78\xa2\x67\x71\x69\xcb\xe4\x31\xeb\x51\xda\xb0\x84\x67\x2a\x90\x02\x4f\x61\x70\x36\xd0\xb5\x9c\x85\xac\x7d\xec\x12\xbc\xff\x46\xc7\x74\x1d\x51\x8c\xf0\x43\x4a\x7e\x76\x7e\x16\xd1\xa4\x23\x78\x71\x5a\xa5\xfd\x75\x46\xb7\x2c\x10\xc6\x40\x59\x87\x52\x87\x69\x82\x99\x05\x8b\xbf\x3b\x63\x32\xaf\xb6\xb0\xca\x8a\x7a\x48\xb5\x56\xd5\xa3\xa0\x99\x65\x54\x60\x5f\x25\x57\xc0\xe8\x05\x4e\x77\x21\xef\xb5\x22\xd0\x5c\x97\x85\xec\xfe\x3b\x2b\xd9\x7f\xdd\xd3\x82\x92\x9f\x03\x00\x00\xff\xff\x56\xd6\xdf\x2a\x8f\x06\x00\x00")

func templateDialectGremlinByTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectGremlinByTmpl,
		"template/dialect/gremlin/by.tmpl",
	)
}

func templateDialectGremlinByTmpl() (*asset, error) {
	bytes, err := templateDialectGremlinByTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/gremlin/by.tmpl", size: 1679, mode: os.FileMode(420), modTime: time.Unix(1564494654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectGremlinCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4b\x6f\xe3\x36\x10\x3e\x4b\xbf\x62\x6a\x78\x17\x54\xa0\x32\xe9\x35\x85\x0f\xdb\xd4\x8b\x35\xd0\x66\x1f\x49\x73\x59\x04\x01\x43\x8e\xb4\x44\x64\x4a\x4b\x52\xde\x04\x82\xfe\x7b\x31\x94\x6c\xc9\xb2\x5d\xf4\xb5\x27\x8b\xe4\x3c\xbe\xf9\xe6\x1b\xd2\x4d\x03\x0a\x33\x6d\x10\x66\x4a\x8b\x02\xa5\x3f\xcf\x2d\xae\x0b\x6d\xce\xa5\x45\xe1\x71\x06\x6d\x1b\x37\x0d\xcc\x1f\x6b\x5d\x28\xb4\x70\xb9\x80\x4a\x38\x29\x0a\x98\xf3\x1b\x59\x56\xc8\x7f\xe9\x4f\x7a\x43\x8b\x12\xf5\xa6\xb3\xdc\x7d\xef\xdc\xdb\x36\x8e\xb3\xda\x48\x60\x7b\xb6\x6d\x0b\x67\xe3\x2c\x6d\x9b\x40\x0f\xe4\x46\x6c\x90\x49\xff\x0c\xb2\x34\x1e\x9f\x3d\xbf\xea\x7e\x13\x60\xc1\x85\x5f\x8b\x35\x42\xdb\xa6\x80\xd6\x96\x36\x81\x26\x06\x00\xb0\xe8\x08\xc1\xeb\x3e\x0a\xff\x84\xae\x2a\x8d\xc3\xa6\x0d\xc7\x5f\x6b\xb4\x2f\x29\x3c\x6a\xa3\xb4\xc9\x83\xe9\x04\x10\xef\x3d\x59\xc2\x3f\x92\x31\x4b\xe2\x48\x67\x94\xe4\x98\xb1\xb2\xf4\xc5\x97\xcf\x28\x09\x6c\x3a\x4d\x90\x12\xa0\xe4\xe7\xe0\xfe\xc3\x02\x8c\x2e\xa0\x89\xa3\xc8\xa2\xaf\xad\xa1\x65\x80\x1f\x47\xed\x36\x49\x0a\xe5\x13\x25\xd2\xee\xaa\x34\xce\x0b\xe3\x97\x54\x1e\xeb\xc2\x94\x4f\x27\xdd\x03\x27\x9f\x46\xc4\x12\x0b\x63\xa2\x1a\x59\x9a\x4c\xe7\x97\x07\x35\x74\xfb\xed\xb4\xcc\x71\x30\xfe\xd6\x96\xeb\x2d\x95\xec\x6f\x97\xd4\xef\x4d\xa3\xa5\x64\x15\xff\x63\x45\xb0\x04\xce\x94\x2b\xf8\xad\x15\x1b\xb4\x4e\x84\xbc\x4d\xf3\x23\x7c\xd3\xfe\x0b\xf0\xeb\x7a\x1d\x28\xb3\x42\x1b\x4f\x82\x8b\x22\xff\x52\x21\xe9\x67\xbb\xe9\xbc\xad\xa5\x0f\x70\xa3\xca\xa2\x9a\xc6\x3b\x3f\x1f\x5b\x93\x85\x96\xc2\x23\x27\x7b\x8f\xce\x1f\xb1\x0f\xdb\x6b\xe1\xe5\x17\x74\x20\x8c\x02\xed\x5d\x17\x44\x18\x4f\x8e\x84\x63\x08\x1a\x14\xb7\x16\x4f\xc8\x3e\xdf\x9f\x0d\xdb\x29\x5c\xa4\x44\x13\xa7\x7a\xbb\xa2\xd0\xa8\x50\xc4\x86\x3c\x72\xfe\x46\xa9\xbb\xc0\x14\xff\x20\xe4\x93\xc8\xa9\xa3\xfc\x37\xf1\x88\x45\x6f\x6f\x85\xc9\x11\xe6\x0f\x29\xcc\x33\x72\x99\xf3\xb7\x1a\x0b\xe5\x3a\x26\x74\x76\xd0\x76\x72\x9a\x67\xfc\x26\x70\x12\x6c\x89\xfc\x51\x47\x43\x58\x9d\x91\xd1\x1f\x46\x7f\xad\xb1\x0b\xb5\x5f\xce\x02\x44\x55\xa1\x51\x6c\xb4\x99\xc2\xeb\x61\x15\x22\x75\x74\x5f\x42\xce\xef\x58\xc2\xdf\x09\x77\xbc\x94\x14\xa6\xdb\xb4\xce\xf8\x76\x14\x82\x76\xce\x0e\x0b\x39\xac\x23\xe1\x57\x65\x6d\x3c\x4b\xd2\x2e\x3d\xb5\xe9\x12\x1e\x1e\xf8\xca\xb1\x8a\x5f\x2f\x3f\xb2\x8b\x24\xd9\xc5\x65\xd7\xf8\x6d\x69\x6d\x57\x65\x08\xf1\xdd\xf1\xf5\xc0\xa8\xdb\xd1\x5e\xbf\xa3\x68\xc3\x3f\xd8\xb2\x42\xeb\x5f\x18\xc9\xed\x46\x9b\xbc\xc0\xff\x31\x75\x27\xca\x71\xce\x89\x7e\xb0\xd3\xcf\x52\xe5\xd8\xcb\x27\x68\x45\x69\x8b\xd2\xeb\xd2\xd0\xf1\x6c\x65\x66\xa3\x33\x43\x77\x0c\xbd\x11\x56\x1b\x9f\xc1\xec\x95\xe3\xaf\xdc\x6c\x04\x78\x8e\x63\xa8\x71\x14\x65\xa5\x05\xad\xc2\x6b\x11\x32\x1f\x83\x8e\x53\x75\xee\xc9\x12\xf9\xca\xad\x0c\x8d\xe2\x4e\x99\x13\x9c\x0b\x98\xbd\xaf\xfd\x6c\xef\x34\x20\x3d\x04\x8a\xfc\xf6\xa5\xc2\xd3\x70\xa9\x2d\x6f\x94\x5a\x06\x61\x98\xee\x46\x4d\xc2\xb5\xc8\x48\xd4\x5a\x25\x09\x5f\x99\x3b\x36\xf4\xb3\x18\x60\x1d\x73\xbd\x2d\x07\xc7\xf7\xb5\x1f\x7b\xee\x94\x30\x54\xfa\x4e\xb8\xe9\xe5\xf6\xdf\xe6\x70\xd9\xcd\x61\x90\xf5\x3e\x30\x5a\x0c\x14\xb6\x6d\x3f\xb1\xab\x5f\x09\xeb\xbf\x1f\x2b\x52\xd3\x5f\x4d\x95\xd9\x3e\xe7\xc4\xc8\xc9\xe1\x38\x22\xdc\x93\xb7\xbf\xce\xa0\x40\x33\x26\x24\x81\xc5\x02\x2e\x3a\x15\xf5\x6f\xd3\x86\xdf\x89\xa2\xc6\xdf\x45\xc5\xbc\xad\xb1\x1f\x8e\xc8\x87\x67\x70\xe4\xfa\xf9\xe2\x9e\x13\x77\xfc\xaa\x14\x05\x3a\x89\x6c\x72\x48\x54\xa4\x07\xe1\x92\x5e\xe9\x0f\x29\x48\x3b\x88\x7d\xec\xfb\xd3\xe5\x7d\x87\xc8\x5b\x58\x80\xb4\xd3\x34\xb6\x0f\xed\xed\x16\x5c\x0f\xdd\xdb\x78\xa2\xb4\x93\x35\x8d\x38\x0b\xff\xd6\xfa\xef\x3f\x03\x00\x00\xff\xff\xf5\x30\xf6\x67\x07\x0a\x00\x00")

func templateDialectGremlinCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectGremlinCreateTmpl,
		"template/dialect/gremlin/create.tmpl",
	)
}

func templateDialectGremlinCreateTmpl() (*asset, error) {
	bytes, err := templateDialectGremlinCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/gremlin/create.tmpl", size: 2567, mode: os.FileMode(420), modTime: time.Unix(1560858191, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectGremlinDecodeTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\x41\x6f\x9c\x3c\x10\x86\xcf\xf8\x57\xcc\x87\x50\x04\x11\xeb\xfd\x0e\x55\x0f\x5b\xed\x0d\x45\xe2\xd0\x1c\x92\xb4\x97\xaa\x4a\x5c\x18\x52\x57\xc6\x20\xdb\x8b\x1a\x59\xfe\xef\x95\x0d\xac\xd8\x2d\xca\x56\xed\xa9\x52\x6f\x78\x66\xfc\xce\xcc\x03\x2f\xd6\x42\x8d\x0d\x97\x08\x71\xcd\x99\xc0\xca\x6c\x9f\x15\xb6\x82\xcb\x6d\x8d\x55\x57\xe3\xb6\x93\x18\x83\x73\xc4\x5a\x48\x14\x56\xc8\x07\x54\xb0\xdb\x43\x42\xef\xe6\x93\x73\x84\x6c\xb7\x70\xa3\xba\xf6\x0e\x75\xdf\x49\x8d\xa0\x2b\x26\x35\x98\xaf\x08\x93\x1e\xa8\x39\x55\x33\xc3\x80\x4b\xd3\x81\xd7\xa4\xb7\xac\x45\x70\x8e\x92\xe6\x20\x2b\x48\x4f\xfa\x38\x07\xd7\xcb\xa2\xec\xa4\x49\xaa\x50\xc3\xf5\xa4\x4f\xe7\x68\x06\xa8\x54\xa7\xc0\x92\x68\x68\x59\x9f\xfb\xa3\x1f\x58\xa1\xa6\x77\xc8\xea\x8f\x4c\x1c\xf0\x3d\xeb\xd3\x8c\x44\xbc\x09\xd9\xff\xf6\x20\xb9\xf0\x37\x22\x85\xe6\xa0\xa4\x8f\x92\xc8\x91\xc8\xda\x0d\x24\x7e\x17\xaf\xd0\x2b\x2e\x0d\xc4\x43\x7c\x32\x21\x89\x06\xa6\xc2\x2a\xa1\xce\x39\xd0\x46\x1d\x2a\x13\xe4\xca\x02\x60\x5c\xb3\x2c\xe8\xc3\x4b\xef\x97\x00\x78\xfa\xa6\x3b\xb9\x8b\x79\x9d\x77\x2d\x37\xd8\xf6\xe6\x25\x7e\x22\x51\x64\x2d\x28\x26\x9f\x11\x92\xc7\x1c\x92\x66\xc4\x7c\xc3\x51\xd4\x3a\x34\x8a\xc2\x3c\x3d\xd3\x15\x13\x90\x34\x33\x15\xdf\x80\x37\x3e\x50\xea\x07\x1e\x42\x5c\x9a\xb7\x6f\xac\x05\x14\xda\x1f\x8f\x05\xb7\x07\x21\xd8\x17\xe1\x63\x1e\x2c\xca\x7a\xcc\x26\xcd\x3c\xdd\x31\x3a\x4f\x39\x66\xa7\x56\x3f\x0f\x3c\x16\x07\x58\x13\xcd\xdd\x1e\x3c\x78\x5a\x84\x0f\x28\xbd\x5a\xa0\xc9\xde\x5d\xe4\x7d\xc2\x96\x96\x05\xec\x97\x6c\x69\x59\x90\xcb\x98\xc2\x5b\x5b\xca\x58\xbb\x42\xcd\x0b\x6f\xce\xc1\x19\xde\x22\xfd\x20\xf9\xf7\x74\xd9\x75\x15\x7b\x0e\xff\x67\xb0\x64\xbc\xb9\x70\x61\x41\x6b\x7a\xdc\xf8\xe7\x09\x81\xe4\x82\x04\x9b\x4d\x35\xe4\xb2\x37\x5b\x26\x5f\x7e\xc1\x9c\x61\x13\xc1\x2b\x1c\x53\xf7\x55\xd7\x23\xbd\x0f\x81\x3f\xb2\xae\x9e\x24\x5e\xb5\xee\x5c\xf4\x77\x58\xf7\xd3\xe7\x7f\xe6\xfd\x6d\xf3\x36\x9d\x82\xc7\x1c\x86\xf0\xca\x02\x8a\x25\x5a\x7f\xe1\xfa\xfc\x13\xd9\x03\xeb\x7b\x94\x75\x7a\x9e\xc9\xe1\x6a\xf9\xe3\xf7\x97\xa3\xb2\xd8\xc1\x40\xcb\x22\x1f\x61\x5e\xc2\xbd\xce\x7b\xf7\xba\xeb\x87\xd5\x7f\xc5\x99\xd5\xd7\x8b\x8e\x3c\xe7\xf9\x8e\x0e\x8f\x5c\x16\x00\xad\x3b\xfd\x47\x00\x00\x00\xff\xff\x5e\x9a\x20\xa9\x84\x07\x00\x00")

func templateDialectGremlinDecodeTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectGremlinDecodeTmpl,
		"template/dialect/gremlin/decode.tmpl",
	)
}

func templateDialectGremlinDecodeTmpl() (*asset, error) {
	bytes, err := templateDialectGremlinDecodeTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/gremlin/decode.tmpl", size: 1924, mode: os.FileMode(420), modTime: time.Unix(1564494654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectGremlinDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x4f\x4b\x2b\x31\x14\xc5\xd7\x93\x4f\x71\x29\xe5\x91\x94\x21\xdd\x3f\x78\x9b\xa7\x82\x0b\x17\xfe\xc3\xad\xa4\xc9\xed\x10\x8c\x99\xf1\x26\x53\x2a\xe1\x7e\x77\xc9\x74\x2c\xd5\x8a\xab\x5c\x92\x73\xce\xfd\x9d\x94\x02\x0e\xb7\x3e\x22\x2c\x9c\x37\x01\x6d\x5e\x77\x84\xaf\xc1\xc7\xb5\xc3\x80\x19\x17\xc0\x2c\x4a\x81\xe5\x66\xf4\xc1\x21\xc1\xdf\x7f\x30\x98\x64\x4d\x80\xa5\x7e\xb0\xfd\x80\xfa\xff\xfc\x32\x0b\x09\x2d\xfa\xdd\x41\x79\x9c\x8f\x76\x66\x21\xb6\x63\xb4\x20\x4f\xb5\xcc\xb0\x3a\x5d\xc2\xac\x60\xe6\xb8\xda\xa3\x95\x36\xef\xc1\xf6\x31\xe3\x3e\xeb\x8b\xc3\xa9\x00\x89\x7a\x82\x22\x1a\xc2\x54\x97\xfd\x99\x1d\xfa\x1e\xd3\xd0\xc7\x84\x85\x45\xf3\x36\x22\xbd\xb7\xb0\xf1\xd1\xf9\xd8\x4d\xba\x2f\x90\xcc\x7a\xb6\x49\xa5\xef\xaa\x58\xaa\x9a\x98\x47\x8a\x67\x4a\x47\x75\xd2\x9f\x48\x2d\x7c\x4b\x6f\x81\x30\x29\xc1\xe2\xa7\x8e\xf0\x4b\x49\xa9\x60\xe5\x52\xd0\x8f\x64\x76\x48\xc9\x84\x5a\x2b\x57\xd8\x4e\x3f\x49\xa5\xaf\x4d\xba\x31\x1b\x0c\x53\xa0\xbe\x35\xf6\xc5\x74\x58\x89\xa6\x5b\x25\x9a\x6d\x4f\xf0\xdc\xc2\x30\x7d\xba\x89\x1d\x9e\xb1\x0f\x84\xce\x5b\x93\x31\xd5\xec\x66\x90\x59\x89\x86\x8f\x55\xb3\xbe\xa4\x7e\x90\x15\xbe\x14\xc0\xe8\x80\xf9\x23\x00\x00\xff\xff\x3a\xf8\xa3\x55\x1d\x02\x00\x00")

func templateDialectGremlinDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectGremlinDeleteTmpl,
		"template/dialect/gremlin/delete.tmpl",
	)
}

func templateDialectGremlinDeleteTmpl() (*asset, error) {
	bytes, err := templateDialectGremlinDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/gremlin/delete.tmpl", size: 541, mode: os.FileMode(420), modTime: time.Unix(1564440681, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectGremlinErrorsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x6f\xe3\x36\x14\x3c\x47\xbf\x62\xa2\xc6\x81\xe4\x0a\x52\x7b\x75\xe1\x93\xeb\xb4\xa7\x20\xfd\xc8\xc9\xf0\x81\x16\x9f\x64\x22\x14\xe5\x90\x94\xd2\x42\xd0\x7f\x5f\x90\x94\xbc\xd9\xc4\xc1\xe6\xb0\x37\x81\x7c\x9c\x79\x33\x6f\xf4\x86\xa1\x58\xa2\xec\x8c\x6d\x1b\x90\xd6\xad\x36\x60\x8a\xcf\x9f\x47\xa6\xb8\x24\x6d\x50\xe9\xb6\x81\x79\x96\xe0\x82\x49\x2a\xad\xc1\xb2\x18\xc7\x68\x18\xc0\xa9\x12\x8a\x10\x4f\x17\x45\xad\xa9\x91\x42\x15\x01\x21\x46\xa8\xba\x39\x3d\xd5\x58\xad\x71\x60\x86\x70\x93\x6f\x5a\x55\x89\x3a\x7f\x60\xe5\x13\xab\xc9\xd5\x44\x45\x81\x4d\xcb\x09\xa2\x39\x49\x6a\x48\x59\x03\x7b\x24\x70\x23\xf3\x7b\x7f\xae\x2c\xe9\x8a\x95\x94\x47\x55\xa7\x4a\x24\x84\xad\xd6\x9b\x56\x19\xab\x99\x50\xf6\x8e\x09\x49\x3c\xf5\x20\x49\x8a\xc4\x58\x2d\x54\x9d\x61\xb7\x3f\xbf\x1c\xc6\x14\x43\x74\xa5\xc9\x76\x5a\xc1\x58\x5d\xb6\xaa\xcf\xff\xea\x5a\x4b\x09\xe5\x27\x4d\x95\xf8\x2f\x49\xf1\x33\x28\x6f\x4c\x9d\x66\x50\x42\x46\x63\x74\xe6\x5b\x5e\x24\x7c\x54\x0d\xd3\xe6\xc8\xe4\x1f\x9a\x9d\x8e\xa6\x55\xc9\x01\xbb\xfd\xe1\x7f\x4b\x69\xb0\xd1\x71\xf6\x4c\xa3\xc7\xee\xd7\xfd\x32\xf4\x15\x5d\x89\xca\xdd\x3a\x4f\xea\xe9\x5d\x7e\x46\x4a\x0e\x19\x6e\xfb\xf4\x37\x5f\x71\xbd\x76\x7d\x38\x90\xb9\x73\xd2\x3a\xba\x1a\x3d\x44\xbf\xfb\x65\x8f\xf5\xbb\x8a\xaa\xb1\xf9\xd6\x71\x57\x49\x3c\xbb\x3f\x8e\x2b\x34\xc2\x18\xa1\x6a\x84\x26\xd0\x33\xd9\x51\x9c\xce\x60\xd7\xe1\xd8\xe4\x7f\x32\xf3\x10\xdc\x58\x3a\x82\x0c\x5f\xdd\x49\x3f\x43\x23\x54\xcf\xa4\xe0\x33\x4d\xd5\xea\xe0\xc4\x0a\x0b\x13\x67\xf0\xa0\x81\xd5\x3b\x8d\x35\x66\xe6\x7f\xb5\x68\x3e\xa4\x3e\x8f\x6e\x9a\x4b\x51\x20\xdc\x21\x9c\x87\xc4\x4c\x47\x9d\x21\xee\x99\xa7\x40\xa2\x74\x93\x63\xca\x9a\x39\x40\x17\xa7\x79\x4e\xc1\xd4\xfb\x30\x61\x23\xde\x06\x05\x31\x02\xf3\x3d\xbd\x6c\xb5\x7e\x54\xe2\xb9\xa3\x3b\x41\x92\xa3\xd4\xc4\x2c\x19\xb0\x40\xe5\x61\xa7\x04\xb8\x3e\x3a\x5f\x8a\xca\xd5\xce\x3d\xbc\x03\x49\x24\x3b\x90\xcc\x42\x15\xe6\x0c\xf7\xf8\x26\xc3\x97\x72\xf8\x2a\xd8\xb7\x17\xae\x87\xc6\xd4\x2b\x3f\xaf\x7f\x4e\x5a\x28\x5b\x25\x71\xa0\x58\x98\x7c\x61\xf0\x22\xec\x31\xa4\x61\x85\xc5\x4f\x7d\x9c\xe1\x75\x1f\x19\xfa\x74\x8c\xde\xcb\xde\xf2\x9a\x3e\xa9\x9a\x78\x4d\x97\x44\x3b\x88\x59\xb3\xab\xc9\x70\x8e\xcd\x8f\xd2\xe9\x60\x5f\xcb\x14\xfc\x8d\xc6\x99\xf7\xac\x51\x98\xcd\x94\x15\x3f\x73\x08\xc5\x45\xe9\x45\x8a\xca\x47\xac\x16\x3d\x29\x68\x32\xa7\x56\x19\xc2\xb1\x95\xdc\x19\xf0\x36\x69\xee\xc3\x32\xa1\x5c\x8e\x98\x0a\xa6\x4c\x1e\xbc\xa1\x48\x34\x96\xd3\xeb\xfc\xef\x09\x36\x45\x72\xc9\x80\x0c\x87\xb6\x95\xfe\x37\x24\xb7\x3d\x2e\xba\x30\x7e\x67\xbf\x68\xc7\xd2\x49\x9b\xff\xce\x2c\xcb\x40\x1f\xae\x1a\x25\x5c\x08\x98\x34\xe4\x7f\xd7\x79\x01\x65\xb0\xba\xa3\xc8\xaf\x76\x52\x1c\xe3\xf8\x25\x00\x00\xff\xff\xa8\x32\x39\x7d\x48\x06\x00\x00")

func templateDialectGremlinErrorsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectGremlinErrorsTmpl,
		"template/dialect/gremlin/errors.tmpl",
	)
}

func templateDialectGremlinErrorsTmpl() (*asset, error) {
	bytes, err := templateDialectGremlinErrorsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/gremlin/errors.tmpl", size: 1608, mode: os.FileMode(420), modTime: time.Unix(1564494654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectGremlinGroupTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xcd\x6e\xdc\x2c\x14\x5d\xc3\x53\xdc\xcf\x8a\x3e\x41\x6a\x11\x75\xdb\x6a\x16\x4d\x7f\xb2\x4a\xa5\x66\xda\x6e\xaa\x6a\x44\xe0\x32\xb5\xe4\xc1\x2e\x60\x6b\x22\x8b\x77\xaf\xc0\xcc\xc8\x99\x99\x54\xea\x0a\xb8\x3f\xe7\x9c\xcb\xc1\x9e\x26\xd0\x68\x1a\x8b\x50\xe9\x46\xb6\xa8\xc2\xcd\xd6\xe1\xae\x6d\xec\xcd\xd6\x75\x43\x5f\x41\x8c\x74\x9a\xe0\xea\x71\x68\x5a\x8d\x0e\xde\xac\xa0\x97\x5e\xc9\x16\xae\xc4\x5a\x75\x3d\x8a\xdb\x92\x29\x85\x0e\x15\x36\xe3\x5c\x79\xdc\x1f\xdb\x63\xa4\xd4\x0c\x56\x01\x7b\x56\x1b\x23\x5c\x2f\x59\x62\xe4\x50\x74\xac\x95\xb4\x4c\x85\x3d\xa8\xce\x06\xdc\x07\xf1\x7e\x5e\x6b\x18\xa1\xb1\x01\x9d\x91\x0a\xa7\xc8\x01\x9d\xeb\x1c\x4c\x94\x38\xf4\x89\xfc\xff\x02\x20\x1e\xd0\xf7\x9d\xf5\x38\x45\x4a\x7e\x0f\xe8\x9e\x6a\x78\x6c\xac\x6e\xec\x36\xd7\x9d\x08\x11\xa5\xed\x4b\xaa\x64\x5c\x94\x95\x92\xc6\x24\x8a\x4b\x1d\xda\xa5\x9d\xf8\xb8\x47\x95\x94\xd6\x70\xc2\x52\x83\x43\xcf\xdf\xe6\xf6\xff\x56\x60\x9b\x36\xc9\x24\x0e\xc3\xe0\x6c\x8a\x52\x12\x33\x7e\x8b\xf6\xf4\x5e\x84\x69\xb0\xd5\x9e\xbf\xba\x98\xb3\x9e\xc3\x6a\x05\xaf\x97\x78\x0e\xbd\x78\x40\xa9\xbf\xcb\x96\x8d\x3c\x43\x8f\xbb\xfa\xa0\x7d\x91\x1d\xf0\x5e\xf6\x8b\xc9\x5e\x96\x56\x8e\xe3\x4e\x7c\x40\xd5\x69\x4c\xb8\x91\xfe\xab\x93\xe5\x26\xe1\x5a\xfb\x56\x7c\x75\x72\x44\xe7\x65\xe6\x1b\xa5\x03\x46\x09\x09\xce\xc3\x8f\x9f\x0b\x57\x29\x21\x56\xee\xf0\x2c\xca\x29\x31\x9d\x83\x4d\x0d\xc6\xe6\xa9\xa4\xdd\xe2\x99\x2f\xc6\xfa\x3c\x4d\x82\xa8\x21\xe4\xf9\x8d\x15\x77\xb3\x1c\x56\xf5\x55\x0d\x55\xc5\x0b\xf1\x0a\x64\xdf\xa3\xd5\x2c\x38\x9f\xaa\xf9\x91\xfc\x98\xc9\xc7\x1a\xd2\x32\x5f\xec\x41\xc4\x5f\x34\x64\xfb\x8e\x32\xce\xc1\xcc\x65\xfe\xcd\x46\xbc\xf3\x49\x22\x17\xdf\xac\xe9\x5a\xcd\xb8\xc8\x9e\x79\x66\x78\x4a\x19\xce\x97\xde\xbc\xf0\x8a\xc5\x5d\xfa\x8a\x19\x17\x94\x10\x42\x6e\x9f\xd8\x66\x73\x80\xb9\xac\x54\x08\xc1\xc5\xa7\xcc\xf7\xac\x69\x0e\x89\x7b\x19\xd4\xaf\xa4\x30\xd7\xad\x31\xfd\x31\xe6\x49\x52\xa0\x74\x94\x70\xb2\x79\xe6\x2a\xf1\xcf\xb8\x0f\x2c\xbd\x9c\x69\x02\xb4\x1a\x62\xfc\x13\x00\x00\xff\xff\x26\x8f\xb5\xb6\x7f\x04\x00\x00")

func templateDialectGremlinGroupTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectGremlinGroupTmpl,
		"template/dialect/gremlin/group.tmpl",
	)
}

func templateDialectGremlinGroupTmpl() (*asset, error) {
	bytes, err := templateDialectGremlinGroupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/gremlin/group.tmpl", size: 1151, mode: os.FileMode(420), modTime: time.Unix(1560858192, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectGremlinMetaTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xc1\x4a\xc4\x30\x18\x84\xcf\xdb\xa7\x18\x4a\x4f\x8b\xdb\xdc\x85\x3d\x89\x87\x05\xf1\x15\x24\xbb\x99\x76\x03\xe9\x1f\x49\x82\x22\x21\xef\x2e\xe9\x46\x2b\x5e\xbc\x78\xeb\x3f\x33\xdf\x4c\x49\xce\x6a\x8f\x8b\x97\x98\xb4\xa4\x08\x21\x0d\x0d\x26\x1f\x30\x07\x2e\xce\x0a\x8c\xd5\x8e\x97\x14\x47\xec\x55\x29\x5d\xce\x30\x9c\xac\x10\x7d\x73\x54\x4b\xaa\x85\x49\xab\xef\xae\x1e\xa5\x74\xbb\x9c\x11\xb4\xcc\xc4\xf0\x72\x87\x81\xb8\x3f\x62\x18\x1f\xcd\xcc\x88\x52\x72\xc6\xe0\xf4\x99\x6e\x95\x39\x3e\x34\x16\x87\x8a\x56\xd6\x4e\x55\x3f\xc5\x93\xbc\x31\x44\xae\xcc\xe1\x0b\x5a\x99\xe6\xfc\x42\x77\x4a\x61\x6b\x2f\x05\x57\xef\x4c\x44\xba\x12\x31\x05\x2b\x33\x6e\x8e\xa1\xf8\x54\xcf\xea\xe4\x0c\xe7\xdf\x19\x6a\xed\xb3\x5e\xea\x1a\x6c\x1b\xa6\x99\x89\xf4\xf1\x4a\x58\x59\xc3\x46\x27\x7d\xd6\x91\xe3\xed\x47\xe9\x22\xff\x7b\xfb\xcf\x4d\x31\xdb\x4b\x6d\x73\x47\xf4\xf5\xe6\xf8\xd4\x94\xbe\xfb\x99\x6e\x9f\xa5\x74\x9f\x01\x00\x00\xff\xff\x2a\x1e\xb2\xc6\xfc\x01\x00\x00")

func templateDialectGremlinMetaTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectGremlinMetaTmpl,
		"template/dialect/gremlin/meta.tmpl",
	)
}

func templateDialectGremlinMetaTmpl() (*asset, error) {
	bytes, err := templateDialectGremlinMetaTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/gremlin/meta.tmpl", size: 508, mode: os.FileMode(420), modTime: time.Unix(1564494654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectGremlinPredicateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\xdf\x6b\xdb\x30\x10\x7e\x76\xfe\x8a\x23\x14\x66\x07\x57\xde\xf3\x20\x0f\xfb\xd1\x6d\x81\xd1\xb2\x75\x74\x0f\xa5\x04\xd5\x3a\x27\xa2\xae\x64\x24\xd9\x7d\x30\xfa\xdf\xc7\x59\x4e\x9c\x5f\x5d\x43\xc3\xb6\xa7\x98\xdc\xa7\xbb\xef\xbe\xfb\x0e\xa9\x6d\x41\x60\x21\x15\xc2\x58\x48\x5e\x62\xee\xb2\x85\xc1\xc7\x52\xaa\xac\x32\x28\x64\xce\x1d\x66\x52\x8c\xe1\xdc\xfb\x51\x54\xd4\x2a\x8f\x1d\x4c\x84\x2d\xd9\x4f\xc3\x1b\x34\x96\x97\x09\xb4\xa3\x28\x72\xec\x2b\xb7\xb3\x4f\xb1\x14\xc9\x28\xf2\xa3\xb6\x3d\x07\x54\x02\xbc\x1f\x8d\x8e\xac\x91\xe9\xca\x86\x3a\x74\xf8\x4c\x57\xf0\x6e\x0a\x67\xec\x3a\xd7\x15\xb2\xab\x6a\x88\x70\xb3\xd8\x0c\xbd\x37\x8b\x17\xd9\xd1\x39\x59\x50\x52\x76\xc3\x8d\xe4\x42\xe6\x44\x2d\x8a\xa2\x86\x52\x3d\xf2\x07\x8c\x6f\xef\xa4\x72\x68\x0a\x9e\x63\xeb\x53\x28\x51\xc5\x6d\x1b\xaa\x79\x9f\x24\x04\x2e\xb4\x01\x49\x07\x0c\x57\x0b\x84\xa6\xcb\x1d\x45\xcd\xad\xbc\x83\x29\x0c\xe8\x5b\x79\x47\x01\xdf\x57\xee\x85\x18\x44\xaa\x18\x61\x75\xc5\xbe\x04\x1d\xc0\x7b\xaa\xb5\xcf\xb0\x61\x8c\xa0\x58\x5a\x04\xef\x87\x02\xf4\x5f\x97\x34\x79\x9d\xda\x85\xc4\x72\x35\xd4\x4e\xd3\x62\x53\xd1\xcf\x14\x3d\x6e\xe2\xf1\x37\x7e\x8f\x65\xda\xf5\x5e\xb0\x8f\x5a\x59\xc7\x95\x03\xef\x53\xa8\xd8\xc5\xf7\xb8\x39\x85\xe0\xe0\x88\x3f\x93\x7c\xde\x2f\xa7\xf1\xdf\x1f\x52\x73\x70\x4a\xfd\x90\x4e\x19\x08\x8a\x05\x66\x4b\xbe\xd5\x2e\x6e\x36\x74\x21\x16\xb8\x11\x2b\x89\x76\x17\xc7\x81\xf5\x10\x16\xd2\x60\xee\xa4\x56\x04\x19\x5f\xd5\x6e\x23\x2f\xf1\x47\x36\xb3\x33\x45\x6a\xf4\x49\x77\x8f\x4d\x61\x3c\x53\xe3\x75\x2c\x9b\x00\x6f\xb4\x14\x90\x4b\x93\xd7\x25\x37\x20\xb0\x42\x25\x30\x97\x68\x61\x92\x0d\x29\x02\xb1\x8e\x57\x5f\x60\x9f\x1e\x29\x73\xcc\xc6\x66\x13\x22\x2b\xdd\x1b\x0b\x5c\x01\x49\x04\x4f\xd2\x2d\xc1\x62\x59\x9c\x1b\x2c\xd0\xa0\xca\x31\x05\xc7\x1f\x10\xdc\x12\xc1\x3d\x69\x68\xd0\x38\x99\x6f\xb3\x0a\x2d\x5f\x63\x59\xfc\xc0\xa2\x5f\x7c\xc7\x3e\x68\xb7\xec\x56\x3c\x70\xf6\x3e\x59\xed\x6b\x58\xb7\x80\x22\xc0\xa0\x8b\xf7\x17\xdb\x47\xf6\xe2\x37\x71\xb2\xb3\xf6\x27\xd8\x81\xda\xfd\x07\x96\x38\x93\x61\x54\xf3\x6d\xd0\xda\x01\xaf\xb5\xcd\xc1\xcc\x5b\xd5\xff\x9b\xb7\x76\x2d\xd1\xf1\x20\x63\x19\x2c\xe0\x11\xb9\xb2\x20\x1d\xd8\xa5\xae\x4b\x01\xf7\x08\xce\xd4\x08\x52\x81\x56\x08\xba\xe8\xdc\xb6\x6e\x69\xcd\x32\x92\x2a\x05\x5d\x3b\x52\x6f\x3e\x67\x33\x75\x13\x27\x29\x7d\x5d\xd5\x2e\xf8\xa2\xbb\x42\xe6\x29\x54\xc3\x2d\x42\x53\xb7\xfd\x4d\x52\xc5\x52\x25\xfd\x97\xae\x5d\xb2\xba\x45\x22\xc7\x7e\x2d\xd1\x60\xdc\xc5\x28\xa1\x09\x9f\x51\x48\xbe\x6b\xca\x00\x96\x2a\x49\xd7\xa8\x99\x3a\x0c\xa2\x32\x01\x15\x7e\x0e\x2d\x81\xe9\x1b\xa2\xf3\xfb\x03\x5d\x79\xfe\xc5\xde\x9c\xd9\x6c\xe8\xa5\xc5\x0a\xf4\x9c\xf9\x4b\x2b\xa6\xcd\xd6\xa3\xc6\x1c\xbe\x23\x8c\x7d\xee\x7d\xf0\x36\x3c\x11\xd6\x09\x6d\xf7\x44\x38\x2c\x41\x00\x04\x1d\x56\xe6\xb8\xc4\xa7\xa0\x5a\x15\x87\x39\x53\xad\x29\xf0\x8a\xbc\x1f\x3b\x63\x53\xe8\xfe\xef\xde\x0d\xa6\x57\x23\x4c\xde\x19\xcb\x18\x7b\xe5\x4d\xa3\xb4\x3b\xa6\xf1\x1d\x96\x3d\xc9\x4d\x22\x97\xda\xc5\x6e\x97\xc4\xef\x00\x00\x00\xff\xff\x6c\xd5\xa9\x59\x50\x0a\x00\x00")

func templateDialectGremlinPredicateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectGremlinPredicateTmpl,
		"template/dialect/gremlin/predicate.tmpl",
	)
}

func templateDialectGremlinPredicateTmpl() (*asset, error) {
	bytes, err := templateDialectGremlinPredicateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/gremlin/predicate.tmpl", size: 2640, mode: os.FileMode(420), modTime: time.Unix(1564494654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectGremlinQueryTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\xdf\x6f\xdb\x36\x10\x7e\x96\xfe\x8a\x5b\x11\x14\x92\xe7\x31\x79\x18\xf6\xd0\xc0\x03\x96\xc4\xc3\x0c\xb4\xcd\xe6\x16\x7e\x19\x86\x81\x91\x4e\x32\x51\x9a\x54\x49\xca\x75\x21\xe8\x7f\x1f\xf8\x43\x8e\xec\x58\xb6\x5b\x2c\x79\xb2\x4c\xde\x7d\xdf\xc7\xd3\xc7\xd3\x35\x0d\xe4\x58\x30\x81\xf0\x2a\x67\x94\x63\x66\x2e\x4b\x85\x2b\xce\xc4\xe5\xe7\x1a\xd5\xd7\x57\xd0\xb6\x71\xd3\xc0\xc5\x43\xcd\x78\x8e\x0a\xde\x4c\xa0\xa2\x3a\xa3\x1c\x2e\xc8\x87\x4c\x56\x48\x6e\xc2\x4e\x08\x54\x98\x21\x5b\xfb\xc8\xed\xf3\x36\xbd\x6d\xe3\xb8\xa8\x45\x06\xc9\x4e\x6c\xdb\xc2\xa8\xcf\xd2\xb6\x29\x04\x1d\xb3\x3b\x9d\x64\x66\x03\x99\x14\x06\x37\x86\xdc\xfa\xdf\x14\x92\xbf\xff\xb1\x29\x64\x76\x47\x3e\x7e\xad\x10\xda\x76\x0c\xa8\x94\x54\x29\x34\x71\xa4\x50\x5b\x05\xaf\x03\x0a\x99\xa3\xae\xa4\xd0\xd8\xb4\x71\xe4\x4e\x36\x86\x07\x26\x72\x26\x4a\x17\xb7\xa7\x86\x84\xb4\xbf\x6c\x64\x92\x92\xf0\x1b\x47\xac\xb0\x1c\x87\x32\x72\x65\x9f\xc8\x74\x83\x99\xd5\x3b\x86\x3d\x96\x31\x28\xd4\xe9\xb5\x4b\xff\x61\x02\x82\x71\x2b\x33\x52\x68\x6a\x25\xec\x5f\xa7\x3e\x8e\xda\x38\x5a\xa3\x32\x2c\x43\x3d\xee\xb8\x14\x6a\x32\x47\x9a\x2f\xc2\x46\x4f\xc9\x09\x28\x96\xbb\xe3\xad\xe8\x27\x3c\x54\xaf\xab\x31\x70\x14\x49\x47\x98\xa6\x71\x54\x48\x05\xff\x8e\xc1\x2e\xe1\xc6\x91\x53\x51\x22\x74\x21\x8e\xc9\xa2\x4e\x80\x56\x15\x8a\x3c\x61\xb9\xee\xc2\x2d\x76\xb2\x47\x62\x31\xdb\xb8\x13\xe7\x82\x05\xe3\xf1\x37\xfb\xe0\x37\xce\x07\x7d\xe0\x72\xc8\x7b\xba\x7a\x5e\x17\x2c\x28\xaf\xf1\x1d\xad\x12\xa3\x6a\x7c\x71\x53\x50\x65\xe1\x2b\x5e\x2b\x77\xf9\xe6\xbd\x9a\xf5\xd7\x5d\x15\xec\x3d\xdb\x95\x75\x28\x8f\xfc\xae\xe4\xaa\x2b\x49\x72\xb6\x92\x21\xb4\x4c\x8a\x82\x95\xfb\x2f\x34\x2c\xa7\x5b\x0b\x0c\xa4\x7f\xa7\x2d\x6e\x65\x2d\xcc\x80\x31\x98\x30\xcf\x67\x06\x4f\xfc\x02\x2e\xb8\x7a\xac\x7c\x58\xe9\xda\xc1\xcc\x0a\xf8\xf6\x92\x4d\x37\x4c\x0f\x95\xec\x41\x4a\xfe\x7c\x35\xfb\x83\xea\xf7\xb8\x79\x91\xaa\x15\x94\x6b\x1c\xac\xdc\x8d\x94\xfc\x7b\x4a\x17\x64\xc3\x28\xd7\x9c\x7c\x54\x74\x8d\x4a\x53\xc7\xbb\xb6\x47\x28\xc9\xc2\x9f\xf2\x2d\x7d\x40\xee\x3b\xe1\x9f\x34\xfb\x44\x4b\xdb\x98\x88\x5b\xf5\x67\x1e\x28\x54\xff\x20\x6b\x18\xac\x27\xb9\xe5\x52\x60\xe2\x3b\x6b\x68\xd8\xd5\x63\xaf\xde\xcf\xaa\x14\xe6\x2c\xa3\x26\x74\xef\x2a\x59\xfb\x4c\x56\xb8\xee\xbf\x1f\x2e\x55\x8e\x2a\x85\x5f\xe1\xca\xeb\x20\xf7\x76\xc1\xb2\x9d\xc1\xe5\x92\x5d\x5e\xe0\xb1\x44\x6d\x1c\xe9\x2f\xcc\x64\x4b\xe0\x6c\xc5\xcc\x18\x64\x51\x68\x34\x87\xde\x7a\x08\x78\x02\xeb\x12\xae\x2d\x70\x46\x35\x7a\x9c\xae\x5a\xaf\x5f\x77\x80\x7e\xe1\x8d\x53\x3d\xb7\xfa\x92\x91\xdf\x19\x43\x78\x80\x1f\x61\xe4\x92\xd3\x80\x74\x3a\x73\x45\xcd\x92\xbc\xa3\x9b\x99\x30\xbf\xfc\x9c\x1e\x10\xe0\xb3\xde\xda\x95\x64\x0b\xee\xeb\x5b\x0b\xf6\xb9\xc6\x43\x07\xf5\x3b\xd7\xee\x0d\xf8\xe7\x14\x26\x93\x6d\xcd\xef\x30\xaf\xab\x64\xe7\xdb\xb9\x8e\xdd\x84\x85\x22\x77\x63\x54\xd3\x5c\x8e\xfc\x9d\xb8\xac\xa8\x59\x86\x39\x4e\x83\x59\xa2\x5f\x86\x12\x05\x2a\x6a\x98\x14\x60\x5f\x9c\x8b\x92\x05\x50\x28\xd9\x1a\x05\x60\x5e\x22\x81\xd1\xa5\x1f\xdc\x8e\x8e\x81\x8e\xc1\xcd\x82\x51\xd3\xfc\x04\x17\xee\x44\xdd\x00\x38\xcd\x9d\xbd\xc1\x09\xb2\xec\x16\x18\xbe\x20\x08\xc4\x1c\x8c\x74\x3a\x4a\x45\x0d\xba\x5d\x27\xc3\xc8\xc0\xec\xf1\xfa\x43\x63\x07\xdb\xfb\x36\xc4\x51\x77\x3f\x4e\xf6\x18\x0f\xc8\x0a\xb8\x40\xf2\x01\x79\x31\xc7\xc2\x01\xf8\x6e\xb5\xbd\x67\x93\xee\x46\x93\x1b\x69\x96\x4f\x6e\xaa\xfd\x8f\xb6\x2d\x6a\x43\x85\xb1\x1d\xc0\xe3\x22\xd7\x18\xc0\x67\x7a\x26\xec\xf5\xc7\xe3\xf0\x33\x31\x4d\x3c\x9a\x9d\x87\x8e\x73\x90\xfb\xda\x2c\x92\x3e\xd5\x51\xe8\xfb\xda\x4c\xcf\x50\x4e\x66\xe2\x11\xd4\x7b\xa7\xe7\xa2\xbe\x8d\x0a\x25\x57\xa7\x6d\x44\xbd\x73\xc2\xa6\xcb\xe9\x1c\x25\x64\x7e\xb6\xa3\x6c\x62\xcf\x51\xee\xd5\x5e\xec\xd8\xc8\xa2\x59\x1b\x69\x43\x95\xe9\xe9\xb1\x99\x3b\xee\x79\x69\x37\x9e\xef\x31\xb2\x78\xd2\x5d\x67\x77\xe9\xa3\xe7\xc4\xff\x6c\xba\x01\xbe\xe7\x30\xe1\x00\xd5\xd6\x94\x27\x8e\x76\xcc\x95\xff\x05\x00\x00\xff\xff\x29\x3f\x5f\x1e\x95\x0e\x00\x00")

func templateDialectGremlinQueryTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectGremlinQueryTmpl,
		"template/dialect/gremlin/query.tmpl",
	)
}

func templateDialectGremlinQueryTmpl() (*asset, error) {
	bytes, err := templateDialectGremlinQueryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/gremlin/query.tmpl", size: 3733, mode: os.FileMode(420), modTime: time.Unix(1564494654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectGremlinUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\xdf\x6f\xdb\xb6\x13\x7f\xb6\xff\x8a\xfb\x1a\x6e\x21\x05\xfa\x32\xe9\x6b\x86\x0c\x58\x53\x77\xf5\xb0\x25\x6d\x92\x75\x0f\x45\x10\xb0\xd2\xc9\x26\x22\x53\x2a\x49\xa9\xe9\x0c\xfd\xef\xc3\x91\xd4\x4f\x3b\x69\xd3\xae\xeb\x4b\x6b\x91\xc7\xbb\xcf\xe7\x7e\xf1\x98\xed\x16\x12\x4c\x85\x44\x98\x25\x82\x67\x18\x9b\xc3\x95\xc2\x4d\x26\xe4\x61\x59\x24\xdc\xe0\x0c\xea\x7a\xba\xdd\xc2\xfc\x7d\x29\xb2\x04\x15\x1c\x9f\x40\xc1\x75\xcc\x33\x98\xb3\xcb\x38\x2f\x90\x3d\xf7\x3b\x5e\x50\x61\x8c\xa2\x72\x92\xed\xef\xf6\xb8\x17\xca\x25\xd2\xfe\x9a\xeb\xcb\x32\x4d\xc5\x5d\x27\x30\x3b\x97\x9d\xd1\xbf\x51\xe5\x24\x77\x04\x75\xbd\xdd\x82\x48\xdd\x49\xfb\xe1\x36\x4f\x60\x26\x45\x36\x73\x4b\x28\x13\x3a\x39\x4d\x4b\x19\x43\x30\x00\x53\xd7\x70\xd0\xa7\x51\xd7\x21\x78\xa6\x97\xbc\xc2\x20\x36\x77\x10\xe7\xd2\xe0\x9d\x61\xa7\xee\xff\x90\x54\xfc\xbf\x67\xd4\x2a\x60\x67\x7c\xe3\x11\x60\xa6\xe9\x97\x90\xa6\xb5\x1d\x01\x2a\x95\xab\x10\xb6\xd3\x89\x42\x4d\xd8\x9f\x7a\x33\xec\x02\x75\x91\x4b\x8d\xdb\x7a\x3a\xf9\x50\xa2\xfa\x14\xc1\x7b\x21\x13\x21\x57\x56\x6e\x04\x97\xf9\x63\x23\x0c\x63\x29\x91\xb4\xb6\x43\xf6\x86\xb4\x06\xe1\x74\x22\x52\xc2\xb1\x4f\x6b\xa2\xe8\x17\x5b\xdc\x61\x4c\x9c\x23\x18\x21\x89\x40\xa1\x0e\x7f\xb2\xc7\xff\x77\x02\x52\x64\x44\x65\xa2\xd0\x94\x4a\x42\xeb\x76\xcf\x74\x3a\xa9\x1b\x63\x11\xe4\xb7\x64\x50\xe8\xd3\x5c\x6a\xc3\xa5\x59\x90\x27\x02\xa7\x2e\xbf\xfd\xac\x9a\x21\xcf\xe9\xc4\x2e\xcc\x2d\x89\x39\xbb\xe8\x28\xd8\x1d\xda\xa8\x6b\xeb\xde\x41\x50\xe2\x5c\xa6\x62\x75\xbc\x43\xdb\xad\xd3\xd9\x91\x6b\x68\xf3\xa5\xca\x37\x4d\x70\x82\xbd\xf4\x1b\xe0\x52\x64\x1e\x30\x21\xee\xd3\x51\x96\x8b\x14\x99\x23\xe2\x53\xa3\x93\x51\xa8\xd9\x05\xf2\x64\x29\x0d\x05\xc8\xca\xb8\x6c\x7d\x74\xbe\x06\x83\x4a\x10\x89\xb5\xcf\x96\x2f\xd8\xd5\xa7\x02\xfb\x85\x10\xc2\x41\xa2\x33\x76\xa5\x78\x85\x4a\x73\x4b\x85\x0c\x7f\x14\x66\x0d\xec\xac\xdc\xd8\x48\x29\x2e\xa4\x71\x58\x0d\x29\x88\xbb\x45\x6d\x54\x19\x1b\xe7\x81\x42\x61\x32\xd6\x77\x78\xd8\x97\x26\x09\x11\x73\x83\x8c\xe4\x0d\x6a\xb3\x47\xde\x2e\x6f\xb8\x89\xd7\xa8\x81\xcb\x04\x84\xd1\x4e\x09\x97\x86\x79\xbf\x76\x4a\x6d\x65\x6c\xf8\x2d\x06\xef\xae\x0f\xba\xe5\x08\x8e\x22\xa2\xcd\x88\xe5\xc0\x9b\xf6\xf7\xe1\x01\xc4\x5c\x23\xe4\x29\xb8\x2e\x06\xba\xc0\x58\xa4\x22\x86\x0a\x95\xc1\x3b\x38\x38\xac\xf7\xa5\x5c\x45\xe6\x56\xec\x6d\x20\x92\xb0\x55\xb5\x42\x89\x8a\x67\x8d\xaa\x34\x57\x70\x66\xf5\x88\x18\x75\x4f\x53\x17\xf3\x56\x4d\xc8\x5e\x71\xfd\x3b\x7f\x8f\x99\x8d\x2e\x7b\xcd\xe3\x5b\xbe\x22\x29\x66\x57\xc3\xe9\x64\x42\xfa\x6e\x22\x28\x6c\xbf\xe4\x72\x85\x3b\xc9\xdb\x3a\x56\xfb\x50\x04\x55\xe8\x3c\xd5\x27\x5e\x71\x05\x81\x2b\x0e\x91\x42\xae\xc6\x11\x0e\x32\x94\x30\x67\x8b\x64\x85\x3a\x84\xba\x56\x15\x9c\x40\xc5\x4e\xb3\x5c\x62\x10\x76\xdd\x73\x32\x31\x4a\xc3\xbb\xeb\x61\xec\xa6\x13\xef\x10\x07\x71\x7e\x13\xc1\x3c\x75\xb5\xf9\x52\x60\x96\x68\x7b\x54\xa4\x3b\xe0\xe9\x3b\x65\x97\x36\x93\xac\x24\xa5\x76\xaf\xb4\x9a\x18\xa4\xec\x4f\x29\x3e\x94\xde\x83\x83\x14\x38\x01\x5e\x14\x28\x93\xa0\xb7\x18\xc1\xd3\xee\xcb\x7a\xc5\x66\xe8\x71\xe7\xf6\xfd\x1e\x8f\x60\xbc\xec\x00\x36\x4d\xcb\x96\xf1\xc1\x97\x90\x08\xd9\x69\x5e\x52\x35\x47\xd6\x3a\x25\xf6\x31\xdc\xdc\xb0\xa5\x0e\x0a\x76\xb6\x78\x13\x1c\x85\x61\xab\x36\x38\xc3\x8f\x0b\xa5\x1c\x45\xab\xe1\xbb\xc3\x73\xb8\xa8\x3c\x06\x69\x32\xa9\xd8\x6b\x95\x17\xa8\xcc\xa7\x80\x22\x7c\x29\xe4\x2a\xc3\x7f\xd1\xee\x74\x9c\x98\xa3\xac\x41\x97\x35\x36\x0f\x7b\x8d\x3e\x11\x0a\x63\x23\x72\x49\xdb\xb3\xa5\x9c\xf5\xf6\x24\x75\x77\x1a\x3c\x94\x90\x26\x85\xd9\x13\xcd\x9e\xe8\x59\x0f\xef\x1c\xfb\x48\x7b\x59\x85\x6c\xa9\x97\x92\x52\xb8\x49\xac\x91\xb1\x13\x98\x9d\x97\x66\xd6\xdf\xb4\xd6\x76\x8d\xa1\xed\xaf\x0f\x9b\x6c\x9d\xec\x5b\x87\xc2\x4d\x5e\x21\xa0\xe5\xea\x3a\x45\x0f\x5a\x3f\xe1\xf7\x54\x4e\x9c\x21\x57\x48\xf7\x7b\x33\x70\x61\x73\xcf\xb5\x95\xd3\xf5\x1c\x6a\x23\x22\xb9\xbf\x89\x38\x28\x9f\xd1\xd6\x87\xef\x30\x5e\x62\x96\x5e\x60\xea\xfd\x63\xdc\x54\xd7\x76\x0d\xf6\x3c\x37\xeb\x85\x4d\x65\xe9\x74\x85\xae\xfd\xc8\xdc\x0c\x18\xb2\xbf\xd6\xa8\x30\xb8\xb9\x61\xe7\x8a\xfe\x5d\x4a\x5f\xa5\xcb\x17\xd4\x6b\x23\x2a\x9c\xf3\xd2\x0c\x16\xc3\xae\x29\xb1\x17\x2a\x2f\x82\x90\x2d\x0d\x2a\x6e\x30\x08\xfb\xf4\xf7\xc7\x79\x07\xea\x52\x3e\x12\xa8\x59\xa3\x1a\x02\xfa\x32\x3c\xf7\xd8\x3f\x2f\xcd\x7f\x00\xa0\x89\xa0\x6d\xe2\x6d\xe3\x34\x4a\x47\x60\x94\xbf\x35\x9a\xec\xf4\x17\xda\x20\x3b\x3f\x97\x46\xf4\x8d\xe3\x76\xbe\x7d\xb0\xe2\x2a\xf6\x4b\x92\x0c\xa9\xdb\x91\x2b\xf0\x17\x6d\xe8\xb2\x61\xd7\x85\xfb\x0e\x5e\xe5\xdd\x31\x97\x30\xf7\xe7\xee\x2b\xae\xc7\x13\xce\xbd\x99\xfd\x35\x17\x8e\xbf\x71\x46\xe5\x30\xc4\x3b\xb8\x23\x1e\x73\x49\x50\x7f\x7c\xe8\x8e\xf0\x16\x22\x20\x57\x38\xf5\xb6\xd7\x7f\x0b\x93\x15\x5b\x8c\x47\x96\x96\xc8\x57\x15\xf0\x0f\xa0\x3f\xca\xa1\xef\xe4\x0d\xfa\xe8\x2e\x91\xba\x1e\xf0\xfe\x51\xac\xfb\x15\xd0\x7e\xec\x5c\xc6\xbd\x89\xb7\x62\x6f\x79\x56\xe2\x1f\xbc\x08\x8c\x2a\x31\xec\xde\xb4\x55\xc3\xa1\x37\x17\x3e\xf8\x74\x10\x29\x64\x28\xfb\x8e\x0d\xe1\x67\x38\x72\x03\xab\xef\x37\x34\xc7\x83\x2e\x15\x82\x59\x23\x98\xf6\x59\x90\xe4\xa8\x6d\x1f\xa4\x07\x38\x17\x12\x36\xb9\x95\xe1\x12\x08\xa7\x1f\xd9\x45\x0a\x1f\x11\xd6\xbc\x1a\x3c\x51\x7c\xdb\x6a\xea\xda\x76\xd3\x76\x9c\xff\xd6\xaa\x7e\x20\x8c\xbf\x5e\x05\xcf\xfa\x51\x7c\xba\x50\xaa\xf3\xc9\x4b\x2e\x32\x4c\xb6\x1b\xbd\x3a\x86\x99\x6f\xb3\x1d\x5f\x4f\x53\xef\xe5\x39\xab\xef\x0f\xec\x84\x46\xf6\x1e\xfa\x77\x47\xd7\xf6\x71\xc0\x4e\x73\x9e\xa1\x8e\x31\x18\x6d\x12\xe6\x08\xec\x6b\xa1\x79\x67\xc4\xaa\x6b\xee\x7d\xe9\x67\xc7\xd7\x2e\x58\xce\x88\x1a\x2b\x56\x03\x65\x7b\x32\x6b\xf7\xc2\x21\x51\xff\xfc\xa5\x49\xf3\xb7\x5c\x48\xda\x60\x8c\x85\x53\xfb\xf7\x1d\x7f\xf4\x9f\x00\x00\x00\xff\xff\x51\x89\x59\x59\x85\x12\x00\x00")

func templateDialectGremlinUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectGremlinUpdateTmpl,
		"template/dialect/gremlin/update.tmpl",
	)
}

func templateDialectGremlinUpdateTmpl() (*asset, error) {
	bytes, err := templateDialectGremlinUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/gremlin/update.tmpl", size: 4741, mode: os.FileMode(420), modTime: time.Unix(1564494654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectSqlByTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x31\x6b\xfb\x30\x10\xc5\x67\xe9\x53\x1c\x26\x83\x6d\x12\x7b\xff\xc3\x7f\x48\x0b\x99\x52\x4a\xf0\xd0\xb1\xa8\xf6\x49\x11\x38\x92\x23\xc9\x0d\x41\xe8\xbb\x17\xc9\xad\x9b\x26\x25\xd4\x93\xd1\xdd\xd3\xef\xdd\x3b\x79\x0f\x1d\x72\xa9\x10\xb2\x4e\xb2\x1e\x5b\x57\xdb\x63\x5f\x6b\xd3\xa1\xc9\x60\x15\x02\x25\xde\xaf\x60\xc1\xe1\xdf\x7f\x58\x54\x4d\xab\x07\xac\x36\xa3\x6a\xa7\x1a\x1f\x55\x9b\x5b\x28\xed\xb1\xaf\x1a\x8c\x72\x6d\x0a\xf0\x94\x10\xae\x0d\xbc\x2e\x21\xe9\x0c\x53\x02\x81\x4b\xec\x3b\x9b\x8a\xc4\x56\xcf\x91\xf0\x70\xce\xa3\xd2\xfb\x08\x08\x21\xe7\x45\x41\x09\x09\x94\x04\x1a\xa9\xa8\x3a\x08\x81\x52\xef\xeb\x12\xda\xd1\x3a\x7d\x00\x2b\x85\x62\x6e\x34\x08\x91\x20\x8c\x1e\x87\xd5\xdb\x19\xa2\x11\x27\xb5\x82\xb2\x0e\x51\xfc\xeb\x54\xa9\xbb\x9e\x6f\xf8\x9c\xaf\xae\xa1\xd9\x6d\xc1\xed\x11\x5a\xdd\x8f\x07\x05\x27\xc3\x86\x01\x3b\x38\x49\xb7\x4f\xe7\x4c\x08\x83\x82\x25\xc0\x17\xa9\xa2\x24\xca\xe2\x97\x52\xb8\xca\xc0\x3a\x23\x95\xb8\x1a\xe3\x8e\x2b\x66\xb3\x7b\x91\x4e\xd7\x4d\xe1\x19\x74\xa3\x51\x10\x1b\xd6\x36\xe7\xaa\x6a\x76\xdb\xdc\x16\xcb\x08\x2a\x6e\xb3\xbb\x03\x8d\xac\x1f\x5b\x56\x37\x6b\x9e\x6b\x31\x8c\x4d\x5c\xe1\x65\xcb\xcb\x7c\xf8\x27\xeb\x17\xce\xbd\x07\xc9\x01\x8f\x09\x9a\x3d\x21\x53\x19\x84\xb0\x7e\x17\xde\x03\xf6\x16\x21\x84\xf4\x2c\xd4\xf4\x33\x8d\x93\x4f\xaa\x0b\x2f\x21\xd8\xea\x31\x4f\x4f\xab\xf8\x56\x66\x65\x36\x6b\xae\x12\xf9\x08\x00\x00\xff\xff\x4b\x3b\xbc\x12\xf1\x02\x00\x00")

func templateDialectSqlByTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectSqlByTmpl,
		"template/dialect/sql/by.tmpl",
	)
}

func templateDialectSqlByTmpl() (*asset, error) {
	bytes, err := templateDialectSqlByTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/sql/by.tmpl", size: 753, mode: os.FileMode(420), modTime: time.Unix(1564494654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectSqlCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5d\x6f\xdb\x36\x14\x7d\x96\x7e\xc5\x9d\xe1\x16\x52\xe0\x30\x69\x1f\xb3\x65\x40\xd7\xa4\x80\xb1\x75\x69\xe3\x74\x7b\x68\x8b\x81\x96\x2e\x1d\x22\x32\xe5\x90\xb4\xe3\xc0\xd0\x7f\x1f\x2e\x65\x59\xb2\x2c\x7f\xc4\x0d\xea\x6d\x98\x5e\x12\xc9\xf7\x8b\xe7\x1e\xde\x43\x69\x36\x83\x18\x85\x54\x08\xad\x58\xf2\x04\x23\x7b\x62\xee\x93\x93\x48\x23\xb7\xd8\x82\x2c\xf3\x67\x33\x68\xf7\xc7\x32\x89\x51\xc3\xd9\x39\x8c\xb8\x89\x78\x02\x6d\xd6\x8b\xd2\x11\xb2\x5f\xe6\xbf\xcc\x0d\x35\x46\x28\x27\xb9\xe5\xe2\xff\x85\x7b\x96\xf9\xbe\x18\xab\x08\x82\x25\xdb\x2c\x83\xa3\x6a\x96\x2c\x0b\xc1\xdc\x27\x3d\x3e\xc1\x20\xb2\x53\x88\x52\x65\x71\x6a\xd9\xdb\xfc\x6f\x08\x81\x33\x67\xbf\xf3\x21\x42\x96\x75\x00\xb5\x4e\x75\x08\x33\xdf\x9b\x70\x0d\x81\xef\x79\x1a\x0d\x85\x60\xd7\x68\xc6\x89\xf5\x3d\xcf\x39\x5c\x57\x32\x9e\xc3\xcb\x6a\x90\x59\x94\x2a\x21\x07\x67\x50\xab\x8c\xe5\xcf\x33\xdf\x0b\x7d\xcf\x4e\x5d\x2e\x5a\x5c\xdd\x2c\xd6\xf4\x1f\xbb\x99\x52\xc5\xa1\xef\x49\xe1\x2c\x7f\x38\x07\x25\x13\xaa\xcc\xd3\x68\xc7\x5a\xd1\xad\x0b\xe2\x7b\x99\xef\x55\x70\xa5\x6a\xbb\xca\xa0\xb6\x0e\x1c\xf6\x81\x47\x77\x7c\x40\xa5\xb1\x1b\xde\x4f\x30\x64\x17\x28\xf8\x38\xb1\x75\xec\x8a\xd4\x17\x79\xfb\x82\x30\xf4\xbd\xd9\xec\x18\x34\x57\x03\x84\xf6\x5f\x1d\x68\x0b\x4a\xd0\x66\xef\x24\x26\xb1\xa1\x2e\x78\x54\x5f\x3d\x0e\x39\xb5\x05\xeb\x59\x3d\x8e\xac\xb3\x25\x9c\x2a\x2b\x28\xca\x65\x3d\x5c\x2d\x92\xee\x05\xb5\xc8\x58\xae\xac\x6b\xcb\xd1\x6a\x86\xd5\x04\x21\x05\xae\x77\x87\x2c\x0b\xa2\x89\xa2\x45\xe0\x50\x97\x02\x54\x6a\xdd\xe3\x71\x92\x10\x32\x90\x65\x94\x09\x15\x85\xdb\x25\xa5\xef\x11\xf6\xb4\xdc\xdc\xc7\xf7\xee\xc7\xa8\x1f\x3b\xc0\xf5\xc0\x10\x54\xc5\x3a\x3f\xd2\xe3\xa0\xec\xe6\xd9\x39\xd8\x29\xbb\x9c\x62\x44\x5d\xee\x40\xc5\xad\x03\x2f\x35\x9a\xf0\xc7\x4d\x5d\xd7\x69\x92\xf4\x79\x74\x17\xcc\x79\x14\x3a\x0e\xc8\x78\x41\x2a\x8d\x86\xfd\xc6\x8d\xcd\x79\xd0\x8d\x83\xad\x44\x6a\x0e\xb9\x02\x67\xf7\x62\x01\x5e\x9b\x75\x2f\x58\xd7\xf4\xac\x96\x6a\x00\x59\x66\xac\x8e\x52\x35\x61\xef\x52\x3d\xe4\xb6\xab\x6c\x40\x05\xbd\x3a\x0d\x09\xd2\xc4\x10\xba\xd2\x3d\x0c\x17\x18\xaf\xf0\x0b\x73\x7e\x5d\xc6\x03\x2c\xe9\x95\xa0\x5a\xa1\x2a\xdd\x63\x9d\x00\xf0\x33\x9c\xe6\xfc\xa2\xb0\x52\x00\x57\x31\x99\x7d\x52\xf2\x7e\x8c\xce\x01\x13\x71\x8d\xc2\xb5\xf7\xe4\x08\xae\x5e\x5f\xc1\x83\xb4\xb7\x60\x30\x11\xa0\x51\xa0\x46\x15\x21\x1c\x9d\xb8\xdc\x9e\x27\x52\x0d\x28\x63\x07\xa9\xab\x72\x97\x3a\xf2\x12\xf2\x22\x2c\x0e\x47\x09\xb7\x8d\x43\xf1\x84\xe0\x42\x6d\x65\xdc\xa2\x95\x1f\xcf\x73\xd6\x39\x44\xfb\xf9\xd3\x28\xe6\x16\x1b\xb7\x0a\xe6\xbb\xba\xb2\x5f\x42\x96\xc7\xf1\xbc\x75\xdb\x0b\xd9\xdb\x34\x19\x0f\xd5\xd2\x26\x43\x19\x97\x9e\x7f\xde\xa2\xc6\x80\x52\x5f\x7e\x6c\x0c\x41\xcd\x5f\x72\x97\x71\x18\x96\x3c\xa7\x6b\x7f\xae\xd3\xb5\x85\x9c\x74\x35\xe0\xf5\xfd\xe0\xda\x88\x16\xb2\x9b\xc7\x11\x36\xe4\xa6\xa7\x75\xe4\x1c\xf0\x6f\x54\x1c\x84\xac\x6b\x68\x16\xed\x5a\xc4\xa1\x00\xe7\x42\x60\x64\x71\x79\xdc\x5c\xa7\x0f\xe6\xcd\xfc\x87\x5a\x41\x7b\x27\x92\x02\x68\x64\x14\xf9\x42\xf8\xe9\x09\xc3\x60\x6b\xba\x97\x97\x5a\x3b\x34\x35\x97\xca\xbe\xe3\x32\xc1\x78\x36\x34\x83\x33\x10\x43\xcb\x7a\x23\x2d\x95\x15\x41\xeb\x4b\x2b\x8f\x3f\x17\x8f\x2f\x2d\x08\x5e\x4c\x42\xe0\x89\x46\x1e\x3f\xd2\x99\x42\xb9\xea\xc0\xa6\xc0\x21\x96\xc2\x4d\x11\x0b\xb9\x5f\xe9\xd6\xca\x3b\x9d\x2d\x2d\x31\x2b\xa6\x95\x9b\x90\x34\x55\x91\xbd\x7f\xfd\x1e\xe0\x90\x03\x88\x62\x72\x4a\x79\x3a\xd7\xc1\x3e\xdd\xbc\x72\x37\xc7\xf3\x22\xbb\xa6\x4b\xbe\x6e\xac\xe7\xf6\x85\x05\x99\x2f\x5c\x8b\x39\xbf\x66\xae\xad\x39\xa7\x6c\xdb\xa8\xf9\x4e\x30\x6b\xfc\x3e\xfc\x5a\x71\xfa\x9c\x17\x97\x65\x5f\x3b\xb0\xab\x79\x9f\xcc\xcb\x6c\x7f\xf0\x64\x8c\xc6\xa9\xd9\xd2\x8c\x2c\xc1\xa8\xc9\x0a\xa9\xc9\xb1\x46\x01\x39\xcc\x06\xec\x2d\x02\x3a\x4d\x93\x0a\xfa\xa9\xbd\x85\x07\xfe\x68\x58\xa9\x33\x95\x34\x48\x79\xea\x69\xaa\x30\x7a\xde\x21\x36\x7d\x33\x51\xaf\x0e\xca\xd3\x67\x13\xca\xbd\x75\x72\x4f\x99\xf4\xff\x59\x7d\xbc\x7a\xfd\xbe\xe8\xe3\xa8\x00\xf2\xc3\xbc\xae\x83\x34\x76\xc4\xae\x74\x10\xee\x2d\xa6\xe5\x42\x9f\x8d\x22\x7b\x1e\x0d\x4a\x7e\x90\xbe\x8f\x3a\xf9\xd0\x7b\xa2\xc8\x17\xc1\xaa\x74\xf9\x26\xb6\x6c\x27\x4b\x0e\xde\xae\x3a\xdf\x28\xf3\xbb\x26\x79\x0e\x8d\xff\x56\x89\x4f\x15\x42\x2a\x60\x55\xe9\x5f\x4c\xf6\xd2\xf9\x3b\x7c\x34\xbb\xad\xa0\x38\x0e\x2c\x6f\xcb\xca\xeb\xc9\x42\x22\x0a\xb5\x59\xd0\xbe\xf2\xea\x95\xa3\x80\x95\x17\xc0\xe2\x65\xec\x8d\x4d\x65\xb0\x7b\x39\x9f\x4f\xbf\xee\x7c\x74\x73\x9f\x1e\xca\x3e\x56\x8a\x5f\x94\x43\x95\x3c\x29\xb9\xdf\x20\x78\xcd\x67\x8e\x7f\xb5\x02\xec\x7b\xda\x6f\xd0\x8d\x15\xd8\x0f\x03\xc9\x26\x44\xbe\xdb\xcb\xd0\x3a\x78\x4a\x2e\xfd\x3f\x36\xff\xab\x63\x53\x35\x7f\x8f\x5b\x6a\xf8\xdb\x74\x38\x94\x36\xd8\xfc\x6d\xad\xf8\xa2\x3a\x7f\x56\xff\x02\xd6\x21\x2b\x3f\xf3\xfd\xf2\xe5\xc6\xdf\xf8\xe9\xbb\x7a\xc6\x29\xbe\x78\x6d\x98\xe3\x6b\x87\xf8\xfc\x60\xd3\x40\x9a\x6d\x94\x59\x86\xa4\xac\xfb\xef\x00\x00\x00\xff\xff\x5f\x7f\x6f\x8c\xb2\x17\x00\x00")

func templateDialectSqlCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectSqlCreateTmpl,
		"template/dialect/sql/create.tmpl",
	)
}

func templateDialectSqlCreateTmpl() (*asset, error) {
	bytes, err := templateDialectSqlCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/sql/create.tmpl", size: 6066, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectSqlDecodeTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\xcb\x6e\xdb\x3a\x10\x5d\x4b\x5f\x31\xd7\x50\x2e\xa4\x20\xa5\xf6\x29\xbc\xaa\x11\x40\x9b\xb4\x88\x83\x6e\x1b\x46\x1a\x25\x44\x69\x52\x21\x69\xa7\x01\xcb\x7f\x2f\x48\x49\x31\xe5\x38\xb1\xd0\xee\xf8\x18\xce\x9c\x73\xe6\x41\x6b\xa1\xc1\x96\x09\x84\x45\xc3\x28\xc7\xda\x94\xfa\x89\x97\x0d\xd6\xb2\xc1\x52\x0a\x5c\x80\x73\xa9\xb5\x90\x29\xac\x91\xed\x50\xc1\xe5\x12\x32\x72\x33\xee\x9c\x4b\xd3\xb2\x84\x2b\x25\x37\x37\xf2\x59\x83\xae\xa9\xd0\x60\x1e\x11\xf4\x13\x07\x85\xba\x93\x42\x23\x34\xd4\x50\x60\xc2\x48\xf0\xbe\xc8\x35\xdd\x20\x38\x47\xd2\x76\x2b\x6a\xc8\x27\xfe\x9d\x83\xf3\xd8\xa8\x78\x75\x9e\x2b\x1f\xe1\x5c\x3f\x71\xe2\xb7\x05\xa0\x52\x52\x81\x4d\x13\x6b\x3f\x41\xe6\x43\x7b\x74\x9d\x62\xc2\xc0\x62\xb7\x98\x38\x4d\x93\x1d\x55\x21\x7a\xb0\x73\x0e\xb4\x51\xdb\xda\xf8\xe7\x49\xb5\x02\xf0\x77\xac\x85\x8c\x54\x2b\x52\xe9\xb5\x51\x4c\x3c\x80\x73\x4c\x18\x6b\x01\xb9\xf6\x58\x02\xae\x6a\x45\x6e\x5f\xba\x61\x8b\xa2\x09\xce\x13\x6b\x41\x51\xf1\x80\x90\xfd\xb8\x80\xac\xed\x65\xba\x62\xc8\x1b\xdd\x1b\x04\x90\x1d\xd5\x35\xe5\x90\xb5\x23\xbb\x21\xaa\x54\xe1\x6c\xcb\x39\xbd\xe7\xe8\xd7\x5f\x3b\xc3\xa4\xa0\x7c\x88\xda\x5f\x46\x71\xf7\x80\xda\x77\xe0\x8c\x6b\x97\x26\x65\x19\x52\x22\x55\x83\x0a\x1e\x51\x21\xe8\x47\xb9\xe5\x0d\xdc\x63\x9f\x2b\x0f\x86\x6a\x60\x22\x6c\xef\x02\xcf\x6f\xb4\xfe\x49\x1f\x42\x9e\xbe\x48\xbe\xdd\x08\x7d\x47\xd2\x84\xb5\x5e\x76\x4f\xcf\x67\x83\xac\x6b\x2a\x72\xcf\xee\xff\x48\x5a\x52\xad\x2e\x46\xc6\x27\x44\x99\xbe\x3b\x2a\xd1\xab\xab\x91\x50\xf1\x39\x40\xf8\x6f\x09\x82\xf1\x90\x3f\x85\x66\xab\x84\x3f\x0d\x74\x0f\xea\x89\x54\x2b\x58\xbe\x93\x5e\x6d\x54\x2d\xc5\x8e\x54\x46\xd2\x7c\x4a\xa1\x98\xca\xbc\xbf\x88\xb4\x3d\xcd\xd0\x5b\xf8\xb8\x51\x76\xf7\xe5\xd0\x5f\x54\xfa\x96\x6d\xc6\xe3\x37\xe0\xad\x3d\x52\x35\x4b\x38\xd0\xed\xad\xcd\xab\x6a\x3d\x85\xe0\x9b\xb5\x70\x52\x6e\xf2\x9d\x72\xd6\x04\x59\xe7\xa3\x11\xf8\x9c\x4f\x6a\xb1\xe8\x9f\x9f\xcf\x7c\xef\x8f\x7d\xdb\xb6\xb0\x38\xd3\xe4\x4c\x2f\x06\x90\xf9\xd4\xb8\x80\xdf\x71\x2b\x04\x9d\x47\x6e\xee\xb0\x4c\xf6\xec\x7b\x99\xa3\x8e\x4a\xe7\x33\xfb\x67\x64\x07\x39\x98\x1f\xf6\x54\x76\x63\xae\xf1\x7a\x68\x06\xc1\x78\x1a\x46\xf7\x70\x9e\x7e\x3c\xeb\x37\x54\xbc\xcc\x18\xf6\x01\x17\x67\x35\xf6\x57\xeb\x5a\x76\x48\xd6\xe1\xe0\xaf\xbe\x02\x3d\x3c\xfd\xf0\x2b\x18\x8d\xe6\x7c\x05\xad\x54\xfd\x64\xba\xc6\x5f\x26\x2f\x42\x1d\xcf\xfa\x1e\x92\xf8\x6f\xb8\x1c\x1a\x6c\x94\xdb\x7a\x83\xfd\xe8\x8b\xb3\x33\x81\xf4\x76\x34\x4d\x66\x53\x28\xd2\xc3\x9e\x80\x25\xd0\xae\x43\xd1\xe4\x87\x37\x17\x71\xa0\x22\x8c\xb6\xe3\xc9\xfd\x13\x00\x00\xff\xff\x07\xc9\x26\x4a\xc7\x07\x00\x00")

func templateDialectSqlDecodeTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectSqlDecodeTmpl,
		"template/dialect/sql/decode.tmpl",
	)
}

func templateDialectSqlDecodeTmpl() (*asset, error) {
	bytes, err := templateDialectSqlDecodeTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/sql/decode.tmpl", size: 1991, mode: os.FileMode(420), modTime: time.Unix(1564498182, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectSqlDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x4d\x6b\xf3\x30\x10\x84\xcf\xd2\xaf\x58\x42\x78\xb1\x5e\x8c\x72\x2f\xf4\xd2\xaf\x73\xdb\xf4\x5e\x14\x69\x12\x4c\x55\xdb\x59\xc9\x21\xc5\xec\x7f\x2f\x72\x3e\x70\x29\x3d\x79\xbd\x1a\xed\x3c\xb3\x1a\x47\x0a\xd8\x36\x2d\x68\x11\x1a\x17\xe1\xf3\x2a\xed\xe3\x2a\x20\x22\x63\x41\x22\x7a\x1c\x69\xb9\x19\x9a\x18\xc0\x74\x73\x4b\xbd\x4b\xde\x45\x5a\xda\xb5\xef\x7a\xd8\xbb\xf3\xc9\x59\xc8\xf0\x68\x0e\x27\xe5\xb5\xbe\x5e\x17\xd1\x7a\x3b\xb4\x9e\xaa\xb9\x56\x84\xfe\xcf\x4d\x44\x0c\xa5\x7d\x7c\x3c\xc2\x57\x3e\x1f\xc9\x77\x6d\xc6\x31\xdb\xfb\xd3\xd7\x10\x98\x3b\xa6\x51\xab\x83\x63\x62\xa4\xa2\xb6\xaf\x48\x43\xcc\x5a\x25\x94\x10\xdd\x44\x50\xfa\xeb\xe9\xbf\x32\xf6\x89\xbb\xcf\xaa\x74\xde\xdc\x26\x62\x22\xb0\xcf\xce\x7f\xb8\x1d\x48\xe4\xd4\x35\x46\xab\x6d\xc7\xf4\x5e\x53\x3f\x45\x70\xed\x0e\xf4\x23\x98\x88\xed\x19\xa1\xf1\x2e\x23\x15\x08\xd5\x57\x17\x4f\xa3\x95\x68\xb5\x1f\xc0\x5f\x35\x39\xde\xa5\x0b\xc4\xc3\xb4\xce\x3f\x3c\x27\xb2\x33\xe6\x75\x92\x7d\x29\x53\x2a\xa3\x15\x23\x0f\xdc\xfe\x82\x08\x5c\x2a\x7b\xd9\x52\x4d\x33\xdb\x9a\xfe\x31\x92\xd1\xa2\xcb\xa3\xa0\x0d\x24\xf2\x1d\x00\x00\xff\xff\xef\xce\xec\x8f\xe9\x01\x00\x00")

func templateDialectSqlDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectSqlDeleteTmpl,
		"template/dialect/sql/delete.tmpl",
	)
}

func templateDialectSqlDeleteTmpl() (*asset, error) {
	bytes, err := templateDialectSqlDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/sql/delete.tmpl", size: 489, mode: os.FileMode(420), modTime: time.Unix(1564440681, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectSqlErrorsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\xc1\x6e\xdb\x3a\x10\x3c\x5b\x5f\x31\x4f\x40\x1e\x2c\x43\x90\xda\x1e\x7a\x70\xe0\x53\xab\xa2\x05\x82\x20\x76\xe2\x43\x4f\x01\x2d\x91\x36\x11\x8a\x8c\x77\xa9\xc4\x85\xa2\x7f\x2f\x48\x55\xa9\x0f\xf5\x4d\xdc\xdd\x19\xcd\xcc\x6e\xdf\x97\x0b\xd4\x1d\x7b\xd7\x42\x12\x39\x62\x08\xdb\x4c\x9f\x07\x61\x1b\x23\x89\xa1\xc8\xb5\xe0\xa3\x41\xa3\x85\x91\xb5\x67\x2c\xca\x61\x48\xfa\x1e\x8d\x54\xda\x4a\xa4\x7f\x1a\x25\x1f\x4d\x39\xa2\x53\x0c\x43\xa2\x3a\x5b\x43\xf3\xfd\xfa\xe6\x8b\xb3\xec\x49\x68\xeb\xab\xd0\x9e\x4b\xa2\xf1\x37\x19\xe6\x8b\x8a\xe8\x6f\xff\x9b\xd0\x46\x36\x39\x76\xce\x99\x0c\x7d\x32\x2b\x4b\x44\x0c\x6c\xd7\xee\x24\xe1\xe3\x87\xcf\x9f\xa0\x19\xd5\xe6\xf1\xeb\xf6\xee\xb1\xba\x7d\xd8\xfc\x84\xb6\x68\x7f\xf1\xd1\xe4\xd1\x40\xba\xbd\xfd\xb1\xde\x56\xa8\xdf\x59\xa1\x22\x6d\x1a\x80\xf7\xeb\x1b\xed\x25\x9e\x49\x2a\x7d\x2a\x92\x99\x56\x68\x79\x8f\xe5\x2a\x28\x2a\x46\x7d\xd9\x35\xd8\x93\xb6\x7b\x2e\xbe\x0b\xbe\x8b\xa3\xf3\x96\xf7\x39\xd2\x51\x4c\x50\x91\x66\x78\x7b\xbb\x38\x77\x51\x43\x74\x35\x23\xe9\x3b\xb2\xf8\xff\x1f\xe6\xfb\x48\x20\x89\x86\x1c\x9e\x3a\x99\xcc\x86\x64\x9a\xb7\xda\xe4\x50\xc2\xb0\x4c\x86\x24\x29\x4b\x90\x33\x66\x27\xea\x27\xd4\xc2\x18\x86\x77\xf0\xa7\x62\x33\x15\x43\x1a\xaf\x24\x9e\x19\xfe\x20\xb1\xd7\x2f\xd2\x8e\xb9\xe3\x55\xfb\x43\x2c\xbe\x13\x8c\x75\xad\xe0\xea\xba\x23\x92\x4d\x31\x2e\x70\x1a\x98\xfb\xd3\x74\x01\xc5\xc3\x29\x0a\x9c\x76\x38\x42\xfb\x98\x25\x85\xfa\x72\x75\x2e\x23\xc4\x19\xcb\xff\xad\x82\x81\xe8\x3f\x3c\x57\x50\xad\x1f\x13\x57\xf3\xf4\x8a\x97\xb8\x7a\x49\xf3\xf3\x35\xe4\x11\x97\xc5\x04\xb4\x0a\x9d\x1c\xee\x29\xd0\x5f\x3a\xab\xec\x3a\x0c\x9c\x25\x2c\x89\xce\x03\x0c\xcf\x78\xbb\xd2\x36\x18\x86\xdf\x01\x00\x00\xff\xff\x0b\xb6\x89\x54\x03\x03\x00\x00")

func templateDialectSqlErrorsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectSqlErrorsTmpl,
		"template/dialect/sql/errors.tmpl",
	)
}

func templateDialectSqlErrorsTmpl() (*asset, error) {
	bytes, err := templateDialectSqlErrorsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/sql/errors.tmpl", size: 771, mode: os.FileMode(420), modTime: time.Unix(1564494654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectSqlGroupTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xc1\x6e\x1c\x21\x0c\x3d\x0f\x5f\xe1\x46\x51\x35\xa4\x88\xf4\xdc\x6a\x2f\xc9\xa1\x97\x5e\xd2\x3d\x56\x55\x45\x19\xb3\x42\x25\x66\x06\x98\xcd\x46\x23\xfe\xbd\x82\x61\x93\x34\x9b\x3d\xe4\x84\x65\x3f\xfb\x3d\x3f\xbc\x2c\x30\xa0\xb1\x84\x70\x31\x58\xe5\x50\xa7\xeb\x38\xb9\xeb\x5d\xf0\xf3\x78\x01\x39\xb3\x65\x81\xcb\x3f\xb3\x75\x03\x06\xf8\xb2\x81\x51\x45\xad\x1c\x5c\xca\xad\xf6\x23\xca\x9b\x56\x69\xc0\x80\x1a\xed\x7e\x45\x3e\xc5\x4f\xed\x39\x33\x66\x66\xd2\xd0\xff\x87\xcd\x19\xae\x5e\xb2\xe4\xcc\x21\x4e\x6e\xab\x15\xf5\x3a\x1d\x40\x7b\x4a\x78\x48\xf2\x76\x7d\x05\xec\xc1\x52\xc2\x60\x94\xc6\x25\x73\xc0\x10\x7c\x80\x85\x75\xc1\x3f\xc4\xc2\xfc\x31\x4e\x4e\xfe\xf0\x0f\x71\xc9\xac\x9b\x66\x0c\x8f\x02\x54\xd8\xd5\xda\x2b\x66\x19\x27\x77\x57\x10\x3d\x97\xed\x65\x9d\x35\x65\xe6\x5b\xe8\x21\x94\xa8\x21\x75\x3a\x08\x78\x31\x5e\x40\x11\xc0\xbf\xd6\xe6\x0f\x1b\x20\xeb\x8a\xaa\x2e\x60\x9a\x03\x95\x2c\xeb\x32\xeb\x06\x34\x18\x2a\x54\xde\x3a\x1f\xb1\x30\x36\x48\xd1\x5d\xd6\xde\x3a\xab\xb1\x2f\x10\x01\x7b\xce\x32\x7b\x8f\x6f\x6d\x0d\xb8\xaa\xd3\xb0\x7c\xe9\x6a\x4f\x3c\xc6\x6f\xdb\xc0\x3a\xed\xdd\x7c\x4f\xd5\xa6\x7b\xf5\x17\xfb\x9f\xbf\x62\x0a\x96\x76\x02\x3e\x0b\x70\x48\xaf\xe9\xa5\xb1\xe8\x86\xc8\xe1\xd3\x49\xb5\x14\x29\x72\xfe\x3c\x74\x03\x6a\x1c\x91\x86\xbe\x25\xc4\x89\x86\x75\x9a\x94\x92\xb3\xce\xf8\x00\xbf\x05\x18\xaa\x97\xa4\x68\x87\xa7\x70\x8a\xd5\xde\xf3\x04\x86\xe4\xf6\xee\x7b\x7f\xdc\xbb\xa8\xc9\xcf\x5e\xb7\x6c\xb3\xe8\xd8\x55\xe8\xe5\xb7\x72\xfd\x37\x8f\x67\xf6\xad\x0a\xeb\xbd\x23\x0d\x90\xf3\xbf\x00\x00\x00\xff\xff\x63\x5a\x3f\x5b\x43\x03\x00\x00")

func templateDialectSqlGroupTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectSqlGroupTmpl,
		"template/dialect/sql/group.tmpl",
	)
}

func templateDialectSqlGroupTmpl() (*asset, error) {
	bytes, err := templateDialectSqlGroupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/sql/group.tmpl", size: 835, mode: os.FileMode(420), modTime: time.Unix(1560858192, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectSqlMetaTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\xcd\x6e\xdb\x3c\x10\x3c\x5b\x4f\xb1\x10\x74\x48\x82\x7c\xd4\xd7\x1c\x0b\xf8\x94\xb6\x80\xd1\x3a\x48\xdb\xdc\x8a\xa2\xa0\xc5\x95\x4c\x84\x26\x6d\x92\xb6\x63\xb0\x7a\xf7\x82\x3f\xd6\x8f\x6b\xa7\x05\x7a\x13\xb9\xda\xd9\xd9\xd9\x59\x3a\x57\xde\x40\xa5\xa4\xb1\x54\x5a\x03\x12\x91\x21\x83\x5a\x69\x30\x1b\x01\x8c\x53\x81\x95\x35\x04\x6e\xca\xb6\xcd\x9c\x03\x86\x35\x97\x08\x79\x8a\x94\x66\x23\xca\x15\x5a\x5a\x76\x18\x39\xb4\x6d\x36\x29\x4b\x78\xa2\x0b\x81\xb0\x54\x82\x19\xb0\x4b\x04\x1b\xce\x92\xae\x10\x54\x1d\x6e\x9c\x03\xa1\xf6\xa8\xa1\x20\x0f\xfe\xba\x6d\x81\xcb\x10\x61\xd4\xd2\x05\x35\x48\xb2\x49\x84\x99\x42\xee\x1c\x14\x24\x9e\xda\x36\xcf\x26\xce\xfd\x07\x9a\xca\x06\xa1\xf8\x71\x0b\x05\xc2\xdb\x29\x14\xe4\x3d\x6b\xd0\x04\x0a\x9e\x83\xcf\xc1\x98\x74\x9f\x08\x86\x2a\x43\x46\xfe\xab\x67\x19\x33\x8e\x74\x34\x0a\x6a\xb9\x92\x25\xb2\xc6\x93\x09\x45\x79\xed\x7f\x99\xdf\xcd\xfd\x1f\x4f\x4b\x84\xb5\xe6\x2b\xaa\x0f\xf0\x8c\x07\x60\x58\x09\xaa\x91\xc1\x02\x85\xda\x13\xe7\x00\x25\x8b\x7c\x2e\x90\x49\xad\x21\xf9\x82\x62\xd8\xdf\xb1\x16\x6e\xba\xbe\x7d\xfa\x61\x9d\x30\xe0\x27\x48\x65\x23\x74\xdf\xeb\x4c\xee\x50\x1b\x7c\xbd\xe5\x30\x04\x3f\xe4\xbe\xe3\x80\x7b\x6c\x1b\xa5\xe5\xf6\x40\x12\xf0\xcc\x02\xbe\x70\x63\x4d\x9c\x0e\x37\xb0\xa6\xd5\x33\x6d\xd0\x9f\x95\x66\xa8\xc1\x2a\xa0\x3b\xc5\x19\x54\x5c\x57\x5b\x41\x35\x30\x5c\xa3\x64\x28\xab\x03\xec\xb9\x5d\x86\x4a\xf9\xa0\xd4\x63\x82\x68\xdb\xfc\x08\x17\xea\xbd\xde\xc5\x74\x84\x71\x2a\xd6\x40\xe9\xa0\x9c\x97\xa7\x9b\xd4\x48\xa5\x7b\x25\xb6\x2b\x79\x51\x9f\x2a\x84\x81\xa1\x54\x96\xcb\xe6\x6f\x8c\x31\xb9\x04\x3c\x1a\x6f\x0c\x9f\xa1\x3c\xf8\xee\x2d\x93\x85\xed\xdc\x51\xcd\x3d\xab\x7f\xd9\xce\x0e\xa3\xdb\xce\xc8\xc4\x24\xe7\x53\x21\xe0\xeb\xe7\x4f\xa9\x71\x03\x54\x9f\xdd\xce\x9a\xa3\x60\x86\x64\x93\x1d\xd5\x1d\xc2\x14\xbe\x7d\x37\x56\x73\xd9\xb8\x64\x72\x32\x7b\x47\x06\x12\xdc\xa6\x5e\x07\xcb\x5a\xc7\x65\xfd\x10\xf0\xd2\x70\x7c\x66\x7d\x2e\xef\xa8\x51\x9b\x79\x9d\xa2\x9d\x0a\xf2\xb0\x5d\x75\x83\xf5\x74\xae\x22\xc6\x1f\xde\x84\xdf\x37\x38\x5c\xf6\xce\x78\xfc\x38\x1c\x1e\x95\xec\x92\x63\xee\x82\x48\xa7\x9e\x31\x23\xd3\x74\xd8\xc3\x17\x62\xbc\x77\xa7\x86\x82\xab\xf9\xdd\xfc\x9a\xc4\xcc\x73\x94\x06\x72\x7b\x63\x71\xc9\xf0\x65\x6c\x2f\x03\xff\x7b\x87\xdd\xc2\xc5\xf8\x1b\x1f\xef\xe5\xe8\xf6\x66\x7c\xba\x0e\x72\x9f\xba\xf2\x57\x00\x00\x00\xff\xff\x1d\x9a\x40\x79\x32\x06\x00\x00")

func templateDialectSqlMetaTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectSqlMetaTmpl,
		"template/dialect/sql/meta.tmpl",
	)
}

func templateDialectSqlMetaTmpl() (*asset, error) {
	bytes, err := templateDialectSqlMetaTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/sql/meta.tmpl", size: 1586, mode: os.FileMode(420), modTime: time.Unix(1564494654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectSqlPredicateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x4f\x6f\xe3\xb6\x13\x3d\xcb\x9f\x62\x10\x18\xf8\x51\x81\x43\x27\x4e\x72\xf9\x01\x29\x10\xa4\x09\xe0\xb6\x89\x5b\x64\xd1\x1e\x82\x60\xc1\x4a\x23\x9b\x5b\x99\x54\x48\xda\x41\xa0\xd5\x77\x2f\x48\xd1\xfa\x63\x4b\x1b\xaf\x91\xa2\x97\x9e\x2c\x9a\xc3\x99\xf7\x66\xde\x8c\xa8\x3c\x87\x18\x13\x2e\x10\x8e\x62\xce\x52\x8c\xcc\x58\xbf\xa4\xe3\x4c\x61\xcc\x23\x66\x70\xcc\xe3\x23\x38\x29\x8a\x41\x90\xac\x44\x44\x34\x1c\xeb\x97\x94\x3e\xa2\xb5\x94\x2a\x84\x7c\x10\x04\x79\x7e\x02\x3c\x81\x21\x9d\xfe\x48\xa7\xfa\xd1\x28\x2e\xe6\x50\x14\x3c\x1e\xc1\x67\xf8\xff\x15\x68\xa3\x22\x29\xd6\xf4\xda\x48\x4e\x78\x1c\x5a\x7b\x14\x31\x58\xaf\x81\xa6\x7f\x2c\x50\x21\xb1\x6e\x6f\x7f\x23\x9a\xde\x90\x3c\x2f\x7d\xdd\x48\xa1\x0d\x13\x06\x8a\x22\x1c\x01\x8f\xc3\x70\x10\x14\x83\xc6\xe9\xc1\x1e\xe8\xc7\x32\xd3\x9e\x81\x3d\x39\x94\x99\x85\x34\xa4\x8f\x91\xcc\x90\xce\xb2\xc6\x16\x53\xf3\xe6\xde\xb5\x9a\xef\xcb\x5c\x66\xf4\x77\xa6\x38\x8b\x79\x54\xb2\x0a\xc6\x63\xbb\x21\xa4\x01\xa6\xe6\xab\x25\x0a\xa3\xe1\x15\x15\x42\xa6\xe4\x9a\xc7\x18\x8f\x80\x65\x99\xe5\x61\x16\x08\x77\xd7\xbf\x3c\xde\x42\xe4\xf9\xea\x91\xf7\xa0\xb9\x88\x10\x5e\x11\x22\x26\xfe\x67\xec\x81\xf4\x0d\x8e\xa6\x0f\x40\xc2\x23\x0a\x9f\x16\x5c\xc3\x2b\x4f\x53\x58\xb2\xbf\x10\x8c\x5d\x56\xcc\x21\x61\xa9\x7e\xa3\xd6\x11\x4f\x20\x45\xe1\xb2\x6a\x19\x16\x45\x08\x57\x57\x70\xea\x08\xb4\xf3\x7f\xc7\x52\x8d\xc4\xa6\x39\x08\x02\x85\x66\xa5\x84\x7d\x74\x84\xd6\x36\x35\x36\x10\x79\x7a\xe6\xc2\xa0\x4a\x58\x84\x79\x31\xda\xf6\xed\x0e\x27\x52\x01\xb7\x07\x14\x13\x73\x84\xb5\x8f\x95\xe7\x5d\x3a\x59\x3f\xf1\x67\xab\x94\x2d\xa1\xd4\x3e\x9f\xf8\x73\x98\xe7\x80\xa9\x46\x6f\x0e\x57\xd0\xda\xb6\xbb\x1b\x41\x39\xb8\x4e\x24\xd6\xbe\x23\x9e\xcb\x49\xa7\x36\x1b\x34\x36\x3e\xba\x64\x6a\xcd\x64\x46\x1f\xd8\xd2\xe2\xf9\x86\x64\x3d\xdf\xb6\x3a\xd6\x94\xd2\x9a\x0d\x8f\x2b\xec\x07\xc8\x3b\xe1\x98\xc6\x4d\x75\x27\x4d\x01\xdf\xd9\xdd\xf7\x24\xdc\xd3\x7f\xc9\x16\x95\xf5\xa1\xe8\xb6\xfb\xaf\x0f\xe1\x7f\xcd\x79\x78\x73\x7e\xaf\x52\x77\x8a\xdb\x29\x54\xaf\xd3\x43\xb5\x89\xf1\x1c\xc7\x0b\xd6\x2a\x3e\x36\x4b\x78\x1b\xcf\x71\xdf\x1a\x22\xbd\x9f\xdc\x83\x2f\x9f\x39\x73\x9d\x4b\x3f\xb1\x3f\x53\x24\x2e\x21\x1b\xd2\x65\xd6\x5e\x52\x3a\x15\xe5\x73\x60\xce\xfa\xda\xb3\xdc\xaf\x63\x3a\x2b\xa4\xbf\xfe\xdc\xb0\x7a\xf2\x99\x41\x3a\xd5\x53\xb1\x46\xe5\x9a\xf6\xac\xee\xdf\xd3\x2a\x45\xcf\x21\xbd\x53\x72\xe9\xf2\x5e\x22\x2b\xfd\xb9\xe7\x66\x60\x1f\xb9\xfc\x09\xb7\x86\x95\x54\x25\xd9\x19\x10\x26\x62\xfb\x3c\x9b\xcc\x5a\xf1\x43\x28\x8a\x3c\x1f\x1f\x83\x35\xfa\xfa\x15\x88\x35\x78\xe5\x66\x01\xdc\x03\xb4\x99\x0f\xe1\x78\xfc\x6e\xb6\x2c\xd4\x07\x69\x1e\x56\x69\x4a\xaa\x3c\x21\xbd\x91\xe9\x6a\x29\x5a\x90\x5b\x30\x7d\xfc\xd9\xe4\xbe\x1d\x9f\x69\x2d\xa3\xfd\xa3\x7f\x40\xad\x76\x91\xd2\xd2\x32\xd8\xb3\x14\x1b\xf3\xdd\x7c\xf4\xa6\xa2\xb3\x7a\xbe\xf9\x0e\x6c\x11\x9b\xbd\x8f\x6f\x13\xcb\xc0\xbd\x84\xcf\x5c\xc5\x60\xf8\xc5\x2e\x4e\xdd\xe2\xa4\x43\xd5\xa5\xfd\xc6\xc2\x9a\x57\x47\x2d\xa3\x93\xde\x82\x9a\x89\xfb\xab\x4a\xb6\x7f\xd7\xbb\x18\x02\x61\x58\xfe\xed\x0a\xf0\x96\xf9\x2a\x6c\xdc\x95\x30\x91\x7a\x18\xdb\x15\xaa\x5c\x39\xe1\x55\x67\x9c\x59\xbd\x57\xa3\x2b\xf1\x9c\xb7\xf1\xf4\x14\xdf\x99\x5e\x6c\x4c\xbd\xae\xcc\x79\xd5\x06\x3b\x83\x60\xf8\xc5\xb5\xb9\x17\x8d\x53\x98\x39\xf7\xab\x9f\x24\x17\xc4\x4c\xfc\x6a\x26\xbe\xed\x88\x3b\x47\x23\x30\x93\xca\xc8\xa5\x66\x4b\xf6\x25\xc4\xcb\x2d\x88\x7e\xce\x98\x49\x75\xd5\xfa\x3c\x82\xac\xbe\x6d\x59\x7d\x69\xff\x02\xc9\x88\xb9\x0c\xab\x3b\x9c\xb9\x70\x47\x37\x54\x2f\x77\x86\xc1\x54\x90\xfe\x1e\x04\x73\x11\xfe\x2b\xe3\xaa\xd6\x57\xab\xf9\xbb\x32\xb6\x3d\x82\xff\x79\x29\x76\x8b\xab\x53\x9b\xfb\xd5\x6b\x52\xd7\xab\xaf\x34\x5d\x73\xc9\x8a\xe9\x43\xc7\x74\x4f\xd6\x3b\x46\xee\x9e\xb3\xf6\xa3\xd8\x77\x08\xb3\xc1\xfc\xb0\x49\x2c\xd5\xbb\x5f\xb9\xee\x9b\x66\x07\xba\x3b\xee\xf1\xf3\x04\x38\xfc\xd0\xb8\xbc\xcd\x14\xa9\xe9\x64\x44\xdb\xc5\xf7\x63\x13\xd2\xbc\x0b\x2e\x23\xda\xbe\xb9\xc8\xce\x3d\xed\xef\x00\x00\x00\xff\xff\x2f\x58\x90\xb0\xe0\x0f\x00\x00")

func templateDialectSqlPredicateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectSqlPredicateTmpl,
		"template/dialect/sql/predicate.tmpl",
	)
}

func templateDialectSqlPredicateTmpl() (*asset, error) {
	bytes, err := templateDialectSqlPredicateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/sql/predicate.tmpl", size: 4064, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectSqlQueryTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xdf\x6f\xd3\x48\x10\x7e\x4e\xfe\x8a\xa1\xea\x21\xbb\x0a\x0e\x0d\xd5\x3d\x50\xf5\xa4\xbb\xb6\x27\xe5\xee\x4a\x81\x22\xf1\x80\xd0\x69\x6b\x8f\xd3\x05\x67\x37\xd9\xdd\xa4\x45\xc6\xff\xfb\x69\x66\x6d\xc7\x49\x9c\x36\x81\xea\xe0\x01\x91\xf5\xce\xaf\xfd\xe6\xdb\xf9\x16\xf2\x1c\x12\x4c\xa5\x42\xd8\x4b\xa4\xc8\x30\x76\x7d\x3b\xcd\xfa\xd3\x19\x9a\x2f\x7b\x50\x14\xdd\x3c\x87\xfd\xc9\xe7\x11\xbc\x3c\x81\xfd\xe8\x2a\xd6\x13\x8c\x5e\x8b\xf8\xb3\x18\x61\xb5\x7b\x3d\x93\x59\x82\x86\x2c\x26\xc2\xc6\x22\xab\x0d\xff\x28\x77\x4a\x43\x83\x31\xca\xb9\xb7\xac\x7f\xd7\xee\x45\xd1\xed\xa6\x33\x15\x43\xb0\x64\x5b\x14\x70\xd0\xcc\x52\x14\x21\xd8\x69\xf6\x7b\x96\x05\xb1\xbb\x83\x58\x2b\x87\x77\x2e\x3a\xf5\x7f\x87\x10\x7c\xf8\xc8\xf6\xd1\x2b\x31\xa6\x12\x7b\x80\xc6\x68\x13\x42\xde\xed\x18\x7d\x6b\x29\xf9\x53\x3b\xcd\xa2\xb7\xfa\xd6\xe6\x45\xb7\x63\x91\x4e\xad\xb9\xaa\x95\xcc\x91\x9d\x66\x6f\x08\x89\x20\xec\x76\x64\x0a\x33\x25\xa7\x33\x6c\x33\xf4\x3b\xc7\x90\xa1\x0a\xfc\xef\x10\x4e\x4e\xe0\x39\x65\xad\x33\x44\x67\xd2\x3a\xa9\x62\x47\xe1\x8a\x6e\x87\x41\xee\x81\x30\x23\xae\xaa\x36\x6b\xa6\x44\xd3\x5a\x58\x62\xe8\x57\x69\x19\xbb\xbb\x1e\x34\x82\xf5\x80\x0e\x1a\x1e\xb3\xf3\x93\x13\x50\x32\xe3\x3a\x0c\xba\x99\x51\xb4\x64\x50\xb8\x86\x04\x53\x34\x6c\x1f\x9d\x66\xda\x22\xa5\xcd\xf3\x67\x94\xcd\x71\x47\xb3\x99\xe1\x8e\xbe\x5d\x64\xef\x76\xe6\xc2\x94\x25\x39\x6a\x50\x9e\x2f\xec\x18\x76\x36\x5a\xad\x9e\x4c\xa3\x3f\x8d\x1e\x13\xf2\xc1\xf6\x25\x36\xbc\x63\xad\x52\x39\x5a\x25\x48\xf9\x39\xec\x56\xee\x0b\x8f\x1e\x85\xea\xee\xc4\xac\x53\x3d\x53\x6e\x03\xb7\xa4\x72\x8f\xc6\xa7\x05\x99\x3e\x7c\xb4\xce\x48\x35\xca\xd9\xbe\x71\xbd\x22\x5e\x0f\xcf\xa8\x02\xeb\x84\x62\xb0\x3d\xb2\x44\xb4\x76\x12\x86\xf0\x5b\xc9\xbb\x32\xc3\x26\xb6\x32\xb8\x35\xe9\xfc\xb1\xe9\x20\x35\x4b\x1b\x7b\xd9\x6c\xac\x6c\xc9\xec\x28\x8a\x42\xfa\x13\xfe\x30\x06\x3f\xbf\x9f\xbf\x32\x85\x27\xfc\xe5\x15\xde\xb9\x20\x5c\xf7\xd4\x86\xf6\x6e\x83\xbd\x6a\xb8\x15\xc5\x4b\x50\x9a\xc3\x40\xaa\x67\x2a\xd9\xf3\x37\x94\x78\xae\x40\x2a\xd7\x3c\x09\x87\xbe\x8a\x85\x0a\x9e\xaa\xfb\x4a\x4c\xc7\x2e\x3a\xa7\x64\xe9\x72\xa2\x54\xc8\x0c\x13\x30\x28\x12\xa9\x46\x10\x13\xf0\x2f\xe1\x97\xf9\x1e\xd7\xe6\x13\x57\xf7\xe0\x1b\xf8\x7b\x7e\x27\xed\x26\xfe\x5e\x6b\x9d\x35\x09\xac\x7a\x9b\xda\xd3\xbc\x08\x8b\x3e\xae\x9f\x33\x15\x99\xc5\xcd\x67\x8d\x6f\x30\xfe\x0c\x48\x25\xa1\x8a\x71\xd3\x31\x89\xb2\xdf\x70\xd4\xe1\x99\xdd\x28\x02\xd5\xd5\x79\xf7\x65\xb2\x2a\x03\x73\x7b\xdf\xb1\x4b\x65\xb9\xef\xd0\x4b\xe3\x89\x38\x22\x13\x0b\x6b\x29\xbb\x9d\x54\x1b\xf8\xb7\x07\x73\x66\x8d\x50\x23\x84\xb9\xe5\x38\x64\x7f\x02\x62\x32\x41\x95\x04\x32\xb1\x3d\x98\x47\xc3\xb3\x25\x4c\xf8\xeb\xce\x88\x94\x17\x0f\x0e\xe8\x22\x5f\x55\x93\x28\xef\x76\xdc\x21\x5f\xd0\x69\x16\xbd\x13\xd7\x19\x06\xab\x93\x86\xbf\x86\xcb\xd3\x6b\x11\x23\x70\x87\xf5\x10\x58\xf5\x2c\xbf\x57\x53\x81\x27\x7c\xe0\x0e\x3d\x7e\x2d\xf8\x36\xf1\xac\xb3\xb5\x76\xa2\x29\x9d\x65\x1d\x6b\x23\xe9\x81\x6a\x18\xd1\xb2\x0d\x93\x45\x1b\x56\x93\x4d\x0c\x26\x32\x16\x0e\x7d\x7b\x26\x75\x9e\x6d\x03\x68\x43\x4d\x68\xf3\x95\x29\xe8\x34\xb5\x5e\x4d\xd7\xdc\x78\xe7\xb8\xb2\x68\x20\xd3\xef\x43\x26\xc7\xd2\x81\xb4\x30\x16\x2a\x11\x4e\x9b\x2f\x40\x85\x94\xb6\x71\x26\x66\x16\x23\x78\x8f\x60\x9d\x30\xce\xfb\xdc\x4a\x77\x43\x0f\x3a\x31\xcb\x1c\xcc\x45\x36\xc3\x1e\x08\x95\x80\x9e\xa3\x31\x32\x41\x90\x0e\xae\x31\xd3\xb7\x20\x53\x50\x88\x09\x26\x51\x13\xe6\x4b\x0e\x1e\x1c\xf8\x24\x61\xf4\x0f\xd5\x10\x8c\x85\xbb\x89\x2e\xc4\xdd\x50\xb9\x5f\x8f\xea\x63\xf9\xfa\x5a\x4e\xc5\x1b\xc7\xe5\x7e\x4b\xb7\xcb\xa8\x07\x6c\xb0\x44\xfa\xca\xa2\xcb\x0f\x46\x54\x09\xbf\x0a\xf3\xbc\x7f\xe0\xd5\xa1\x3f\x11\xfe\x7c\x52\xa1\x05\x77\x83\xfe\x33\x8c\x50\xa1\x11\x4e\x6a\xc5\x10\xb1\x95\x4e\x41\xc0\x48\xce\x51\x01\x26\x23\x8c\xe0\xa0\xef\xdf\xa1\x1b\xdf\xbb\x1c\x9d\x1f\xbd\xfe\x09\x84\xcd\x47\xef\x79\xc2\x04\x03\x2e\x86\x32\x53\x50\xb8\x45\x46\x11\x9c\xe6\x1a\x46\x46\x38\xe4\x5d\x2e\xc1\xe9\x32\x6b\xf5\xa4\x5a\xbc\x7f\xab\xb0\xcd\x67\x95\x37\x93\x29\xec\x63\x74\x31\xb8\xe0\x42\xf8\xf5\x23\xc9\xe3\x10\x8a\x82\x16\x9f\x68\xf1\x9c\x17\x95\xf1\xd0\x0e\xd5\x1c\x8d\xc5\xd2\x44\x42\x65\x41\xe6\xb5\x2b\xe1\xf9\x8c\x83\xb6\x4d\x03\xe4\xb9\xd5\x36\x13\x3a\x6e\xf0\xd0\x63\xa6\xe3\x06\xf5\xa8\x18\x44\xa7\x6b\xd7\xb2\xe5\x21\x13\xb2\xdb\x8b\xfb\xc7\x52\x59\x18\xed\x35\x5d\xc9\xf3\x68\x75\x44\xbd\xd8\x90\x17\xa3\xd7\x7f\x37\x9c\x3f\x78\x84\x8a\xe2\x63\x18\x12\xf7\x3b\x1d\x3f\xb1\x5e\x94\xab\xbf\xb4\x54\x81\x1b\x94\xab\x4b\xb5\x5b\xe0\x4f\x1c\xb8\x07\x3b\xa1\xc0\xec\xe3\xd9\xb8\x74\x22\x5f\x42\x35\x4f\x79\xe1\x8b\x3b\xf2\x0b\xaa\xed\xb0\x4c\xb3\xde\xbd\xc6\xd7\x95\x94\x3d\x70\x47\xbb\x63\xe5\xd9\x89\x99\x45\x62\x9d\x36\x9e\xa5\x97\x10\xd0\x7c\xd9\xc7\xe8\x72\x70\xb9\xc4\xc5\x90\x49\xd7\x3f\x00\x32\xfa\xfa\x15\x02\x32\xe0\xf9\x24\x4b\xb2\xd2\x0d\x0a\xcb\x0b\xf2\x63\x28\x89\xa5\x5e\x6c\xd9\x90\x15\x15\x5c\x2f\x6f\x55\x0b\x37\xf4\x6f\xf0\xdd\xfd\xdb\xf1\x40\x75\xe7\xca\x96\x5c\x0e\x2e\x96\x5b\x22\xac\xd5\xf1\x4f\xd0\x90\xc7\xb8\x1d\x2d\xe8\x6e\x03\xd3\x6e\x77\x96\x11\xf5\xfa\xd4\xae\x54\xa9\xd1\xe3\x87\x95\x4a\x78\x71\x2a\x37\xd9\xa7\x12\x2d\xa5\x93\xad\x44\x8b\x9c\x1a\xa2\xa5\x58\x5d\x96\x94\x8a\x22\x91\x52\xf1\x3b\xa1\x51\x0b\x79\x2e\x09\xd4\xff\x2a\x78\xcf\x58\xf1\x64\xd2\x46\x9b\x4a\xda\x14\x21\x3f\xb4\x57\xfc\xcf\x63\x28\x0a\x99\x04\x21\xc1\xed\xa9\x3c\x3c\x5b\x40\xbf\x22\x9d\x3f\x9b\x76\x2e\x9b\xab\x76\xcb\x16\x2d\x54\xdf\x2b\x86\x2d\x01\x1e\x49\x0d\xb7\x8a\xbc\x26\x87\x6b\x5e\x6a\xed\x72\xf9\x54\xef\x6f\xd0\x20\xff\x7f\xc4\xf9\x9b\x60\x07\xf7\x1e\xc8\xe4\x07\x8b\xea\x2e\x98\xff\x8c\xaa\xda\x40\x6b\xc3\x71\xd6\xa7\xe7\x02\xd5\xdd\x09\xec\x9d\x97\x1a\xbe\x55\xaf\x1f\x6e\x75\xdd\xe6\x9a\xc6\x8f\xa0\xb9\x5b\xe1\xf1\x8d\xa2\x7b\xff\x49\xb6\xeb\xe3\xb6\x70\xb6\x94\x5d\x21\xda\xa6\x6e\xff\x05\x00\x00\xff\xff\x82\x1a\x9f\xc1\x2a\x18\x00\x00")

func templateDialectSqlQueryTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectSqlQueryTmpl,
		"template/dialect/sql/query.tmpl",
	)
}

func templateDialectSqlQueryTmpl() (*asset, error) {
	bytes, err := templateDialectSqlQueryTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/sql/query.tmpl", size: 6186, mode: os.FileMode(420), modTime: time.Unix(1564498182, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDialectSqlUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5d\x6f\xdb\x3a\xd2\xbe\x96\x7f\xc5\xbc\x46\x9a\x23\x05\xae\x92\xf6\x32\xe7\x75\x81\x6e\x93\x02\xc1\xa2\x75\x4f\xdc\xb3\x7b\x91\x13\x14\xb4\x34\x4a\x88\xc8\x94\x43\xd2\x4e\xb2\x86\xfe\xfb\x62\x48\x7d\x50\xb2\x9c\xda\x71\xd0\xe6\xa0\x7b\x51\x34\x96\xf8\x31\x1f\xcf\x3c\x33\x43\x71\xb9\x84\x18\x13\x2e\x10\xfa\x31\x67\x29\x46\xfa\x50\xdd\xa6\x87\xf3\x59\xcc\x34\xf6\x21\xcf\x7b\xcb\x25\xec\xcd\x6e\xae\xe0\x78\x08\x7b\xe1\x38\xca\x66\x18\x7e\x61\xd1\x0d\xbb\xc2\xf2\xed\x64\xce\xd3\x18\x25\x8d\x98\x31\x15\xb1\xb4\x1a\xf8\x8f\xe2\x4d\x31\x50\x62\x84\x7c\x61\x47\x56\x7f\x57\xd3\x8b\x41\x99\x40\x7a\x7f\xcd\xd4\x78\x9e\x24\xfc\xbe\x1e\xd0\x1f\x89\x52\xa4\xd7\xb0\xf7\x1f\x94\x19\x0d\x3c\x82\x3c\x5f\x2e\x81\x27\x76\xaa\xf9\x61\x5f\x0e\xa1\x2f\x78\xda\xb7\x8f\x50\xc4\xd5\x54\x89\x9a\x66\xf6\x45\xbf\x6b\x2e\xbd\x25\x5d\xcf\x4b\x09\xdd\xf9\xbd\x64\x2e\x22\xf0\x1b\xda\xe4\x39\x1c\xb8\x76\xc8\xf3\x00\xd4\x6d\x3a\x66\x0b\xf4\x23\x7d\x0f\x51\x26\x34\xde\xeb\xf0\x83\xfd\x3f\x28\xa7\x6b\x9a\xd9\xd8\xde\x2c\x13\x7e\x66\xd3\x42\x16\x4c\x15\xfd\xc5\x85\xae\x24\x18\x00\x4a\x49\xff\x32\x19\xc0\xb2\xe7\x29\x24\xa7\x65\xc6\xa6\xea\x36\x0d\xc7\xe6\xb7\xd9\xc1\xf1\x53\xd8\xd8\xe6\x43\x96\xce\xa7\x42\x85\x61\x58\xef\x61\x26\x9c\x9d\x90\x90\x4a\x33\xa1\x5d\xad\x83\xf0\xa3\xcc\xa6\x3e\x2d\xff\x95\x4d\x52\x5c\x59\xdd\x3c\x0d\x82\x9e\x47\xe6\xad\xf7\xe9\x79\x5e\x7b\xe4\xd9\x49\xdb\x76\x21\x8f\x03\xbf\xd4\xa2\x58\xa2\x90\xa9\xe7\x79\x49\x26\xe1\xdb\x00\x66\x06\x32\x4c\x5c\x21\xb4\xa7\xcf\x24\xc6\x3c\x62\x1a\x15\x99\xc3\xf3\x66\xee\x62\x5e\x5e\x2c\x68\xbd\xe7\xc9\xec\x4e\xd1\x52\xfb\xa4\xcb\x79\x76\xa7\x96\x79\xcf\xbb\x9d\xa3\x7c\x18\x00\x93\x57\xe6\x5d\x39\x3d\xfc\x83\x9e\xfb\x41\xcf\xe3\x89\x31\xfa\x70\x65\xef\x58\xd2\x5f\xc5\xc0\x48\xdf\x0f\xc0\x59\x6b\x00\xb4\x5b\xf0\xbb\x99\xfb\x7f\x43\x10\x3c\x35\x12\x4a\xd4\x73\x29\xa0\x82\x69\xe1\xd3\x1e\xc9\x1a\x63\x82\xd2\xcc\x0b\x3f\xa4\x99\x42\xda\x7d\xc1\x24\xf0\x58\xc1\xc5\x25\x17\xba\x67\x2c\x62\x06\x7c\xc6\x7b\xed\x1b\x0c\x14\x43\xc0\xbc\x5f\xf5\x81\x75\x82\x03\x67\x18\xc2\x7e\x03\x69\x51\x26\x12\x7e\x75\xbc\xa2\x9f\x7d\x6e\xd6\x28\x6c\x70\x6c\x8d\xe0\xae\x66\xc0\x41\xb6\xf4\xbb\xf5\xed\xd6\x38\x99\xea\xf0\x94\x50\x9c\xf8\xfd\x92\x62\xf2\xfc\x18\x12\xc6\x53\x8c\x41\x45\x4c\x08\x2e\xae\x48\x55\xd2\x2b\x03\x57\xe0\x63\x78\xb5\xe8\x1b\xab\x91\x8f\x3d\x2b\x60\x0c\x1d\xb2\x95\xc6\x20\x68\x9f\xa9\xb1\x96\xb4\x66\x9e\xf3\xd8\x0f\x6a\xec\x9f\x9d\xd4\x01\xee\xb5\x00\xe8\x28\x6e\xac\x3e\x8e\x98\xf0\xf7\x79\xfc\x4c\x7a\x4a\x64\x31\x89\xc4\xe3\x0e\x9d\x5c\xe4\x7a\x04\x81\x21\xb0\xd9\x0c\x45\xec\xf3\x58\x0d\x80\xc7\x41\xaf\x04\x78\xc3\xe1\xea\x8e\xeb\xe8\x1a\x04\x09\x9d\xa2\xa0\xd1\xc1\xef\x46\xc6\x88\x29\x04\x01\xc3\x21\x1c\x1d\xf7\xb6\x94\xd8\x75\x00\x88\x4c\x43\x92\xcd\x45\x0c\x77\x5c\x5f\xd7\xe2\x77\x04\x77\xbd\xed\x3b\x78\xb3\xf5\xae\xd3\x4c\x22\xe8\x6b\x26\x80\xd4\x6b\xc8\x60\x76\xd6\xd7\x08\x8a\x1e\x7c\x47\x84\xbc\xcd\x2c\x3c\xa9\x6c\x63\xec\x61\x7d\xd8\x25\x9a\xe0\xe9\x2a\x93\x2c\x97\x87\x07\x64\x75\x7d\x8d\x12\x7f\x53\xa0\xb2\x29\xea\x6b\x72\xa5\xce\xc0\xa6\xcf\x01\x28\xcd\xa4\x06\x06\x5a\x32\xa1\x58\xa4\x79\x26\x42\x38\x38\xa4\xf9\x44\x16\x4e\x40\x75\xb0\xca\xd7\x7b\xa2\x94\x9a\x7e\x36\xa4\x90\x0a\xf1\x1f\x39\xa6\xb1\xb2\xca\x12\x41\xf8\xa4\x9f\x95\x0c\x26\x59\x96\x5a\x75\x95\xc9\x1a\xe7\xa8\xe6\x29\x91\x87\x57\x26\x31\x9b\x4d\xfe\x34\xc3\xd7\xf0\x7d\xf8\x6f\xd2\xdd\xa4\x85\x33\x71\x26\xb4\xea\xca\x3a\xed\xa4\x42\xb0\xa5\xcc\x43\xd9\xc2\x0b\x0a\x90\x5b\x66\xdf\xfb\x36\x80\xbd\xc4\x16\x1a\xae\xf0\x64\x80\xb6\x8d\xe8\x77\x12\x8e\xb5\x9c\x47\xda\x8c\x25\x40\x34\x82\xb1\xd0\x74\x08\x5a\xce\xd1\x3c\x29\x54\x0b\xc7\xd8\x99\x1f\xf7\x92\xa6\x9c\x07\x9b\xec\x69\x62\xb5\x83\x72\x0d\xe9\xd2\xa3\x24\xfc\x3c\x4f\x53\xb2\x57\x91\xdf\x2d\x80\x3a\x88\xaa\x2a\x9e\x92\x0a\xe1\xc3\xcd\x84\xa8\x64\xa8\xc8\xa2\x83\x3e\x92\x02\x95\xd6\x3c\xad\x9c\x57\x9a\xa6\x4a\x79\x2e\xef\xe9\xfb\xf0\xf4\x1e\xa3\x8e\x04\xb7\x2f\x71\x63\xc2\x97\x59\x9a\x4e\x58\x74\xe3\x17\xc8\xaf\x58\xce\x8d\x4c\x03\xdc\xd3\xf8\x0a\x95\xb1\xd1\xe1\x01\xa0\xd0\x26\xd0\xb3\xb9\x86\xc4\x80\x62\x00\x93\xb9\x7d\x06\x68\x46\xda\x80\x32\x18\x6f\xe3\xb9\x19\xb1\x0d\xa0\xa1\x05\x5a\xb9\x99\x93\x38\x31\xfc\xf4\xf6\x53\x0d\x3d\x62\x89\xb6\x17\x24\x4e\xb3\x05\xc6\x8e\xd3\xb0\x74\x5a\x00\xef\x4a\x32\x31\x2b\xee\x31\xa7\x4a\xdd\x9b\xd0\x8f\x37\x75\xd9\x89\xe1\x99\x3a\x13\x0b\x94\x55\x11\xc6\xa0\x1a\xb0\x37\x81\x6a\x66\xed\x5a\x0f\x29\x15\x1c\x0f\x61\xca\x6e\xd0\x37\x55\xc1\x60\x6b\x21\x2d\x6e\xa9\x96\x40\x1e\xaf\x2f\xae\x1e\x59\xa2\x50\xd1\xe8\xa8\x71\x3a\x4b\x09\x5b\x1d\x4d\xc4\x61\x94\x91\x7e\x9a\xc7\x7d\x32\xfa\xeb\x32\x3e\xb0\x91\xd0\xd0\x64\x34\xb4\x5c\x5d\x64\xf4\x95\xc2\xec\x36\x0d\x4f\x30\xc5\x0e\x42\xa2\xdf\x68\x69\xc9\x89\xe1\x20\xb4\x5b\x6d\xc4\x53\x18\x7e\xf9\xa7\x33\xf7\xc2\xfa\x22\xcf\x2f\x6b\xc6\xda\x75\xb9\x89\x5d\x0e\x5b\xeb\x39\x41\xb7\x53\xd4\x6d\x1e\x76\x5e\xde\xa0\x2d\xa4\xae\x21\x39\xc7\xa4\x0c\x3a\xc2\xbf\x09\x30\x85\x69\x02\x92\x8a\x52\x14\x11\x9a\x48\x33\x03\xbe\x8e\x4e\x46\xc7\x30\x57\x08\xa3\x73\xe0\xc2\x64\x61\x93\xe4\xd9\x24\x5b\x60\x99\xe3\xda\x3e\xdc\xc1\x85\x3b\x1b\xbd\x65\xf3\x9d\x31\xd1\x76\x62\xc3\x8b\x3b\xfa\x71\x1b\x4f\xba\xbe\xec\xa0\xff\x92\x54\x31\x1c\x3d\x13\xa7\xfd\xca\xec\xb3\xa6\x1c\x7a\x1c\xba\x63\xd4\x54\x02\xac\x99\x65\x7b\xf1\xa7\x93\xd6\xca\xfc\xcd\xe8\x0a\xc3\xaf\x0f\x8d\x93\x9c\xd0\x79\xda\xae\xd8\x5e\x0a\x61\xb5\xba\x33\xc3\x44\xa3\xb7\x23\xc8\x24\x7c\x7a\x3b\xaa\x48\xa7\xa3\x5c\x8c\x52\x64\xf2\x51\x24\xbd\x44\x6f\x6f\xe5\xa4\x17\xe2\xa3\xf5\x49\x85\x3c\xb5\x2e\xa9\xac\xcb\x15\x4f\x72\xc1\x53\x7d\xf0\x7c\x21\xd7\x4c\x06\xbb\xe5\x82\x2d\x52\xc1\xa6\x8d\x40\x17\x5d\x5b\xd5\x5a\xcd\x4d\x4d\xfb\x85\x57\x99\x88\x69\xd8\x9f\x82\xdf\xce\xf1\x29\x3e\xe6\x49\xfb\x58\xc2\x1c\x0b\x6c\x0c\xb6\x75\xc7\x04\x11\x13\xbf\x69\x48\xb9\xb8\x31\x32\x50\x63\x00\x7f\xf5\xad\x52\x45\xa0\xff\xd5\xa7\xd6\xfc\x55\x0c\x26\x1f\x44\xa8\xc0\x7f\x07\x6f\x82\xfe\x00\x44\xe0\x02\xf8\xbb\x69\xa9\xcb\x54\xbb\xe6\xa3\xe7\xa2\x1f\x03\xfe\xcd\x71\x4b\x29\xaf\x9a\x59\xc3\xff\xf4\x8f\x8d\x5b\xf9\x8b\xa3\xcb\x20\x08\x7f\x26\xde\x9f\x8d\x36\xb6\x33\x5d\xa1\xfb\x7a\xeb\x6d\x9b\x62\x83\xf0\xbd\x88\xfd\x20\x3c\x53\x5b\x91\xd7\x4f\x36\x3e\x4b\x12\x8c\x34\xc6\xd5\x69\x96\x44\x65\x4e\xd6\xdf\x17\x2f\x5a\x82\xed\xbc\x21\x4f\x80\x0b\xed\x97\xfb\x06\xf0\xff\x5b\xf0\xd9\xc6\xdb\xee\x9f\x4a\x69\xac\x2c\x19\x17\xfa\xa3\x39\xac\x5d\x4e\xd5\xd5\xb1\x61\xa0\xf1\x4c\x72\xa1\x13\xbf\xbf\x4a\x31\xfe\xab\x45\x00\x2c\x95\xc8\xe2\x07\x88\x32\x21\x8c\x94\xc4\x3c\x0c\x62\x9e\x18\x42\xd4\x05\x35\xd5\xd3\xfa\x16\x01\x79\x43\xd5\xbc\x24\x5e\xa7\x8a\xa7\xce\xac\x3c\x07\x58\xb0\x74\x8e\x6e\x2d\x5e\x54\xe3\x47\x83\x8a\x5e\xeb\x42\xfb\x1b\x21\xb6\xe6\x34\x2a\x7f\x0b\x63\xec\xc4\x77\x4f\x26\xbc\x52\xfa\xaa\x06\xb7\xbf\x07\xf6\x33\xc7\x92\xc7\xc6\x22\xf9\x00\xba\xea\x09\x3b\x06\x69\x10\x8f\x9d\xef\x54\x26\x07\x51\xea\x79\x2d\x31\x81\x48\xa2\xf9\x2c\x44\xcd\xa9\x3d\x29\xe2\x02\x26\x99\xbe\x86\x3b\xf6\xa0\xdc\x26\x35\x6f\xd5\x2f\xcf\x7f\x66\xe3\x7c\x23\xb5\xf5\x85\x42\xb9\x8e\x6c\xd6\x11\x54\xf1\xd9\x6e\xdb\x4e\x75\xab\x46\xb9\x01\x98\x45\x8d\x89\xc2\x5b\x85\xd7\xcb\xe3\xc2\x7f\x99\xa7\xfe\xe2\xe2\xe8\x72\x00\x8b\x8b\x37\x97\x8f\xf4\x4f\x1d\x47\x8c\x3f\xb4\x30\x5d\x09\xa4\x51\xe9\x9b\xbf\x77\xc2\x7f\x72\xbe\xdf\xed\xf4\xfe\x25\x54\xba\x5d\x7e\xad\x8f\x39\xbe\x43\x7b\xb3\xd2\xec\x5f\x4a\xe9\x7f\x12\x11\xce\xc2\x91\xf4\x83\x27\x57\x0d\x6b\x4b\xa1\x1f\x87\xaa\x4e\x50\x51\x31\x33\x1b\x58\xb6\xdb\xb2\xa2\x79\x11\xe0\xfa\xc5\x2b\x9b\x4c\x20\x64\x49\x47\x0f\xf5\x6a\xf1\xa4\xf2\xe6\x06\x1f\xd4\x66\xaa\x3c\x5a\x05\x39\x7d\x66\x95\xbe\x1f\x8f\xf3\xea\x7b\x68\x19\x41\xce\x35\x80\xc2\x66\xa6\x90\x50\x85\x97\x95\x96\x14\xa9\xe1\x7b\x9d\x71\x7f\x73\xa9\xa9\x17\xa8\xcf\x7e\xd5\xf3\x1c\xea\xb6\xef\x22\x58\x59\x49\xca\xad\x04\x73\xd6\xaa\x2b\x12\xe7\xa0\xc6\x2d\x67\x8a\x6d\xfe\xae\xfd\xe8\x93\x9b\xa8\x72\xd3\x06\xe5\xac\x9a\xff\x27\xd9\xe5\x51\xb3\xfc\xb0\x46\x73\xbd\x8d\x1c\x58\xfd\x8f\xa6\x7f\x71\x9a\x2e\xb1\xd0\xba\x30\x53\x5d\xa2\xd3\xf7\xe1\x87\x6c\x3a\xe5\xda\xdf\xee\x6e\x5c\xfd\xae\x79\x5f\xb3\x7d\x51\xd3\xc6\x6b\xd9\x01\x3b\x17\x27\x05\x4f\x7b\x79\xaf\xe7\x5c\xe6\x7c\xf4\xf6\xab\x5b\xb0\xe5\xee\xc5\x9a\xee\x44\xb2\x3e\x89\x14\x55\x5a\x57\x5a\xb0\x16\x69\x38\x5e\x95\x80\xab\xf4\x3d\x3c\x80\xe2\x6f\xae\xcc\xc5\xab\x1b\x71\x97\x09\x60\x1a\xf4\x35\x57\x30\xcb\xb8\xd0\x55\x37\xdb\xb4\x7a\xa5\xeb\x7f\x03\x00\x00\xff\xff\xbb\xec\xc5\x79\xe8\x2b\x00\x00")

func templateDialectSqlUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateDialectSqlUpdateTmpl,
		"template/dialect/sql/update.tmpl",
	)
}

func templateDialectSqlUpdateTmpl() (*asset, error) {
	bytes, err := templateDialectSqlUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dialect/sql/update.tmpl", size: 11240, mode: os.FileMode(420), modTime: time.Unix(1564498182, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateEntTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x4d\x8f\xdb\x36\x13\x3e\x4b\xbf\x62\x22\x38\x2f\x2c\xc3\x91\xef\x79\xb1\x87\x36\xdb\x02\x7b\x49\x3f\x36\x41\x0f\x41\x90\xa5\xc5\x91\xc4\x2e\x45\x2a\x24\xe5\xb5\x21\xe8\xbf\x17\x43\x4a\x5a\xc9\x76\x93\x4d\x4f\x96\xc9\xe1\xcc\x33\xcf\x7c\x76\x1d\x70\x2c\x84\x42\x48\x6a\xcd\x51\x26\xd0\xf7\x71\xdc\x75\xb0\x6a\x1e\x4b\x78\x7b\x03\x7b\x66\x11\x56\xd9\x3b\xad\x0a\x51\x66\xbf\xb3\xfc\x91\x95\x48\x42\x5d\x07\x0e\xeb\x46\x32\x87\x90\x54\xc8\x38\x9a\x04\x56\xe3\xf3\xe7\x2b\x51\x37\xda\xb8\xf1\x6a\xb7\x03\x52\x9e\xbd\x67\x35\x69\x01\x61\xc1\x55\x08\xde\x36\xa0\x72\xc2\x9d\xa0\xd0\xc6\x1f\x2e\x04\x6d\x5e\x61\xcd\xb2\xd8\x9d\x9a\xf3\x1b\x67\xda\xdc\x41\x17\x47\xb9\x07\x19\x47\xbb\x1d\xdc\xdd\x82\x2e\xbc\x16\x54\x2e\x8b\xa3\xbb\xdb\xf0\xe8\xee\x36\xfb\x40\x1a\xfa\x1e\x1e\xfe\xb6\x5a\xbd\x4d\x04\xdf\xea\x5a\x10\x5e\x77\x4a\x1e\xe2\xa8\xeb\xc0\x30\x55\x22\xac\xbe\x6c\x61\x55\x10\x07\xab\xec\x57\x81\x92\x5b\x78\xd3\xf7\x71\x14\x05\x1f\x1a\x66\x73\x26\x61\x55\x4c\x40\x2a\x4d\x32\x64\xf3\xc0\x64\x8b\x23\x80\x84\x0c\x4f\x52\x09\x14\xa4\x2b\x8b\x01\x00\xa2\xab\x7a\xba\x0e\x44\xe1\x0f\x5a\x29\xd9\x5e\xd2\xe1\xa6\xeb\x00\x15\x87\xbe\x0f\xda\x26\x27\xc2\xdf\x7b\xcf\xc1\x07\x56\x42\xdf\x07\x1f\x48\xd8\xc3\x5d\xfa\x83\xc1\x9f\x5f\x78\x89\xa3\x3b\x5d\xb7\xdb\x80\x28\x95\x36\x08\x25\x2a\x34\xcc\x09\x55\x02\xf2\x12\x03\x56\x0b\x9b\xdd\x20\xf9\x06\x9e\x84\xab\x60\x85\x33\x8b\x41\xcb\x19\x2b\xf8\x3d\x56\x08\xf7\xb3\x10\x19\xcb\xe0\xc3\x24\x64\xd1\x81\xd3\xa0\x84\xdc\x02\x53\x1c\x6c\xa5\x5b\xc9\x61\x8f\xd0\x36\x9c\x39\xe4\x50\x33\xd5\x32\x29\x4f\x19\xd9\xbe\x6a\x38\xd0\xa8\xb4\xa3\xc3\x8f\x4a\x7c\x6d\xe9\xf8\xd3\xe7\x89\xc9\x4d\xc0\x40\x54\x4e\x8f\x1e\xc2\xd9\x19\x9f\xe7\x84\x8e\xdf\x21\xd7\x67\xf4\x5a\xa7\x0d\xd5\x87\x27\xf9\x7e\xf8\x33\x3c\x5a\xb9\xba\x91\x74\xd3\x18\xa1\x5c\x01\x09\x17\x4c\x62\xee\x76\xaf\xed\x8e\x63\xae\x39\xee\xb4\xc2\xe4\x59\xc9\xf0\xee\x38\xd5\x52\xd0\xb0\x1a\xaa\x2f\x38\x11\x8a\xd5\x60\x8e\xe2\x80\x26\x18\xfe\x73\xfc\xd7\x5f\x00\x5c\xc4\x7f\x04\x56\xb4\x2a\x9f\x80\x41\xf2\x47\x8b\xe6\x94\xc0\x7a\x49\x69\xea\xc5\x87\xfa\xf5\x2f\xfa\x1e\xbe\xb6\x68\x04\xda\x7f\x89\xe8\x3c\xd6\xe3\x45\x16\x47\xfe\xf1\x7a\x01\xbb\xef\x61\x33\x97\x4a\xe7\x56\xd6\x29\x9c\x87\xaa\xef\x3d\x48\x2a\xfa\xc8\xa0\x6b\x8d\x82\xf5\xff\xe6\x0a\xde\x49\x81\xca\x75\x70\x66\x25\x0b\x2d\xa2\x4f\xb3\xb9\xfe\x33\xa1\x34\x8e\x16\x04\xef\x76\xf0\xd1\x67\x1d\x04\x53\x16\x18\xec\x5b\x21\x39\x1a\xdf\xab\x7c\x4a\x52\xc9\xb8\x4a\xd8\x33\x67\x77\x3b\x78\xaf\x1d\x82\xab\x98\xdb\xc2\x49\xb7\xa0\x10\x39\xe5\x76\xce\xa4\x5c\x0a\x7f\x54\x4f\x86\x35\xeb\x14\xf6\x58\x50\x31\x92\xc4\xa4\xb6\x46\x57\x69\xbe\xa5\x94\xbe\x30\x43\x56\x9e\x98\x1d\xe0\x21\x87\xc2\xe8\x1a\x18\x38\xc3\x94\x65\xb9\x13\x5a\x85\x32\xa2\x60\xcc\x0e\xfd\xa3\x5c\xd7\xb5\x70\x54\x52\xda\x80\xd1\x52\x22\x87\x3d\xcb\x1f\xb3\xf8\x45\x71\x0a\xcc\x8c\x21\x1a\xcf\xc3\xe9\x6f\x0a\x29\x42\xff\x2d\x40\x93\x8a\xcb\xf0\x0c\x31\xf1\x74\x41\xeb\x7f\xec\xd8\xeb\x69\x80\x10\xd9\xdf\x23\x04\x58\xe1\xd0\x80\x08\x82\xb9\xd4\x16\xf9\x96\xd4\x5a\x1d\xde\x53\x78\x14\x1e\xdd\x94\xe3\x4f\x42\x4a\xea\x40\x78\xc4\xbc\x25\xbe\x5c\x65\x74\x5b\x56\xde\x32\x37\x1e\xdd\x53\x25\xf2\x0a\x72\x83\x2c\x08\x2c\xe8\x7e\x29\xa3\x63\x1a\x2c\xce\x89\x48\x77\xdc\x82\x7e\xa4\x4a\xbd\xce\x5a\x16\x50\x64\xeb\x8d\x3b\xde\xfa\xcf\x34\x8e\x44\x01\xaf\xf4\xa3\xaf\x94\x86\x29\x91\xaf\x93\x71\xba\xf7\xfd\xdb\x8b\x61\x4c\xed\x72\xc1\x13\x1b\xc7\x72\xe2\xcb\x22\xfa\xa6\x65\xb8\x01\x77\xcc\xb8\x39\x4c\x41\x3f\x13\x1f\x42\x77\xef\x0c\x25\xb6\xa8\x1b\x89\x35\x2a\x17\xa2\x57\xd4\x2e\x0b\x37\x68\x5e\xc8\x55\x10\x5f\xa7\xb4\x04\x90\xc6\x2e\x8e\xf6\xad\x9f\xd9\xfb\x93\x43\x9b\xbd\xc7\xa7\x9f\xdb\xa2\x40\xb3\x56\x42\xa6\xfe\x32\xfb\xcb\x08\x87\xc3\xc3\x64\xae\x6e\x9d\x5c\x91\xf0\xa0\x42\xc7\x5e\x27\x82\xdf\xbc\x3e\x24\xdb\x0b\xfa\xef\x6e\xd3\x34\xf6\xe3\x71\x68\xb5\xe2\x62\x75\x98\x06\xe8\xc5\x68\xa7\x01\x26\x0a\x38\x5c\x8b\xeb\xb5\xfd\xe0\xff\x70\x80\x57\x37\x34\x1b\x7d\x50\xa3\x6f\x43\x0e\x60\xa7\xc7\x01\xff\xe6\x40\x78\xa3\x68\xc4\x84\xd2\x8e\x48\x7e\x5c\xd9\x4b\x30\x7b\x73\xde\x52\xe8\xa9\x8b\xef\x8b\xa0\xa4\x14\x88\x21\x81\xe8\x72\x8c\x72\x98\xb7\x81\x42\xda\xe4\xee\xec\x90\x48\xa1\x05\x0a\x3e\x35\x68\x4a\x27\x9a\x65\x06\x1b\x83\x16\x95\x63\xbe\xe6\x87\x79\x74\x77\x3b\x2e\x61\x2f\x4a\x32\xc1\xd7\xa9\xd7\xd6\xc5\x91\xe0\x5b\xf8\x42\x91\xb2\xce\xe4\x5a\x1d\xb2\x9f\x9c\x16\xe7\x0a\x28\x1f\x26\x07\x04\x8f\xfb\x78\xe6\xae\x9f\xd7\x56\x8a\xdc\x8f\xe2\x46\xb6\x86\x98\x9a\xb7\xf2\x67\x81\x50\x93\x0c\x1a\x66\xac\xcf\x96\x70\xac\x8b\xb3\x29\x33\x2d\xc5\xd3\xb3\x4f\x9f\x17\x4e\xfc\xc8\x9e\xe2\x37\x3c\x3c\x3a\xc2\xbb\x82\xe4\x9e\x54\x26\xcf\xaa\xc3\x36\xf4\x82\x65\xa6\x66\xea\x74\xb6\xcd\x5c\x5b\x67\x32\x98\x2d\x55\xcb\xcd\xe6\x7a\x74\xe6\x7e\xa6\x10\xfa\xcf\x3a\x2f\xca\xe1\x33\xa5\x30\xd1\x58\x16\x04\x2f\xf8\x7c\xa1\x62\x70\x62\x76\xf6\x49\x7c\x1e\x7a\x19\xdc\x40\x5e\x94\xd4\xec\xe6\x60\xfe\x09\x00\x00\xff\xff\x02\x51\x67\xf7\x29\x0d\x00\x00")

func templateEntTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateEntTmpl,
		"template/ent.tmpl",
	)
}

func templateEntTmpl() (*asset, error) {
	bytes, err := templateEntTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/ent.tmpl", size: 3369, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateExampleTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x6f\xe3\x36\x10\x3d\x4b\xbf\x62\x4a\x28\xa8\x04\x78\xa5\x02\x0b\xf4\x60\xc0\xe8\x47\x36\x29\x7c\x71\xd2\x5d\x17\xe8\x2d\xe0\x8a\x23\x85\x08\x4d\x2a\x24\xa5\x24\x50\xf5\xdf\x8b\xa1\x14\xcb\xaa\x93\xa2\xc0\x5e\x7a\x09\x4c\x6a\xf8\xe6\xcd\x9b\x37\x83\xf4\x3d\x08\xac\xa4\x46\x60\xf8\xcc\x0f\x8d\x42\x06\xc3\x10\xc7\x7d\x0f\x49\xf3\x50\xc3\x7a\x03\x5f\xb9\x43\x48\xf2\x4b\xa3\x2b\x59\xe7\xb7\xbc\x7c\xe0\x35\x52\x50\xdf\x83\xc7\x43\xa3\xb8\x47\x60\xf7\xc8\x05\x5a\x06\x49\x78\x2e\x0f\x8d\xb1\x1e\xd2\x38\x62\xca\xd4\x2c\x8e\x98\x47\xe7\xa5\x0e\x3f\x8d\xa3\xbf\x1a\x7d\xd1\x5a\xc5\xe2\x38\x62\xd5\xd7\xb2\x40\xed\x0b\x21\xb9\xc2\xd2\x17\xee\x51\xb1\x38\xea\x7b\xb0\x5c\xd7\x08\xc9\xdd\x0a\x12\x4d\x5c\x92\x7c\x67\x04\x3a\xca\x11\x45\x8c\x48\xea\x73\x62\xc5\x78\x3f\x5f\x04\xac\x0f\x80\x5a\xd0\xc3\x6c\xac\x0e\x75\x47\x88\x6d\xd3\xa0\x1d\x6b\xfd\x0b\x1a\x2b\xb5\xaf\x80\x5d\xb8\xbb\xed\x6e\x7f\xf5\xdb\xe7\x5f\xf6\xdb\x9b\xdd\xdd\xd5\xee\xd3\xed\xcd\x76\xb7\x1f\xa5\x29\x0a\x10\x4e\x43\x65\x2c\xf8\x7b\x04\xc1\x3d\x27\x89\x72\xd8\x6a\x30\x56\xa0\x05\x6f\xc0\xb6\x3a\x7c\xa5\xb2\x1d\x28\x53\x72\xa5\x5e\x56\xc7\xeb\xca\x28\x65\x9e\xa4\xae\xa1\x34\x87\x03\xd7\x62\x1d\x17\x45\x5c\x14\x11\xbc\x52\x1b\x86\x0d\xb3\xc6\xf8\x75\xc3\x9d\xfb\xd9\x97\x4d\x1a\x40\xee\x8d\xf3\xeb\x8f\x1f\x7f\xf8\x31\x2b\x08\xfa\xa7\x86\x5b\x87\x7b\x79\xc0\xcd\xde\xb6\xc8\xa0\x36\x21\x25\x7c\xe8\x08\xb0\xe3\x36\x70\x75\xde\x4a\x5d\x87\xba\xdf\x53\xf4\xc3\x30\xc4\x55\xab\x4b\xb8\x1a\x6d\xd0\xf7\xd0\x70\x57\x72\x45\x52\xee\xf8\x81\x74\x4c\x33\xe8\xe3\x48\x56\x01\x73\xb3\x01\xc6\xe8\x1c\x59\xf4\xad\xd5\x71\x34\xc4\x51\xe9\x9f\x09\xb4\x34\xda\xe3\xb3\xcf\x7f\xe5\xe5\x43\x6d\x4d\xab\x45\x9a\xc5\x91\xb0\xdd\x0a\xd0\x5a\x8a\x70\x8f\x2a\xbf\x69\x50\xa7\xec\xf0\x42\xdd\x5e\x11\x66\x16\xc0\x29\xe2\xbb\x0d\x68\xa9\x02\xba\x32\x75\x7e\xcd\x3d\x57\x55\xca\x2a\x2e\x15\x0a\x28\x2d\x72\x32\xd3\x51\x7b\x28\x95\x44\xed\xd7\x70\xd1\xb1\x90\x22\x0b\x6c\x04\x56\x68\x41\xd8\x2e\xbf\x54\xc6\x21\x71\x18\x03\x89\xc1\x0e\x9f\x2e\xc3\x21\xfd\x64\x65\x87\x36\x15\xb6\xcb\xb2\x38\x2a\x8a\x19\xbf\x43\xeb\x65\x89\xee\xd8\xec\xbe\x07\x65\x9e\xc8\x30\x47\x51\xbe\x77\x80\xa2\x46\x97\x9f\x1a\x56\xae\x20\xc1\x20\xaf\xce\xaf\xe8\xeb\xe8\x58\x72\xa1\xac\x40\x1b\x0f\x09\xe6\x5b\xb7\xd5\x1d\x5a\x87\xe3\xc7\xf0\x35\x09\xa6\x9c\x7d\x78\x21\x18\x85\xee\x5f\x1a\xcc\x3f\x63\x89\xc4\x14\x12\xb9\x7c\x31\x0c\x41\xf4\x50\x4d\x1e\x0c\x34\x3e\x98\x18\xe6\x14\x1a\x45\x97\x54\x15\xa6\xd9\x78\x5c\x5a\xa1\x0a\x5c\xa7\x67\xd7\x12\x95\x98\x18\x4f\x49\x5e\xad\x50\x8d\x98\xf3\xa4\x7c\x41\x7f\xe1\x68\x2e\x52\xca\x5b\xe5\x93\x7b\x2e\x8d\xa0\xcc\x73\xae\x69\xf6\x02\xe0\x17\xde\xe1\x9f\x69\xe9\x9f\x33\x3a\x53\x7f\x6f\x09\x4d\xe9\x94\xcd\xfa\x2e\x4b\x18\x5b\x82\x62\xcd\x56\x61\x42\xa8\xe6\x2c\x5e\x20\x9f\x4c\xf8\xb1\x87\x6f\x36\x2c\x74\x15\x9f\xe1\x49\xfa\x7b\x90\x7e\xd1\xbe\x44\xcf\x2a\x9f\xa9\xaa\x4f\x05\x3d\x51\xf3\x2d\x29\xf5\x42\xc5\x6f\x94\x70\x51\xe5\xb7\x5b\xcc\x34\xf4\x8c\x71\x21\x28\x6b\xdf\x53\x7c\x82\xf9\x1f\x5a\x3e\xb6\x38\xde\x50\xcc\x06\x98\x43\x3f\x85\xcc\xfd\x0b\x10\x61\x53\xbc\x1a\x15\xd2\xd7\xda\x4c\x93\xcd\x87\xb1\x79\xd9\xd9\xb3\xb1\xd0\xff\x62\xf1\x60\x9f\x65\xf1\x47\x1e\xa7\x26\x7a\xc7\x42\xfa\x3d\xf7\x2c\x9a\x9c\xc5\xc1\x2f\x8f\x2d\xda\x97\xff\xc1\x24\x8f\x1b\x72\x73\xce\x33\x3f\xd9\xc8\xf8\x4f\x0f\xfd\x4e\xec\x27\x17\x65\xf9\xb5\xb4\xce\x1f\x07\xec\x7c\xa5\xbe\xb9\x54\x83\x00\xb4\xf4\xc6\x05\x32\x49\xb7\x58\xa9\x51\x34\xbc\x35\xb1\x73\x34\x54\xb4\xeb\xff\x75\x48\x4f\x67\xf4\xa6\xf5\x4d\xeb\xd7\x71\xf8\x57\x62\xba\x3f\xf9\xf9\x77\x00\x00\x00\xff\xff\x66\x15\x7a\xbe\x9c\x08\x00\x00")

func templateExampleTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateExampleTmpl,
		"template/example.tmpl",
	)
}

func templateExampleTmpl() (*asset, error) {
	bytes, err := templateExampleTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/example.tmpl", size: 2204, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x41\x0a\x83\x30\x10\x45\xd7\xf5\x14\x1f\xc9\xb2\xc4\x7d\xc1\x95\xb6\xb4\x9b\x5a\xa8\x17\x88\x66\x8c\x41\x89\xa2\x42\x29\x43\xee\x5e\x62\x15\x4a\x57\x81\x97\x37\x6f\x86\x19\x9a\x1a\xeb\x08\x71\x4b\x4a\xd3\x14\xc3\xfb\x28\x49\xc0\x8c\x97\x5d\x5a\x08\x79\x5d\x39\xbc\x67\x86\xfc\x3e\xd4\xcf\x04\xef\xb3\x41\x13\x0c\x39\x9a\xd4\x42\x1a\xd5\x1b\xe4\x96\xfa\x88\xbc\xc0\xbd\x28\x71\xce\x6f\xa5\x0c\xb6\xd3\x21\x1a\x31\x43\x8c\x9d\xc1\x29\x45\xa5\x66\x82\x90\xd9\xe0\x1a\x6b\xe4\x43\xd5\x9d\x32\xa1\x18\x1c\xdb\xa0\x55\xf3\xc5\x52\xaf\x21\x10\x3f\xeb\x61\xa4\xf5\xaa\xc3\x1e\x48\x21\xe4\x8a\xff\x26\xb7\x45\xe3\x06\x77\xfd\xf7\xf3\x13\x00\x00\xff\xff\x61\x0d\x63\x94\xf0\x00\x00\x00")

func templateHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHeaderTmpl,
		"template/header.tmpl",
	)
}

func templateHeaderTmpl() (*asset, error) {
	bytes, err := templateHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/header.tmpl", size: 240, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateImportTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xc1\x4e\x84\x30\x10\x86\xcf\xf0\x14\x7f\x1a\x0e\xbb\x1b\x17\xee\x26\x9e\x3c\x79\x33\xd9\x07\x30\x15\x86\xd2\xb8\x4c\xb1\x4c\xd4\xa4\xe9\xbb\x9b\x61\xab\xab\x31\xf1\xc4\xd7\xe1\x03\xfe\x7f\x48\x09\x03\x8d\x9e\x09\xc6\xcf\x4b\x88\x62\x90\x73\x7d\x41\xec\xea\xca\x8c\xb3\x98\xba\x32\x7d\x60\xa1\x8f\x0d\x29\xc6\x10\x57\xa5\xd9\xca\xa4\xd7\x55\x62\x1f\xf8\xad\xa0\x67\xb7\xdd\x15\x3f\x93\xa9\xeb\x2a\xa5\xee\x00\xef\x38\x44\x82\x23\xa6\x28\x9e\x1d\x02\xc3\x45\xbb\x4c\x10\x9a\x97\xb3\x15\x5a\x71\xe8\x72\x56\x1d\x7e\x04\x07\xc1\x8e\x5e\xd1\xb4\xf7\x81\x47\xef\xda\x47\xdb\xbf\x58\x47\x68\xbe\x68\xaf\x41\xab\xca\xa4\xf4\x57\xca\xb9\x5b\x22\x0d\xbe\xb7\x42\xe6\x1f\x69\x1b\x5f\xcf\xaa\xa6\x84\x77\x2f\xd3\x55\x3f\xf5\x13\xcd\x16\xc8\x19\xfa\x9a\x56\x3d\xa4\x04\xe2\x01\x25\x6f\x41\xdd\xd6\x73\xdf\x11\x6f\x6b\x2a\xd8\x0d\xde\x9e\xa9\xd7\x51\x4a\x88\x96\xb5\xc3\xd3\x0d\x9a\x55\x42\xd4\xcf\xde\xde\xa1\x69\x4f\xe5\x70\xdc\x3a\xfd\x16\xcb\xcf\x50\xaf\x3c\xd3\x3e\x6c\xa3\xb5\xe8\x97\x7a\x45\xfb\x6e\xa1\xa1\x8e\x3f\x02\x2a\xef\xeb\x6b\xda\xcf\x00\x00\x00\xff\xff\x36\x75\xd9\x8c\xfa\x01\x00\x00")

func templateImportTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateImportTmpl,
		"template/import.tmpl",
	)
}

func templateImportTmpl() (*asset, error) {
	bytes, err := templateImportTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/import.tmpl", size: 506, mode: os.FileMode(420), modTime: time.Unix(1564494654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateMetaTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x4d\x6f\xe3\x36\x10\x3d\xcb\xbf\x62\x2a\x68\x01\x09\x70\xe4\xf6\x9a\xc2\xa7\x2e\x8a\x2e\x50\x14\x05\xba\xc8\x25\x08\x02\x5a\x1a\xc6\x4c\x68\xca\x25\x69\xc7\x01\xc1\xff\x5e\x0c\x3f\x64\xc9\x75\x9a\xf4\x64\x91\x33\xf3\xe6\xbd\xe1\x23\xed\x1c\xf4\xc8\x85\x42\x28\x77\x68\x59\x09\xde\x2f\x16\xce\xdd\xc0\xab\xb0\x5b\xc0\x93\x45\xd5\x43\x05\xe5\x9f\xac\x7b\x61\x4f\x58\x42\xd5\xa6\x4f\xb8\xf1\x7e\x51\x38\x07\x16\x77\x7b\xc9\x2c\x42\xb9\x45\xd6\xa3\x2e\xa1\x25\x14\xe7\x80\x6a\x23\xde\x24\x49\xec\xf6\x83\xb6\x25\x54\x21\xd4\x0d\xca\x58\xa8\x17\xc5\x6a\x05\xbf\xb3\x0d\x4a\xd8\x0e\xb2\x37\x60\xb7\x08\xc6\x6a\xa1\x9e\x40\x86\xed\x1e\xd5\x60\x69\x49\x11\xe7\x40\x0e\xaf\xa8\xa1\x6a\xff\x60\x3b\x04\xef\xc1\xbe\xed\x11\x84\x0a\xe1\x9e\x59\xb6\x61\x06\xdb\x45\x11\x31\xd7\x50\x3a\x07\x55\x1b\x57\xde\x97\xa1\x5f\xd8\xfa\xf6\xb5\xfd\x85\x38\x30\x65\x09\xe6\x5f\xdd\x67\x7d\x45\x0f\x5c\xa0\xec\xaf\x34\xba\x06\x16\xdb\x1a\xc5\x5e\x30\x06\x13\xd9\x32\xa4\x6b\xa6\x9e\x10\xaa\xc7\x25\x54\x1c\x6e\xd7\x50\xb5\xbf\x12\xb6\xa1\xc1\x12\x5a\xec\x44\x01\x7e\x46\x0d\x43\xcf\xe4\x63\xc6\x87\xac\xcf\xd3\xe2\xe3\xb8\x8e\xa8\x2d\x9e\x60\xaf\x87\x3d\x6a\xfb\x76\x45\x50\x31\xeb\x30\x93\xc2\xe7\x42\xe8\x98\xb3\x19\x26\xa2\x8c\x1d\x34\xf9\x24\x48\xfb\x2b\x2d\x02\x7d\x42\xb6\xbb\xbd\xa4\xd0\x5e\x0b\x65\x39\x94\xbd\x60\x12\x3b\xbb\xfa\x62\x56\x64\xc4\x55\x97\x14\x9b\xf2\x8c\x94\x8b\x4f\xa3\x9b\x22\x4c\xb0\x52\x71\x36\x5c\x13\x2c\xf7\x19\x2a\x9f\x61\x72\x64\x5a\xb0\x8d\xc4\x4b\x26\xce\x81\xe0\xb0\x65\xe6\xfb\x9c\xcd\x67\x59\xce\x2f\x88\xe0\x30\x90\x9f\x7f\x63\xe6\x2b\x72\x76\x90\x36\x2e\xee\x98\x14\x3d\xb3\x83\x36\x39\xf3\x7f\x17\x1d\x99\xa6\x1b\xc6\xa3\xbb\xd6\xe4\x07\x3a\x63\x1a\x45\xb7\xc5\x1d\x03\xef\xdb\x60\xdf\x74\xaa\xce\x27\x27\xd6\xcd\xf4\x4c\xc5\x35\xa3\x46\xa9\x82\x93\x29\x26\x2c\x42\xa0\xa0\x77\xa4\xea\xd3\x56\x34\x72\x4a\xb8\xf0\x73\x36\x74\x3f\x96\x4f\x2c\x9d\x37\x8f\x4c\x1e\x10\xf8\xa0\xb3\xa9\x27\x76\x0e\xda\xda\xd8\x73\x06\xb3\x8e\x21\x73\x4f\xfb\x02\xbc\x7f\x68\xef\x08\xa7\x6e\xda\x3a\x42\x7c\xa7\x87\xc3\xfb\x26\x2a\x19\xbd\x4c\x8b\xf0\x06\x56\xbc\x9d\x8c\xf3\x26\x2b\x83\x4a\x51\xef\xa8\x6a\x4c\x98\xc6\xc3\x8b\x74\xbb\x86\xd1\x58\xfc\xa0\x3a\xa8\xbf\x98\x06\x50\xeb\x41\x97\x63\xf7\xf9\x10\x54\xd2\x24\x0c\x30\x12\x9d\x90\xb3\xf0\x72\xa6\xbc\x4c\xd2\xe1\x9b\xa5\x82\x8e\x49\x89\x3d\x6c\xde\x42\xea\xe6\x20\x64\x8f\xda\xc0\x06\xf9\xa0\x11\x0c\x3b\x62\x1e\x92\xe0\x80\x7f\x5f\x88\xfb\x29\x33\x29\xa6\x3c\xae\x8f\x30\xd5\xd4\xcd\xfd\x8f\x0f\x71\x94\xf6\x3c\xc8\x30\x49\x69\xf0\x3d\xbc\x83\xea\xea\x06\x26\x45\xe0\x42\x5a\x71\x3c\x93\xb9\xfd\xa0\x6f\x2c\xe0\x2a\x64\xde\xb7\x6d\xfb\x10\x60\xe7\x87\x1a\x27\x9d\xd1\x83\x21\x93\x9b\x9f\x97\x50\x29\x2a\x3d\xa5\x8d\xd9\x24\x12\xed\x19\xa3\xc0\xe3\x39\xf0\xa8\xdf\x6d\xd5\x2c\x27\xad\xd2\x4d\x0d\xeb\xf4\xa3\xd1\x1e\xb4\x82\x49\x7d\xb6\xf0\x7f\x12\xa7\xc3\x7f\x5c\x02\x0f\x8c\x23\x61\x52\x9e\xc3\x05\x9d\xa6\xd6\x61\x66\x6a\x8e\xdb\xfc\x1c\x22\x3f\xac\x41\x09\x79\x2e\xc8\x44\x50\xeb\xbc\x95\x25\xe7\xdf\x94\xa1\x84\x9c\x2a\xf0\xf5\x78\xc0\xd3\xab\x32\xfd\x0f\xc8\xdf\xcd\xc5\x6b\x15\x3f\xff\x09\x00\x00\xff\xff\x44\x48\xe0\xff\x72\x08\x00\x00")

func templateMetaTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateMetaTmpl,
		"template/meta.tmpl",
	)
}

func templateMetaTmpl() (*asset, error) {
	bytes, err := templateMetaTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/meta.tmpl", size: 2162, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateMigrateMigrateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x92\xc1\x6e\x9c\x3c\x10\xc7\xcf\xf8\x29\xfe\x9f\xf5\xb5\x82\x6a\x63\xee\x2b\xe5\x50\x25\x3d\xe4\xd0\x34\x52\xfb\x02\x5e\x33\xec\x5a\x05\x43\xed\x81\xdd\xca\xe2\xdd\x2b\x83\xd1\x26\x5c\x2c\x8f\x67\x7e\x3f\x7b\x86\x18\xd1\x50\x6b\x1d\x41\xf6\xf6\xec\x35\x93\xc4\xb2\x08\x11\xe3\x03\xae\x96\x2f\xa0\x1b\x93\x6b\xf0\x3f\xe4\x9b\x36\xbf\xf5\x99\xe4\xbb\xcc\x87\x65\x11\x45\x8c\x60\xea\xc7\x4e\x33\x41\x5e\x48\x37\xe4\x25\x54\xa2\xc4\x88\x54\x9b\x78\xb6\x1f\x07\xcf\x28\x45\x21\xcd\xe0\x98\x6e\x2c\x45\x21\xdb\x9e\xa5\x48\xeb\xc9\xd4\xe4\xb8\x6e\xac\xee\xc8\x6c\x47\x1f\x43\x75\xf8\xd3\xd5\xc1\x5c\xa8\xd7\x52\x54\x42\xd4\x35\x7e\xae\x3b\xd8\x00\xbe\x10\xbe\xbe\xbd\xa0\x1d\x3c\x8c\x27\xcd\xd6\x9d\x0f\xd8\x6e\x69\xdd\x19\xda\x35\x68\xfc\x30\x8e\xeb\x06\x1b\x46\x09\xfe\x3b\xd2\x4e\x09\xec\x27\xc3\x88\xa2\x68\xfc\x8c\xfd\xcb\x72\xf5\xec\xed\x4c\x5e\x14\x93\x4b\x6b\xd0\xdd\xcb\x33\x4e\xc3\xd0\x89\x65\xbd\xc9\x2b\x5d\x33\x66\xb5\x53\x80\x86\xa3\x6b\x16\xc1\x74\x96\x1c\x2b\xd1\x4e\xce\xdc\x73\xcb\x24\xfa\x28\xa8\xf0\x25\x73\x22\x3c\xf1\xe4\x1d\x3e\x6f\x81\xd8\xf8\xf9\x88\xc6\xcf\x0b\x36\xe5\xd3\x2a\xba\xfb\xba\x6e\xb7\x79\x0a\xc3\xe4\x0d\x85\x2c\x2c\xc3\x4e\xad\x72\x55\x69\xf8\x86\x3c\x05\xf5\xb4\xad\x07\x0c\x23\x07\x28\xa5\x72\x77\xbe\x6f\x33\xfe\x31\xb2\x1d\x5c\x05\xf2\x7e\xf0\xa9\x3d\x79\xf6\x87\x14\xc1\xf1\x71\x6f\xe6\x2b\x5d\x73\x45\x19\x54\xe3\xe7\x8d\xa7\x94\xaa\x44\x61\xdb\x35\xf9\xbf\x47\x38\xdb\x25\x46\x91\x1f\xd7\xf6\xac\xbe\x25\x70\x5b\xca\x34\xeb\xcc\x3e\xe2\xd3\x2c\x57\x41\x25\x8a\x45\xec\xd9\xf9\x54\xdd\x1f\x71\xc0\x2f\x7d\xea\x68\xd3\xbc\xfb\xdd\xfe\x05\x00\x00\xff\xff\xe0\x38\x2d\x88\xd5\x02\x00\x00")

func templateMigrateMigrateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateMigrateMigrateTmpl,
		"template/migrate/migrate.tmpl",
	)
}

func templateMigrateMigrateTmpl() (*asset, error) {
	bytes, err := templateMigrateMigrateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/migrate/migrate.tmpl", size: 725, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateMigrateSchemaTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4b\x4f\xe4\x38\x10\x3e\x27\xbf\xa2\x14\xf5\x22\x40\xdd\x89\xe0\x18\xa9\x0f\x2b\xd0\x4a\x2b\x24\x16\x2d\x70\x42\x68\x64\x92\x4a\xb7\xd5\x8e\x13\x1c\x37\x33\x3d\x19\xff\xf7\x91\x1f\x79\xf6\x93\x99\x39\x25\xb6\xeb\xab\x72\x7d\xf5\xb9\xec\xba\x86\x14\x33\xca\x11\x82\x2a\x59\x62\x4e\x02\x50\xca\xf7\xeb\x7a\x06\x5f\xa9\x5c\x02\x7e\x93\xc8\x53\x98\x40\xf0\x40\x92\x15\x59\x60\x00\x41\x4e\x17\x82\x48\x0c\x60\xa6\x94\xef\xd5\x35\x48\xcc\x4b\x46\x24\x42\xb0\x44\x92\xa2\x08\x20\xd4\x5e\xea\x1a\x34\x56\xfb\xa3\x79\x59\x08\x09\xe7\xbe\x17\x64\x6f\x49\x84\x5c\x46\x19\x45\x96\x06\xbd\x89\x94\x12\x86\x89\x8c\xaa\x77\x16\xb9\xbd\xf8\x17\xbe\xff\x41\x84\xc6\xf1\x35\x63\xe4\x8d\x21\xcc\x41\x8a\x35\xea\xb8\x33\x10\x84\x2f\x10\x26\x5f\xa6\x30\x91\x10\xcf\x61\x12\x3e\x69\x9b\x4a\xc7\xf4\x8c\xc5\x24\x29\xd8\x3a\xe7\x95\x5e\x2d\x49\x95\x10\x06\x13\x19\xde\x93\x1c\xe1\x07\x94\x82\x72\x99\x41\xf0\x57\x75\x63\xad\x02\x0b\x8c\x22\xa8\xeb\x0e\xaa\x14\x2c\x0b\x96\x56\x20\x97\x08\xcd\x64\x56\x08\x33\x0e\xb4\xa5\xf3\xa8\x54\x00\x52\x6f\x20\x34\xd1\x07\x1e\xe6\xf0\xf2\x7a\x69\xd3\x0a\x6d\xb4\xda\xf7\xbc\x71\x16\x89\xc9\x42\x3a\x0b\x97\x87\xe7\xd5\xa0\xfd\xc7\x36\x58\xd2\x06\x9b\xc2\xd3\xa6\xc4\x18\x0c\x95\xa1\x5d\xd3\x33\xe1\x4d\xc1\x2b\xe9\xac\xa6\xd6\x43\x3d\x03\x9a\x69\x83\x67\x4e\xdf\xd7\x7a\x01\xec\x5f\x6c\xf8\x9c\x76\xc5\x1a\x9a\xff\xcb\x13\x81\x39\x72\xa9\x11\xed\xe0\x08\xe8\xbe\x29\x96\x52\xd0\xfc\xc7\x70\xd6\xd4\x70\x07\xce\x88\x6d\x92\x84\x8f\xf4\xbb\x41\xe9\x6f\xac\xab\xa0\x95\x74\xc0\xfe\x6f\x29\x85\xb6\xd7\x5f\xcb\x4f\x68\x98\xd9\x8f\xb8\xc5\x8c\xac\x99\x49\xc7\xfd\x9e\x86\xbb\x59\x12\x51\xa1\xc1\xb9\xdf\x9d\x38\xb0\x84\x6b\x64\xeb\xa8\x15\xa3\x11\xc7\x11\x29\x1a\x05\x0f\x85\x28\x1b\x2e\x3b\x19\x5a\x25\x01\xe5\x59\x21\x72\x22\x69\xc1\x4f\x53\x64\xeb\x6a\x0e\x67\x4e\x8d\x26\xa0\x11\x63\x4f\x64\x1d\xde\xa4\xe3\xf4\x18\x8f\xce\x85\x59\x7b\x10\x34\x27\x62\x73\x87\x9b\x78\xb7\xc6\xc7\x22\x2f\x57\x4e\xe5\x1d\xb2\x21\xbc\x6f\x4a\xf7\x9f\x87\x56\x6b\xf8\xae\xdd\xd9\xbd\x76\x07\x63\xb8\xc9\x17\x3d\xa4\xa0\xd4\xeb\xa8\xba\xc3\x22\x8d\x87\x36\xb9\x7f\x0a\x81\x74\xc1\xef\x70\x53\xf5\xb3\xeb\xa6\x77\x66\x98\x35\x19\xf6\xe0\x5d\x54\x97\xc2\xe3\x26\x7f\x2b\x98\xe3\x3b\x5b\x85\x76\xdc\x52\xde\x67\x7d\x37\xad\x1e\xc0\x76\x03\xb9\x32\x91\xb3\xd5\x36\x65\xdb\xe4\x5e\xef\x63\x77\x48\x70\x72\xd5\x10\x7c\xfd\x59\x86\xb7\x49\xde\x35\xa3\xa6\x6d\x55\xa3\x4b\x28\x8b\x4a\x96\x05\x47\x10\x98\x09\xe4\x09\xe5\x0b\x90\x05\x90\x8f\x82\xa6\x20\x37\x25\x26\x4b\x4c\x56\x7a\x96\x15\x45\x59\xc1\x65\xd4\x3a\xfa\x1f\xb3\xdf\xe2\xac\xc3\x1f\xa7\xcd\x9a\x9b\xc3\xf3\x6b\x04\x36\x3d\xa0\xef\xe8\xd0\xc5\xf4\x07\x59\x6e\xba\x5a\xb6\x0a\xff\xe3\xcf\x65\x4a\xe4\xf0\xce\x68\x7c\x34\x8b\xb1\xeb\x37\x61\xd3\x90\xfd\x3d\x31\x46\xae\x6f\x91\xe1\x5e\xd7\x76\xf1\x54\xd7\xbd\x7b\x6c\x74\x46\x95\x3f\x98\x8d\x22\x70\x8f\x00\xdb\x2d\x09\x63\xa6\x2d\x4a\x3b\x49\x79\xaf\x7f\x86\xbe\xe7\x6c\xfb\xd7\x73\xdb\x10\x8f\x3f\x31\xbc\x5e\x1d\x0f\xf5\xf2\xa9\x3f\xdc\xba\xd2\x2f\x9b\x6c\xcd\x13\xa0\x9c\xca\xf3\x0b\xa8\x4f\x7e\xd0\x7c\xf6\x0e\x19\xa9\xf7\x40\x6b\xea\xdf\x0f\xfd\xe5\x4e\x78\xad\x50\x61\x0e\xa7\x2a\x78\xbc\x97\x86\x82\xde\xbf\x79\x70\xba\xc1\xcf\x00\x00\x00\xff\xff\x87\xd9\x4c\xf9\x91\x0a\x00\x00")

func templateMigrateSchemaTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateMigrateSchemaTmpl,
		"template/migrate/schema.tmpl",
	)
}

func templateMigrateSchemaTmpl() (*asset, error) {
	bytes, err := templateMigrateSchemaTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/migrate/schema.tmpl", size: 2705, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatePredicateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\xcd\x6e\x9c\x30\x14\x85\xd7\xf6\x53\x1c\x59\x54\x02\x69\x02\xed\x36\x52\x37\x55\xd7\x51\xa4\x74\x5f\x39\x70\x61\xac\x80\xa1\xf6\x85\x49\x65\xf9\xdd\x2b\x03\x99\x99\xfc\xa9\xab\x19\xcd\x9c\x7b\xb8\xdf\x67\x13\x02\x1a\x6a\x8d\x25\xa8\xc9\x51\x63\x6a\xcd\xa4\x10\xa3\x94\x21\xdc\xe0\x64\xf8\x08\x7a\x66\xb2\x0d\x32\xa8\x7b\x5d\x3f\xe9\x8e\xd4\xab\xec\x4d\x8c\x52\x84\x00\xa6\x61\xea\x35\x13\xd4\x91\x74\x43\x4e\xa1\x4c\x3d\x21\x20\x4d\xa7\x46\x33\x4c\xa3\x63\xe4\x52\xa8\x76\x60\x25\xd3\xe7\x63\x5d\x91\xe5\xaa\x31\xba\xa7\x9a\xab\xce\xd1\xd0\x1b\x5b\x75\x4e\x4f\xc7\xaa\xf1\xbd\xfa\x20\xe4\xff\xf4\x4a\x16\x69\x43\x38\x6d\x3b\x42\xf6\xfb\x80\xcc\xe2\xf6\x3b\xb2\xf2\x6e\x6c\xc8\xaf\x4b\x55\x15\x42\x40\x66\xcb\x3b\x3d\x10\x62\x84\xf1\xe0\x23\xe1\xbc\x3b\xda\xd9\xd6\x6c\x46\x8b\x76\x74\x7b\x76\x47\x4c\xf1\xc7\xd9\xf4\x0d\x39\x5f\x4a\xfe\x3b\xd1\x9b\xae\x34\x9a\x87\x00\xd3\xa2\x63\xe4\x3d\x59\x64\xe5\x03\x8f\x4e\x77\x54\xe0\x1b\x62\x34\x96\xc9\xb5\xba\xa6\x10\x93\x83\xde\xa7\xb9\x10\x90\x1b\xdb\xd0\xf3\x25\x8d\xaf\x45\xf9\x63\x7b\xd4\x16\xd8\x74\x6d\x7c\x9f\xd7\xbf\xc3\xbb\x27\xf7\x73\x13\x84\x7a\xb4\x9e\xdd\x5c\x33\xf4\x35\xed\xe8\xb0\x7a\x05\x3b\xbd\x90\xf3\xba\xf7\x78\xd4\x9e\x1a\x8c\x16\xbb\x5c\x24\xd6\x52\x26\xbc\xcf\xea\xf3\x8b\x77\x73\x40\xe6\x77\x8c\xd5\xfe\x0b\xd3\x0a\x62\x5a\x64\x06\x31\x1e\xce\x50\x6d\xaa\x34\xd7\xfe\x5e\xc6\xaf\x14\x14\x17\x07\x6f\xa4\x07\x29\x1c\xf1\xec\xec\xeb\xdf\xf3\x75\xdb\x7c\xc1\x95\xf2\x22\x85\x85\x3f\x19\xae\x8f\x58\xd2\x72\x4b\x99\x27\xb6\xed\x8f\x74\xb9\xff\xcf\x20\x85\xa8\xb5\xdf\x8e\xfe\xfd\x9e\xb7\x52\x08\x71\x26\xca\x97\x62\xef\xdd\xaf\xbb\x10\x0d\xb5\x7a\xee\x79\xcd\x4d\xda\x9a\x3a\x6f\x07\x2e\x1f\x26\x67\x2c\xb7\xb9\x9a\xed\x93\x1d\x4f\x76\x35\xbe\x1e\xce\xf9\xa8\x6e\xf1\xe5\x97\x3a\x60\x29\x52\x65\x94\x22\x16\xf2\xfa\x45\xfa\xe0\xdb\xbf\x00\x00\x00\xff\xff\xef\xfc\x7c\xa5\xc7\x03\x00\x00")

func templatePredicateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatePredicateTmpl,
		"template/predicate.tmpl",
	)
}

func templatePredicateTmpl() (*asset, error) {
	bytes, err := templatePredicateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/predicate.tmpl", size: 967, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTxTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x4d\x8f\xe3\x36\x0f\x3e\xdb\xbf\x82\x6f\x30\x78\x11\x0f\xbc\x76\xcf\x01\xe6\x34\xdb\x43\x2f\x03\xb4\x9b\xa2\x7b\xdb\x55\x24\x26\x16\x6a\x4b\xa9\x4c\x27\x0a\x8c\xfc\xf7\x82\x92\xbf\x32\xc9\x6e\x3f\x80\x5e\x76\x62\x89\x22\x1f\x92\x0f\x1f\x69\xfb\x1e\x14\xee\xb5\x41\x58\x91\x5f\xc1\xf5\x9a\xa6\x7d\x0f\x84\xcd\xb1\x16\x84\xb0\xaa\x50\x28\x74\x2b\x78\x0a\x5b\xba\x39\x5a\x47\xb0\x4e\x93\x95\xb4\x86\xd0\xd3\x2a\x4d\x56\xed\xc5\xc8\x55\x9a\x26\xab\xfd\x4e\x96\x68\xa8\x54\x5a\xd4\x28\x69\x95\x66\x69\x5a\x96\xb0\xf5\xa0\x5b\x10\x40\x4e\x98\x56\x48\xd2\xd6\x88\x1a\x64\xad\xd1\x10\x50\x25\x88\xb7\xa5\x43\x41\xa8\x60\x77\x01\x29\xea\x5a\x9b\x03\xbc\x06\x8b\x62\xeb\xd7\x59\x91\xd2\xe5\x88\xec\xa9\x25\xd7\x49\x82\x3e\x4d\xa4\x35\x7b\x7d\x48\x93\xbe\x07\x27\xcc\x01\xe1\xe9\x4b\x0e\x4f\x06\x36\x2f\xf0\x54\xbc\x59\x85\x2d\x7c\xb8\x5e\xd3\x24\x29\x4b\xe8\x7b\x78\x32\xc5\x9b\x68\x10\xae\x57\x0e\x47\x15\x8e\x08\xf6\xd6\x81\x36\x84\x8e\xa1\x99\x03\x9c\x35\x55\x61\xff\xf6\xd0\xae\xd3\xb5\x42\xd7\x16\x69\x92\xdc\xee\x3c\xdf\x7c\x46\xd4\x01\x16\x1a\xc5\x65\xbb\x86\x2a\xbc\xda\xa6\xd1\x04\x32\xfc\x89\x00\x16\x05\x29\xd2\x7d\x67\x24\xac\xc9\xc3\xf3\xd6\x67\x83\xf5\x3a\x03\x74\xce\x3a\x4e\xd7\x21\x75\xce\x00\xf9\x22\x26\x5e\x28\xa7\x4f\xe8\x8a\xf5\x33\xf9\x8f\xe1\x67\x56\x90\x2f\xc6\x83\x43\xd4\x5f\x6c\x5d\xef\x84\xfc\x1d\xdc\xf0\xe3\x2f\x23\x8f\x27\xfe\x45\xec\xf9\xe8\x98\x73\xac\x70\x3c\xce\x14\x78\x5d\x34\x7d\xa7\x8d\x6a\x81\x2c\xc8\xce\xb9\xb0\xfa\x9d\x72\x84\x73\xeb\x0c\x9e\x07\x0f\x33\xa8\xff\xc7\x95\x3e\x4d\x06\x46\x6c\x66\x9c\x79\x9a\x24\x9f\x64\x85\x8d\xd8\x40\xa3\x0f\x4e\x10\x16\x6f\x78\x8e\x4b\x6b\xf2\x43\x1e\x59\x1e\x7b\xfa\x7d\x1a\xdd\x76\x7d\x03\x6f\x78\x7e\xd0\xf8\xf5\x14\x7c\xf4\xca\x2c\x08\x1e\x02\x13\xfa\xbe\x7c\x86\xbd\x76\x2d\x81\xb1\x0a\x03\xfb\x94\x95\x80\x5e\x34\xc7\x1a\xe1\xb9\xbc\x5e\xd3\xbe\xff\x00\x4f\xd1\x68\xf3\x02\xda\x28\xf4\x13\x98\x1f\xc2\x24\x96\x25\x8c\xa5\x87\xb3\x13\xc7\xd8\xd6\x83\x3e\xa1\x81\x61\xfc\x8a\xad\x8f\x5c\x16\x60\xec\x71\x5a\x1d\x0e\x69\x8e\xd6\xa0\x21\x11\xeb\xcd\x73\x5a\x21\x68\x85\x22\xcc\x87\x85\xb6\x3b\x86\x69\x5f\xb4\xa5\x0d\x0e\x6d\x47\x20\x94\xe2\x59\x11\xe6\x02\xe8\xc9\x09\x90\x9c\x0c\xd9\x00\x63\x1e\x95\xb2\x84\xdf\x2a\x34\x20\xc6\xb5\x30\xdc\xc1\xfd\x40\x21\x9e\xee\x1c\x34\xc1\x01\x87\xa9\x68\xb9\x9c\x8b\x1c\xb4\x69\x49\x18\x89\xc5\x62\x8a\x84\x51\x33\xb5\x85\xc3\x90\x21\x97\x92\x1d\x84\x61\x66\x89\x19\x71\x04\x73\xde\xe9\x5a\x74\xd0\x74\x2d\x05\x18\x60\x0d\xb2\x4f\xbb\xe7\xcd\x06\xb4\x01\xeb\x18\x23\x73\x32\xc6\xb1\x6e\x1a\x9c\xfb\xb9\x29\x4b\x3e\xfd\xd3\x1e\x04\xc8\xda\xb6\xa8\x96\xdb\x5c\x44\x6c\x76\xa8\x14\xaa\xe0\xd9\xe0\x10\x08\x0e\x68\xd0\x05\xb1\x43\x43\x9a\x34\xb6\xf9\x84\x30\xac\x5c\xd8\xaf\x38\x1e\x6b\x8d\x3c\x34\x7f\x74\xe8\x2e\x79\x48\x6f\x60\xc9\x26\x68\x53\x20\xc8\xc8\xbe\xe2\x67\xb6\xfa\xfc\xf9\x33\x97\x93\x3d\x85\x53\x70\xd6\x75\x0d\x3b\x04\xf4\x28\x3b\x42\x15\x88\x53\x39\xdb\x1d\xa2\xc6\xa9\x81\x42\x95\x96\xd5\xa4\xc1\x54\x31\x03\xee\x53\x7d\xb3\x84\x71\x76\x27\xee\xe9\x16\x8c\x25\x38\x58\x67\x3b\xe2\x6b\xa4\x15\x7b\x1c\xd4\x7a\x32\x9a\x35\x3b\x44\x9f\xa3\x22\xb4\x24\x5c\x0c\x79\x53\x5c\xd8\x3b\xdb\x14\x69\xa2\xdc\xe9\x1d\x71\xa3\x0f\x3f\x6a\x78\x67\x14\xba\xfa\xc2\x5c\xbc\x01\x9c\x90\x5f\x70\x68\x90\x23\x83\xe7\xad\x1f\xb2\xe4\xc2\x1a\x3c\xbf\xbb\x94\x06\x52\x46\xf5\x09\xe6\x6b\x49\x1e\x86\xcb\xae\x78\x8d\x7f\x73\xb8\xc7\x95\xc1\x2c\x86\x79\x54\xce\x8c\x33\x26\x1f\xbe\x78\x8e\x95\x3b\x15\xd1\x61\x96\x26\x7a\x1f\x96\xff\xf7\x02\x46\xd7\x6c\x38\xea\x99\xd1\x75\x38\xc1\x7a\x31\x69\xdc\xe8\xb9\x27\xcf\xf2\x16\x00\x6c\xf8\x9f\x6b\xce\x07\x86\xfc\xb6\x7e\x92\xda\xf7\xf5\x64\x8d\x38\xa2\x63\x45\x1d\xf1\x92\x05\x71\xb2\x5a\x8d\x33\x65\xdd\x3c\x52\x61\x4a\xd9\x25\xf7\xe1\xf1\x50\x15\xf0\xa9\xb2\x5d\xad\x98\x5d\x6c\x8e\x0a\xac\xa9\x2f\x7c\x81\x3f\xb6\x5f\x48\xfa\x0c\x82\xeb\x71\x5b\xdc\x0c\xd6\x73\xe3\xe6\x4a\xc2\x74\x07\x85\x8c\x21\x66\xfc\x31\x5a\xde\xa4\x3d\x9c\x1e\xa7\xed\xef\x72\xed\x11\xba\xc1\xfd\x3a\x63\x0a\x33\xc7\x16\x30\x0a\x6e\xe7\x6c\x30\x5e\x78\xb6\xc5\xf8\xda\x61\x45\x0a\xb2\x30\xba\x5e\xf8\x0d\x66\xf3\x05\x0b\x73\xeb\xe1\xe6\xb1\x30\x3b\x8a\xdf\xdf\x54\xb8\xa0\x8d\xbf\xde\xaa\xdb\xd7\xed\xf8\x1a\xf8\xfa\x48\xda\xbe\xf1\x0c\x58\xa2\x7c\xf7\x06\xb9\x87\x39\xf1\x65\x02\x3a\xa9\xe5\x3f\x86\x3a\xfa\xba\x05\xfb\x6d\xf5\xbd\x83\x7b\xff\x70\xb9\x07\xfc\xa3\x47\x39\x5e\x41\xbe\xe0\xaf\xc7\x8d\xe7\x9d\xc7\x93\x1f\x65\x35\xd2\x21\x07\xe1\x0e\x6d\x4c\x71\x2f\x24\xf6\xd7\x1c\x4e\xcb\xcf\x87\x4f\xa8\x21\x30\xbb\xcf\x47\x6d\x67\x3f\x39\x9c\xc6\x77\x53\xd0\xf2\x19\x67\xf8\x7c\x0c\x34\x6c\xfd\x87\x48\x27\xff\x0f\xa1\x9e\x84\x83\x2f\xef\x5f\x16\x2f\xcb\xae\xac\x8d\xae\xb3\xf0\x7f\x8a\xe1\x31\xfc\x67\x00\x00\x00\xff\xff\x47\x53\x48\x06\x71\x0c\x00\x00")

func templateTxTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateTxTmpl,
		"template/tx.tmpl",
	)
}

func templateTxTmpl() (*asset, error) {
	bytes, err := templateTxTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/tx.tmpl", size: 3185, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateWhereTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x57\xc1\x6e\xe3\x36\x10\x3d\x4b\x5f\x31\x20\x14\x54\x02\x12\x0a\xbd\x16\xd8\x43\x01\x6f\xb1\xbe\x24\x5b\xb4\x68\x0f\x41\x50\x70\xa5\x91\x4c\x44\x26\xb9\x24\xed\xec\x82\xd5\xbf\x17\x24\x65\x49\x59\xdb\x9b\x18\x49\xd0\x1a\xbd\xc5\xe2\xcc\x70\xe6\xbd\x37\x2f\xa0\x73\x50\x63\xc3\x05\x02\x79\x58\xa1\x46\x02\x7d\x9f\xa6\xce\x5d\xc1\x03\xb7\x2b\xc0\x2f\x16\x45\x0d\x19\x90\x8f\xac\xba\x67\x2d\x12\xc8\xe8\xf0\x27\x5c\xf5\x7d\x9a\x38\x07\x16\xd7\xaa\x63\x16\x81\xac\x90\xd5\xa8\x09\x50\x5f\xc5\x39\xf0\xb9\xb1\xde\x2c\x88\xaf\x95\xd4\x96\x40\x16\x8e\xca\x12\x96\x0b\x68\x78\x67\x51\x1b\xd8\xa2\xb6\xbc\x42\x03\x9f\x98\xc1\x1a\xa4\x00\xbb\x42\xae\x81\xd7\x28\x2c\x6f\x38\x6a\x9a\x36\x1b\x51\xc1\x72\x91\xf3\x1a\x9c\x83\x8c\x2e\x17\xf4\xf7\xaf\x0a\xa1\xef\x0b\x50\x1a\x6b\x5e\x31\x8b\x34\x1c\x5d\xb3\xb5\xff\x0e\x2e\x4d\x34\xda\x8d\x16\x47\x02\x9c\x03\xde\x40\x6b\x21\xef\x50\x40\x46\x7f\xb3\x52\xb3\x16\x0b\xf8\x11\xfa\xfe\x23\xea\x05\x67\x1d\x56\x76\x9c\x28\x4f\x13\x3f\xb8\x66\xa2\x45\xc8\xfe\xba\x84\xcc\xc4\x0c\xf8\xe9\xdd\x94\x1e\x01\x0a\x91\x99\x5d\xab\xce\x1f\x2a\xcd\x85\x6d\x80\xd4\xb1\x62\x79\x61\xca\xb1\xa5\x92\xd7\x64\xaa\xb4\xcb\xbd\x82\x2f\x23\x76\xb1\x8c\x07\xee\x32\x76\xe0\xdb\x09\xb7\x14\x69\x84\x79\xd6\x92\x54\xfe\x42\xa9\x4c\xc0\x08\x06\xb2\x32\xa6\x5b\xff\x9d\xf8\xcb\x76\x93\x67\x52\xd1\x3f\x98\xe6\xac\xe6\x55\xfc\x18\xc2\x42\x94\x19\xc2\x06\x2e\x43\x8d\x40\xc1\x6c\x9a\xe5\xe2\xc2\x90\x50\x65\x00\x34\x4d\xca\x12\xc6\xc8\xbe\x07\xa6\x54\xc7\xd1\x78\x3a\xc3\xf7\x29\x74\xa2\x64\xa0\x3b\xea\x01\xbb\x9a\xa6\x49\x48\x9f\xd5\xc9\x77\xad\x79\x52\x0f\xb5\x4e\x29\x1d\x7b\x3d\x41\x1d\xaf\x2f\x8f\x13\xf4\x91\x1c\x58\xb7\x9f\x75\x4b\xe2\xa4\xe4\x46\x05\x68\xc7\xe8\x53\xf4\x54\x4a\x65\xf6\x34\x75\x58\x55\x74\x50\xd5\x63\x5d\x7d\xf3\xab\x48\x93\x6f\x17\x7b\x36\x64\x13\xc7\xfb\xc5\x93\x67\xf6\xc5\xc2\x4c\xc5\x3a\xc8\x9a\x27\x45\x82\x9f\x37\xac\xe3\xf6\x2b\x54\x2b\xac\xee\xf7\x05\xe2\x1c\x7c\xde\x48\xdf\xf9\x58\x6b\x50\x0c\x2c\xed\x0f\x66\x70\x0b\x7f\x99\x95\xf3\x0b\xde\xff\x7a\x48\x52\xdb\xf8\xeb\x2c\x65\x12\xa0\x26\x1e\xf9\xd3\xd5\xd1\x0c\xb9\xff\xa6\x38\xf6\xec\x2a\x0f\x7e\xd5\x14\x7b\x76\xb5\x7d\x8e\x5b\x6d\x9f\x34\x2b\xc8\x1f\xcb\xb0\x80\x7c\xe7\x45\xc5\x4b\x7d\xeb\xb8\x2c\x5f\xc1\xc8\x9e\xa7\x4f\xcf\xdd\x7e\x2d\xcf\xd4\xd6\x43\xb0\x66\xf7\x98\xdf\xde\x71\x61\x51\x37\xac\x42\xd7\x5f\x42\x87\x62\xd6\x4c\x51\xf8\xe0\x46\x6a\xe0\x3e\x21\xf2\xb3\x0d\xb5\x93\x64\x7b\xcb\xef\xe0\x1d\x4c\xd1\xb7\xfc\xce\x1f\xf4\xc3\xcd\x3b\xd4\xff\x73\x6b\x32\x73\xd3\x69\x63\x5e\x60\xac\x81\xd5\x37\xf1\xd6\x64\x12\xef\xd1\x4d\x1a\xe6\x7e\x5f\xb7\x78\xdc\x65\x31\xc2\xfd\xf7\x38\xc8\x07\x66\x2e\xc2\x7a\x7c\x57\xe3\x1f\x98\xf1\x75\xbf\x27\x6e\x1c\x15\x87\x75\x8b\x87\xb4\x7d\x56\x16\xea\xc7\x25\x1e\xd4\xd3\x65\xe0\xe7\x2f\x57\xec\x6d\x54\x10\xd1\x9c\x3a\xb8\x30\x7f\x72\xbb\x22\x23\xca\xaf\x4b\x63\x44\x85\x41\xcb\xb7\x28\xa0\x92\xa2\xe6\x96\x4b\x61\x20\x97\x76\x85\x7a\x2a\x64\x8a\x43\x8c\xfb\x63\x03\x94\xd2\xc7\xb4\x62\x30\xad\xdd\x45\xff\x37\x59\x3c\x44\xbe\xde\xec\xff\xab\x7f\x3b\xdd\x68\x68\xb5\xdc\x28\x03\x1d\x37\x16\x64\x33\x63\x2a\x8e\xe4\x59\x97\x1a\xa4\x42\xcd\xac\xd4\xf0\x09\xed\x03\x62\x50\xc3\x7a\x78\x4c\xdd\xe8\x7c\x96\xb5\xc7\xe2\x73\xf8\x3b\x87\xe7\x95\xd4\xcf\x7a\x5e\xd1\x63\xcf\xab\xb2\x84\x6b\x69\x1f\xed\x99\x90\x76\x42\x76\x58\xb1\xb8\x42\x13\x12\x11\xe3\x6b\x69\x73\x75\x04\x9f\x73\x07\x56\x48\xfb\x32\x64\x27\x51\xff\x13\x00\x00\xff\xff\x6b\x85\x47\xaa\x90\x10\x00\x00")

func templateWhereTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateWhereTmpl,
		"template/where.tmpl",
	)
}

func templateWhereTmpl() (*asset, error) {
	bytes, err := templateWhereTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/where.tmpl", size: 4240, mode: os.FileMode(420), modTime: time.Unix(1565007749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/base.tmpl":                      templateBaseTmpl,
	"template/builder/create.tmpl":            templateBuilderCreateTmpl,
	"template/builder/delete.tmpl":            templateBuilderDeleteTmpl,
	"template/builder/query.tmpl":             templateBuilderQueryTmpl,
	"template/builder/setter.tmpl":            templateBuilderSetterTmpl,
	"template/builder/update.tmpl":            templateBuilderUpdateTmpl,
	"template/client.tmpl":                    templateClientTmpl,
	"template/config.tmpl":                    templateConfigTmpl,
	"template/context.tmpl":                   templateContextTmpl,
	"template/dialect/gremlin/by.tmpl":        templateDialectGremlinByTmpl,
	"template/dialect/gremlin/create.tmpl":    templateDialectGremlinCreateTmpl,
	"template/dialect/gremlin/decode.tmpl":    templateDialectGremlinDecodeTmpl,
	"template/dialect/gremlin/delete.tmpl":    templateDialectGremlinDeleteTmpl,
	"template/dialect/gremlin/errors.tmpl":    templateDialectGremlinErrorsTmpl,
	"template/dialect/gremlin/group.tmpl":     templateDialectGremlinGroupTmpl,
	"template/dialect/gremlin/meta.tmpl":      templateDialectGremlinMetaTmpl,
	"template/dialect/gremlin/predicate.tmpl": templateDialectGremlinPredicateTmpl,
	"template/dialect/gremlin/query.tmpl":     templateDialectGremlinQueryTmpl,
	"template/dialect/gremlin/update.tmpl":    templateDialectGremlinUpdateTmpl,
	"template/dialect/sql/by.tmpl":            templateDialectSqlByTmpl,
	"template/dialect/sql/create.tmpl":        templateDialectSqlCreateTmpl,
	"template/dialect/sql/decode.tmpl":        templateDialectSqlDecodeTmpl,
	"template/dialect/sql/delete.tmpl":        templateDialectSqlDeleteTmpl,
	"template/dialect/sql/errors.tmpl":        templateDialectSqlErrorsTmpl,
	"template/dialect/sql/group.tmpl":         templateDialectSqlGroupTmpl,
	"template/dialect/sql/meta.tmpl":          templateDialectSqlMetaTmpl,
	"template/dialect/sql/predicate.tmpl":     templateDialectSqlPredicateTmpl,
	"template/dialect/sql/query.tmpl":         templateDialectSqlQueryTmpl,
	"template/dialect/sql/update.tmpl":        templateDialectSqlUpdateTmpl,
	"template/ent.tmpl":                       templateEntTmpl,
	"template/example.tmpl":                   templateExampleTmpl,
	"template/header.tmpl":                    templateHeaderTmpl,
	"template/import.tmpl":                    templateImportTmpl,
	"template/meta.tmpl":                      templateMetaTmpl,
	"template/migrate/migrate.tmpl":           templateMigrateMigrateTmpl,
	"template/migrate/schema.tmpl":            templateMigrateSchemaTmpl,
	"template/predicate.tmpl":                 templatePredicateTmpl,
	"template/tx.tmpl":                        templateTxTmpl,
	"template/where.tmpl":                     templateWhereTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"base.tmpl": &bintree{templateBaseTmpl, map[string]*bintree{}},
		"builder": &bintree{nil, map[string]*bintree{
			"create.tmpl": &bintree{templateBuilderCreateTmpl, map[string]*bintree{}},
			"delete.tmpl": &bintree{templateBuilderDeleteTmpl, map[string]*bintree{}},
			"query.tmpl":  &bintree{templateBuilderQueryTmpl, map[string]*bintree{}},
			"setter.tmpl": &bintree{templateBuilderSetterTmpl, map[string]*bintree{}},
			"update.tmpl": &bintree{templateBuilderUpdateTmpl, map[string]*bintree{}},
		}},
		"client.tmpl":  &bintree{templateClientTmpl, map[string]*bintree{}},
		"config.tmpl":  &bintree{templateConfigTmpl, map[string]*bintree{}},
		"context.tmpl": &bintree{templateContextTmpl, map[string]*bintree{}},
		"dialect": &bintree{nil, map[string]*bintree{
			"gremlin": &bintree{nil, map[string]*bintree{
				"by.tmpl":        &bintree{templateDialectGremlinByTmpl, map[string]*bintree{}},
				"create.tmpl":    &bintree{templateDialectGremlinCreateTmpl, map[string]*bintree{}},
				"decode.tmpl":    &bintree{templateDialectGremlinDecodeTmpl, map[string]*bintree{}},
				"delete.tmpl":    &bintree{templateDialectGremlinDeleteTmpl, map[string]*bintree{}},
				"errors.tmpl":    &bintree{templateDialectGremlinErrorsTmpl, map[string]*bintree{}},
				"group.tmpl":     &bintree{templateDialectGremlinGroupTmpl, map[string]*bintree{}},
				"meta.tmpl":      &bintree{templateDialectGremlinMetaTmpl, map[string]*bintree{}},
				"predicate.tmpl": &bintree{templateDialectGremlinPredicateTmpl, map[string]*bintree{}},
				"query.tmpl":     &bintree{templateDialectGremlinQueryTmpl, map[string]*bintree{}},
				"update.tmpl":    &bintree{templateDialectGremlinUpdateTmpl, map[string]*bintree{}},
			}},
			"sql": &bintree{nil, map[string]*bintree{
				"by.tmpl":        &bintree{templateDialectSqlByTmpl, map[string]*bintree{}},
				"create.tmpl":    &bintree{templateDialectSqlCreateTmpl, map[string]*bintree{}},
				"decode.tmpl":    &bintree{templateDialectSqlDecodeTmpl, map[string]*bintree{}},
				"delete.tmpl":    &bintree{templateDialectSqlDeleteTmpl, map[string]*bintree{}},
				"errors.tmpl":    &bintree{templateDialectSqlErrorsTmpl, map[string]*bintree{}},
				"group.tmpl":     &bintree{templateDialectSqlGroupTmpl, map[string]*bintree{}},
				"meta.tmpl":      &bintree{templateDialectSqlMetaTmpl, map[string]*bintree{}},
				"predicate.tmpl": &bintree{templateDialectSqlPredicateTmpl, map[string]*bintree{}},
				"query.tmpl":     &bintree{templateDialectSqlQueryTmpl, map[string]*bintree{}},
				"update.tmpl":    &bintree{templateDialectSqlUpdateTmpl, map[string]*bintree{}},
			}},
		}},
		"ent.tmpl":     &bintree{templateEntTmpl, map[string]*bintree{}},
		"example.tmpl": &bintree{templateExampleTmpl, map[string]*bintree{}},
		"header.tmpl":  &bintree{templateHeaderTmpl, map[string]*bintree{}},
		"import.tmpl":  &bintree{templateImportTmpl, map[string]*bintree{}},
		"meta.tmpl":    &bintree{templateMetaTmpl, map[string]*bintree{}},
		"migrate": &bintree{nil, map[string]*bintree{
			"migrate.tmpl": &bintree{templateMigrateMigrateTmpl, map[string]*bintree{}},
			"schema.tmpl":  &bintree{templateMigrateSchemaTmpl, map[string]*bintree{}},
		}},
		"predicate.tmpl": &bintree{templatePredicateTmpl, map[string]*bintree{}},
		"tx.tmpl":        &bintree{templateTxTmpl, map[string]*bintree{}},
		"where.tmpl":     &bintree{templateWhereTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
