// Copyright 2019-present Facebook Inc. All rights reserved.
// This source code is licensed under the Apache 2.0 license found
// in the LICENSE file in the root directory of this source tree.

// Code generated by ent, DO NOT EDIT.

package rental

import (
	"time"
)

const (
	// Label holds the string label denoting the rental type in the database.
	Label = "rental"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDate holds the string denoting the date field in the database.
	FieldDate = "date"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldCarID holds the string denoting the car_id field in the database.
	FieldCarID = "car_id"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeCar holds the string denoting the car edge name in mutations.
	EdgeCar = "car"
	// Table holds the table name of the rental in the database.
	Table = "rentals"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "rentals"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_id"
	// CarTable is the table that holds the car relation/edge.
	CarTable = "rentals"
	// CarInverseTable is the table name for the Car entity.
	// It exists in this package in order to avoid circular dependency with the "car" package.
	CarInverseTable = "cars"
	// CarColumn is the table column denoting the car relation/edge.
	CarColumn = "car_id"
)

// Columns holds all SQL columns for rental fields.
var Columns = []string{
	FieldID,
	FieldDate,
	FieldUserID,
	FieldCarID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultDate holds the default value on creation for the "date" field.
	DefaultDate func() time.Time
)
