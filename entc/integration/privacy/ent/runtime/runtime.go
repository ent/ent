// Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
// This source code is licensed under the Apache 2.0 license found
// in the LICENSE file in the root directory of this source tree.

// Code generated by entc, DO NOT EDIT.

package runtime

import (
	"context"

	"github.com/facebookincubator/ent"
	"github.com/facebookincubator/ent/entc/integration/privacy/ent/planet"
	"github.com/facebookincubator/ent/entc/integration/privacy/ent/schema"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	policy := schema.Planet{}.Policy()
	planet.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := policy.EvalWrite(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	planetHooks := schema.Planet{}.Hooks()
	for i, h := range planetHooks {
		planet.Hooks[i+1] = h
	}
	planetFields := schema.Planet{}.Fields()
	// planetDescName is the schema descriptor for name field.
	planetDescName := planetFields[0].Descriptor()
	// planet.NameValidator is a validator for the "name" field. It is called by the builders before save.
	planet.NameValidator = planetDescName.Validators[0].(func(string) error)
}

const (
	Version = "(devel)" // Version of ent codegen.
)
