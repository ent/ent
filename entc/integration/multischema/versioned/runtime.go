// Copyright 2019-present Facebook Inc. All rights reserved.
// This source code is licensed under the Apache 2.0 license found
// in the LICENSE file in the root directory of this source tree.

// Code generated by ent, DO NOT EDIT.

package versioned

import (
	"time"

	"entgo.io/ent/entc/integration/multischema/versioned/friendship"
	"entgo.io/ent/entc/integration/multischema/versioned/group"
	"entgo.io/ent/entc/integration/multischema/versioned/pet"
	"entgo.io/ent/entc/integration/multischema/versioned/schema"
	"entgo.io/ent/entc/integration/multischema/versioned/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	friendshipFields := schema.Friendship{}.Fields()
	_ = friendshipFields
	// friendshipDescWeight is the schema descriptor for weight field.
	friendshipDescWeight := friendshipFields[0].Descriptor()
	// friendship.DefaultWeight holds the default value on creation for the weight field.
	friendship.DefaultWeight = friendshipDescWeight.Default.(int)
	// friendshipDescCreatedAt is the schema descriptor for created_at field.
	friendshipDescCreatedAt := friendshipFields[1].Descriptor()
	// friendship.DefaultCreatedAt holds the default value on creation for the created_at field.
	friendship.DefaultCreatedAt = friendshipDescCreatedAt.Default.(func() time.Time)
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescName is the schema descriptor for name field.
	groupDescName := groupFields[0].Descriptor()
	// group.DefaultName holds the default value on creation for the name field.
	group.DefaultName = groupDescName.Default.(string)
	petFields := schema.Pet{}.Fields()
	_ = petFields
	// petDescName is the schema descriptor for name field.
	petDescName := petFields[0].Descriptor()
	// pet.DefaultName holds the default value on creation for the name field.
	pet.DefaultName = petDescName.Default.(string)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[0].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
}
