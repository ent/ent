// Copyright 2019-present Facebook Inc. All rights reserved.
// This source code is licensed under the Apache 2.0 license found
// in the LICENSE file in the root directory of this source tree.

// Code generated by ent, DO NOT EDIT.

package process

const (
	// Label holds the string label denoting the process type in the database.
	Label = "process"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// EdgeFiles holds the string denoting the files edge name in mutations.
	EdgeFiles = "files"
	// EdgeAttachedFiles holds the string denoting the attached_files edge name in mutations.
	EdgeAttachedFiles = "attached_files"
	// Table holds the table name of the process in the database.
	Table = "processes"
	// FilesTable is the table that holds the files relation/edge. The primary key declared below.
	FilesTable = "attached_files"
	// FilesInverseTable is the table name for the File entity.
	// It exists in this package in order to avoid circular dependency with the "file" package.
	FilesInverseTable = "files"
	// AttachedFilesTable is the table that holds the attached_files relation/edge.
	AttachedFilesTable = "attached_files"
	// AttachedFilesInverseTable is the table name for the AttachedFile entity.
	// It exists in this package in order to avoid circular dependency with the "attachedfile" package.
	AttachedFilesInverseTable = "attached_files"
	// AttachedFilesColumn is the table column denoting the attached_files relation/edge.
	AttachedFilesColumn = "proc_id"
)

// Columns holds all SQL columns for process fields.
var Columns = []string{
	FieldID,
}

var (
	// FilesPrimaryKey and FilesColumn2 are the table columns denoting the
	// primary key for the files relation (M2M).
	FilesPrimaryKey = []string{"proc_id", "f_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
